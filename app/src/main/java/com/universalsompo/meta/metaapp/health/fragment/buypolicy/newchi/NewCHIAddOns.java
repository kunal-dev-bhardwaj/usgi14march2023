package com.universalsompo.meta.metaapp.health.fragment.buypolicy.newchi;

import static java.lang.String.valueOf;

import androidx.appcompat.app.AppCompatActivity;
import androidx.core.content.ContextCompat;

import android.app.Dialog;
import android.content.Intent;
import android.graphics.Color;
import android.graphics.drawable.ColorDrawable;
import android.os.Bundle;
import android.os.Handler;
import android.text.Editable;
import android.text.TextWatcher;
import android.util.Log;
import android.view.Gravity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.Window;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.CompoundButton;
import android.widget.EditText;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.TextView;
import android.widget.Toast;

import com.android.volley.VolleyError;
import com.bigkoo.pickerview.MyOptionsPickerView;
import com.google.android.material.bottomsheet.BottomSheetDialog;
import com.universalsompo.meta.R;
import com.universalsompo.meta.metaapp.health.constants.RequestHealthConstants;
import com.universalsompo.meta.metaapp.health.constants.UrlHealthConstants;

import com.universalsompo.meta.metaapp.health.fragment.buypolicy.offlinecalculator.OfflineCHIAddOns;
import com.universalsompo.meta.metaapp.health.fragment.buypolicy.paymentweb.PaymentWebUrl;
import com.universalsompo.meta.metaapp.intefaces.ProjectVolleyRequest;
import com.universalsompo.meta.metaapp.intefaces.ResponseListener;
import com.universalsompo.meta.metaapp.motor.activities.motor_policies.Motor_AddOns;
import com.universalsompo.meta.metaapp.motor.sharedpreferences.MySharedPreference;
import com.universalsompo.meta.metaapp.utilities.CustomProgressDialog;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.text.Format;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Objects;

public class NewCHIAddOns extends AppCompatActivity {
    CustomProgressDialog customprogress;
    LinearLayout CoPaymentSpinnerLiner, SubLimitSpinnerLiner, SumInsuredDropDown, DailyHospitalLiner, CriticalIllnessLiner, ExtensionPreLiner, ExtensionPostLiner, MaternityLiner, CoverageLiner, ConditionWaiverLiner, PreExistingDiseaseLiner, OutpatientDentalLiner, EmergencyTravellingLiner, SecondOpinionLiner, RestCureLiner, ObesityWeightLiner, SterilityInfertilityLiner, EnhancedOrganLiner, MedicallyAdvisedLiner, EmergencyAssistanceLine, HomeCareLiner, WellnessBenefitLiner, DiseaseManagementLiner, GlobalCoverLiner, ModernTreatmentsLiner, PremiumWaiverLiner, LinerPackage;
    TextView insuredMemberTxt,PersonalAccidentPackageB, PersonalAccidentPackageTwoB, PersonalAccidentPackageThreeB, PersonalAccidentPackageFourB, ViewDetails, PlanTypeTXT, PlanTypeTXT2, SumInsuredSelectPlan, SumInsuredDiGiProTxt, TotalPremium, TotalPremiumSelectPlan, TotalPremiumSecond, ConditionWaiverPackageOne, ConditionWaiverPackageTwo, ConditionWaiverPackageThree, ConditionWaiverPackageFour, ExtensionPreHospitalizationPackageOne, ExtensionProHospitalizationPackageOne, EmergencyAssistancePackageOe, PersonalAccidentPackageOne, WellnessBenefitPackageOne, TotalPremiumPackageOne, PremiumWaiverPackageTwo, SecondOpinionPackageTwo, ModernTreatments, PersonalAccidentPackageTwo, EmergencyAssistancePackageTwo, SumPremiumPackageTwo, NonMedicalPackageThree, MedicallyAdvisedPackageThree, EnhancedOrganPackageThree, PersonalAccidentPackageThree, HomeCarePackageThree, SumPremiumPackageThree, PersonalAccidentPackageFour, CriticalIllnessPackageFour, ModernTreatmentPackageFour, HospitalDailyCashPackageFour, SumPremiumPackageFour, TreatmentTiredNetworkPackageFive, SubLimitPackageFive, CoPaymentPackageFive, WellnessBenefitPackageFive, SumPremiumPackageFive;
    String strIDTypeName,strDob,permAndCorresAddSame,firstName, middleName,lastName,ckycNo,uniqueTransactionNumber,strPinCodeEdit,strCityEdit,strStateEdit,address1,address2,address3,corresAddress1,corresAddress2,corresAddress3,strEmailIDEditSelf,strProposerEdtName,TreatmentCheckBoxCheck,GSt, CoPaymentStatus1, TreatmentStatus1, SubCategoryDiscountStatus1, strSubLimitEditText, strCoPaymentEditText, str_policyType_spinner1, PersonalAccidentCoverPremiumB, OrganDiscountStatus, str_age, strPackageSix, PersonalStatusChildOne, PersonalAccidentACoverChildOneStatus, PersonalAccidentBCoverChildOneStatus, PersonalStatusChildTwo, PersonalAccidentAChildTwoCoverStatus, PersonalAccidentBChildTwoCoverStatus, PersonalStatusChildThird, PersonalAccidentACoverChildThirdStatus, PersonalAccidentBCoverChildThirdStatus, PersonalStatusChildFour, PersonalAccidentACoverChildFourStatus, PersonalAccidentBCoverChildFourStatus, PersonalStatusChildOne1, PersonalAccidentACoverChildOneStatus1, PersonalAccidentBCoverChildOneStatus1, PersonalStatusChildTwo1, PersonalAccidentAChildTwoCoverStatus1, PersonalAccidentBChildTwoCoverStatus1, PersonalStatusChildThird1, PersonalAccidentACoverChildThirdStatus1, PersonalAccidentBCoverChildThirdStatus1, PersonalStatusChildFour1, PersonalAccidentACoverChildFourStatus1, PersonalAccidentBCoverChildFourStatus1, SubCategoryDiscountStatus = "", SubCategoryDiscountStatusCheck = "", CoPaymentCheckBoxCheck = "", SubCategory = "", FamilyComposition = "", ParentComposition = "", yearRadio, strCheckBoxSelf, str_edt_name = "", strEdtNameSelf = "", str_edt_phone = "", str_email = "", strFor = "", strGenderSpinner = "", strGender = "", today = "", nextYear = "", str_policyType_spinner = "", strPolicyNumber = "", str_IndividualTypeEdit = "", strPolicyTenure = "", CoPaymentLoading = "", strSelfAgeEditText = "", strSumInsured = "", PlanType = "", strPlanTypeTXT = "", strPlanTypeTXT2 = "", NetPremium = "", strTotalPremium = "", PosPolicyNo = "", BasicStatus = "", PersonalStatus = "", PersonalAccidentCategory = "", CriticalStatus = "", DailyHospitalSatus = "", ModernTreatmentsStatus = "", ExtensionPreHospitalization = "", ExtensionPr0Hospitalization = "", MaternityAndChildcareMale="",MaternityAndChildcare = "", CoverageNonMedical = "", ConditionWaiverStatus = "", PersonalAccidentACoverStatus = "", PersonalAccidentBCoverStatus = "", PreExistingDiseaseStatus = "", OutpatientDentalStatus = "", EmergencyTravellingStatus = "",
            SecondOpinionStatus = "", RestCureStatus = "", ObesityWeightStatus = "", SterilityInfertilityStatus = "", MaternityAndChildcareAddOn = "", EnhancedOrganStatus = "", PremiumWaiverStatus = "", GlobalCoverStatus = "", MedicallyAdvisedStatus = "", EmergencyAssistanceStatus = "", HomeCareStatus = "", WellnessBenefitStatus = "", DiseaseManagementStatus = "", BasicInsuranceCoverPremium = "", PersonalAccidentCoverPremium = "", PersonalAccidentACoverPremium = "", PersonalAccidentBCoverPremium = "", CriticalIllnessCoverPremium = "", DailyHospitalCoverPremium = "", ModernTreatmentCoverPremium = "", ExtensionPreHospitalizationCoverPremium = "", ExtensionProHospitalizationCoverPremium = "", MaternityChildcareCoverPremium = "", CoverageNonMedicalCoverPremium = "", ConditionWaiverCoverPremium = "", PreExistingDiseaseCoverPremium = "", OutpatientDentalCoverPremium = "", EmergencyTravellingCoverPremium = "", SecondOpinionCoverPremium = "", RestCureCoverPremium = "", ObesityWeightCoverPremium = "", SterilityInfertilityCoverPremium = "", EnhancedCoverPremium = "", PremiumWaiverCoverPremium = "",
            DirectPolicyDiscountPremium = "", GlobalCoverCoverPremium = "", MedicallyAdvisedCoverPremium = "", EmergencyAssistanceCoverPremium = "", HomeCareCoverPremium = "", WellnessBenefitCoverPremium = "", DiseaseManagementCoverPremium = "", LoyaltyDiscountStatus = "", CoPaymentStatus = "", TreatmentStatus = "", sumPremiumPackageOne = "", sumPremiumPackageTwo = "", sumPremiumPackageThree = "", sumPremiumPackageFour = "", sumPremiumPackageFive = "";
    EditText SelfNameText, SumInsuredEditText, PolicyNumber, SubLimitEditText, CoPaymentEditText;
    LinearLayout relativeSecond;
    LinearLayout continueButton, CoPaymentPercentageLiner, LinerPolicyNumber, SubLimitLiner;
    CheckBox TreatmentCheckBox,OrganCheckBox, SubLimitCheckBox, checkBoxLoyaltyDiscount, CheckBoxDailyCash, CheckBoxCriticalIllnes, CheckBoxPreHospitalization, CheckBoxProHospitalization, CheckBoxMaternityChildcare, CheckBoxCoverageNonMedical, CheckBoxConditionWaiver, CheckBoxPersonalCoverA, CheckBoxPersonalCoverB, CheckBoxPreExistingDisease, CheckBoxOutpatientDental, CheckBoxEmergencyTravelling, CheckBoxSecondOpinion, CheckBoxRestCure, CheckBoxObesityWeight, CheckBoxSterilityInfertility, CheckBoxEnhancedOrgan, CheckBoxMedicallyAdvised, CheckBoxHomeCare, CheckBoxWellnessBenefit, CheckBoxDiseaseManagement, CheckBoxModernTreatments, CheckBoxPremiumWaiver, CheckBoxGlobalCover, CheckBoxEmergencyAssistance, CoPaymentCheckBox;
    Button SelectAddOnsButton;
    Date date;
    int selectYearProposer,DirectPolicy, loyalityDiscount, TiresDiscount, copayemntMax;
    Format formatter;
    RadioButton ACheckBox, BCheckBox, CCheckBox, OneYear, TwoYearRadio, ThreeYearRadio, oneYearSecondRadio, TwoYearSecondRadio, ThreeYearSecondRadio, TenCheckBox, TwentyCheckBox, ThirtyCheckBox, fortyCheckBox, FiftyCheckBox, PackageOne, PackageTwo, PackageThree, PackageFour, PackageFive, PackageSix;
    ImageView ImageEye,ImageEye1,infoImge,AddOnsBack, DailyHospitalAddImg, CriticalIllnessImg, ExtensionPreImg, ExtensionPostImg, MaternityImg, CoverageImg, ConditionWaiverImg, PreExistingDiseaseImg, OutpatientDentalImg, EmergencyTravellingImg, SecondOpinionImg, RestCureImg, ObesityWeightImg, SterilityInfertilityImg, EnhancedOrganImg, MedicallyAdvisedImg, EmergencyAssistanceImg, HomeCareImg, WellnessBenefitImg, DiseaseManagementImg, GlobalCoverImg, ModernTreatmentsImg, PremiumWaiverImg;
    HorizontalScrollView horizontalScroll;
    int CountScroll = 0;
    int mCounter = 0;
    int FamilyTypeCounter = 0;
    int selectYearAdult = 0;
    int selectFatherLawAdult = 0;
    int selectYearFatherAdult = 0;
    double LongTerm,OrganDonar, sublimt, Discounts, CardDirectPolicyDiscountPremium, CardLongTermDiscountDiscountPremium, BasicInsuranceCoverPremiumDouble, doubleCoPaymentDiscountPremium, LongTermDiscountDiscountPremium, LoyaltyDiscountPremium, SubCategoryDiscountPremium, OrganDonorDiscountPremium, doubleTiredTreatment, BasicInsuranceCoverPremium1, PersonalAccidentCoverPremium1;
    double PersonalAccidentACoverPremium1, PersonalAccidentBCoverPremium1;
    double CriticalIllnessCoverPremium1, DailyHospitalCoverPremium1, ModernTreatmentCoverPremium1, ExtensionPreHospitalizationCoverPremium1, ExtensionProHospitalizationCoverPremium1, MaternityChildcareCoverPremium1, CoverageNonMedicalCoverPremium1, ConditionWaiverCoverPremium1, PreExistingDiseaseCoverPremium1, OutpatientDentalCoverPremium1, EmergencyTravellingCoverPremium1, SecondOpinionCoverPremium1, RestCureCoverPremium1, ObesityWeightCoverPremium1, SterilityInfertilityCoverPremium1, EnhancedCoverPremium1, PremiumWaiverCoverPremium1, GlobalCoverCoverPremium1, MedicallyAdvisedCoverPremium1, EmergencyAssistanceCoverPremium1, HomeCareCoverPremium1, WellnessBenefitCoverPremium1, DiseaseManagementCoverPremium1;
    int addons,selectYearSecondAdult, selectYearMotherAdult, selectMotherLawAdult, selectFirstYearChild, selectSecSonChild, selectThirdSonChild, selectYearChildFour;
    String TreatmentPremium, TreatmentPremium2, SubCategoryDiscountPremium2, CoPaymentDiscountPremium2, SubCategoryDiscountPremium1, CoPaymentDiscountPremium, checkPackage, strCheckBoxSpouse = "", strSpouseAgeEditText = "", strCheckBoxMother = "", strMotherAgeEditText = "", strFatherAgeEditText = "", strCheckBoxFather = "", strCheckBoxMotherLaw = "", strMotherLawAgeEditText = "", strCheckBoxFatherLaw = "", strFatherLawAgeEditText = "", strFirstSonAgeEditText = "", strSecondSonAgeEditText = "", strThirdSonAgeEditText = "", strFourSonAgeEditText = "", strCheckBoxSon = "", strPackageOne = "", strPackage1 = "", strPackageTwo = "", strPackageThree = "", strPackageFour = "", strPackageFive = "";
    MySharedPreference mySharedPreference;
    String SterilityInfertilityMale,LongTermDiscountStatus = "", PersonalStatus1 = "", CriticalStatus1 = "", DailyHospitalSatus1 = "", ModernTreatmentsStatus1 = "", ExtensionPreHospitalization1 = "", ExtensionPr0Hospitalization1 = "", MaternityAndChildcare1 = "", CoverageNonMedical1 = "", ConditionWaiverStatus1 = "", PersonalAccidentACoverStatus1 = "", PersonalAccidentBCoverStatus1 = "", PreExistingDiseaseStatus1 = "", OutpatientDentalStatus1 = "", EmergencyTravellingStatus1 = "",
            SecondOpinionStatus1 = "", RestCureStatus1 = "", ObesityWeightStatus1 = "", SterilityInfertilityStatus1 = "", MaleSterilityInfertilityStatus1 = "", MaleMaternityAndChildcareAddOn = "", EnhancedOrganStatus1 = "", PremiumWaiverStatus1 = "", GlobalCoverStatus1 = "", MedicallyAdvisedStatus1 = "", EmergencyAssistanceStatus1 = "", HomeCareStatus1 = "", WellnessBenefitStatus1 = "", DiseaseManagementStatus1 = "", TreatmentTiredNetworkPackageStatus1 = "";
    String strBasicPremium, ConditionWaiverCoverPremium2, PersonalAccidentCoverPremium2, CriticalIllnessCoverPremium2, DailyHospitalCoverPremium2, ModernTreatmentCoverPremium2, ExtensionPreHospitalizationCoverPremium2, ExtensionProHospitalizationCoverPremium2, CoverageNonMedicalCoverPremium2, SecondOpinionCoverPremium2, EnhancedCoverPremium2, PremiumWaiverCoverPremium2, MedicallyAdvisedCoverPremium2, EmergencyAssistanceCoverPremium2, HomeCareCoverPremium2, WellnessBenefitCoverPremium2;
    double BasicInsuranceCoverPremiumChild1, PersonalAccidentCoverPremiumCh1, CriticalIllnessCoverPremiumCh1, DailyHospitalCoverPremiumCh1, ModernTreatmentCoverPremiumCh1, ExtensionPreHospitalizationCoverPremiumCh1, ExtensionProHospitalizationCoverPremiumCh1, MaternityChildcareCoverPremiumCh1, CoverageNonMedicalCoverPremiumCh1, ConditionWaiverCoverPremiumCh1, PreExistingDiseaseCoverPremiumCh1, OutpatientDentalCoverPremiumCh1, EmergencyTravellingCoverPremiumCh1, SecondOpinionCoverPremiumCh1, RestCureCoverPremiumCh1, ObesityWeightCoverPremiumCh1, SterilityInfertilityCoverPremiumCh1, EnhancedCoverPremiumCh1, PremiumWaiverCoverPremiumCh1, GlobalCoverCoverPremiumCh1, MedicallyAdvisedCoverPremiumCh1, EmergencyAssistanceCoverPremiumCh1, HomeCareCoverPremiumCh1, WellnessBenefitCoverPremiumCh1, DiseaseManagementCoverPremiumCh1;
    double BasicInsuranceCoverPremiumChild2, PersonalAccidentCoverPremiumCh2, CriticalIllnessCoverPremiumCh2, DailyHospitalCoverPremiumCh2, ModernTreatmentCoverPremiumCh2, ExtensionPreHospitalizationCoverPremiumCh2, ExtensionProHospitalizationCoverPremiumCh2, MaternityChildcareCoverPremiumCh2, CoverageNonMedicalCoverPremiumCh2, ConditionWaiverCoverPremiumCh2, PreExistingDiseaseCoverPremiumCh2, OutpatientDentalCoverPremiumCh2, EmergencyTravellingCoverPremiumCh2, SecondOpinionCoverPremiumCh2, RestCureCoverPremiumCh2, ObesityWeightCoverPremiumCh2, SterilityInfertilityCoverPremiumCh2, EnhancedCoverPremiumCh2, PremiumWaiverCoverPremiumCh2, GlobalCoverCoverPremiumCh2, MedicallyAdvisedCoverPremiumCh2, EmergencyAssistanceCoverPremiumCh2, HomeCareCoverPremiumCh2, WellnessBenefitCoverPremiumCh2, DiseaseManagementCoverPremiumCh2;
    double BasicInsuranceCoverPremiumChild3, PersonalAccidentCoverPremiumCh3, CriticalIllnessCoverPremiumCh3, DailyHospitalCoverPremiumCh3, ModernTreatmentCoverPremiumCh3, ExtensionPreHospitalizationCoverPremiumCh3, ExtensionProHospitalizationCoverPremiumCh3, MaternityChildcareCoverPremiumCh3, CoverageNonMedicalCoverPremiumCh3, ConditionWaiverCoverPremiumCh3, PreExistingDiseaseCoverPremiumCh3, OutpatientDentalCoverPremiumCh3, EmergencyTravellingCoverPremiumCh3, SecondOpinionCoverPremiumCh3, RestCureCoverPremiumCh3, ObesityWeightCoverPremiumCh3, SterilityInfertilityCoverPremiumCh3, EnhancedCoverPremiumCh3, PremiumWaiverCoverPremiumCh3, GlobalCoverCoverPremiumCh3, MedicallyAdvisedCoverPremiumCh3, EmergencyAssistanceCoverPremiumCh3, HomeCareCoverPremiumCh3, WellnessBenefitCoverPremiumCh3, DiseaseManagementCoverPremiumCh3;
    double BasicInsuranceCoverPremiumChild4, PersonalAccidentCoverPremiumCh4, CriticalIllnessCoverPremiumCh4, DailyHospitalCoverPremiumCh4, ModernTreatmentCoverPremiumCh4, ExtensionPreHospitalizationCoverPremiumCh4, ExtensionProHospitalizationCoverPremiumCh4, MaternityChildcareCoverPremiumCh4, CoverageNonMedicalCoverPremiumCh4, ConditionWaiverCoverPremiumCh4, PreExistingDiseaseCoverPremiumCh4, OutpatientDentalCoverPremiumCh4, EmergencyTravellingCoverPremiumCh4, SecondOpinionCoverPremiumCh4, RestCureCoverPremiumCh4, ObesityWeightCoverPremiumCh4, SterilityInfertilityCoverPremiumCh4, EnhancedCoverPremiumCh4, PremiumWaiverCoverPremiumCh4, GlobalCoverCoverPremiumCh4, MedicallyAdvisedCoverPremiumCh4, EmergencyAssistanceCoverPremiumCh4, HomeCareCoverPremiumCh4, WellnessBenefitCoverPremiumCh4, DiseaseManagementCoverPremiumCh4;
    double BasicInsuranceCoverPremiumAd1, PersonalAccidentCoverPremiumAd1, CriticalIllnessCoverPremiumAd1, DailyHospitalCoverPremiumAd1, ModernTreatmentCoverPremiumAd1, ExtensionPreHospitalizationCoverPremiumAd1, ExtensionProHospitalizationCoverPremiumAd1, MaternityChildcareCoverPremiumAd1, CoverageNonMedicalCoverPremiumAd1, ConditionWaiverCoverPremiumAd1, PreExistingDiseaseCoverPremiumAd1, OutpatientDentalCoverPremiumAd1, EmergencyTravellingCoverPremiumAd1, SecondOpinionCoverPremiumAd1, RestCureCoverPremiumAd1, ObesityWeightCoverPremiumAd1, SterilityInfertilityCoverPremiumAd1, EnhancedCoverPremiumAd1, PremiumWaiverCoverPremiumAd1, GlobalCoverCoverPremiumAd1, MedicallyAdvisedCoverPremiumAd1, EmergencyAssistanceCoverPremiumAd1, HomeCareCoverPremiumAd1, WellnessBenefitCoverPremiumAd1, DiseaseManagementCoverPremiumAd1;
    double BasicInsuranceCoverPremiumAd2, PersonalAccidentCoverPremiumAd2, CriticalIllnessCoverPremiumAd2, DailyHospitalCoverPremiumAd2, ModernTreatmentCoverPremiumAd2, ExtensionPreHospitalizationCoverPremiumAd2, ExtensionProHospitalizationCoverPremiumAd2, MaternityChildcareCoverPremiumAd2, CoverageNonMedicalCoverPremiumAd2, ConditionWaiverCoverPremiumAd2, PreExistingDiseaseCoverPremiumAd2, OutpatientDentalCoverPremiumAd2, EmergencyTravellingCoverPremiumAd2, SecondOpinionCoverPremiumAd2, RestCureCoverPremiumAd2, ObesityWeightCoverPremiumAd2, SterilityInfertilityCoverPremiumAd2, EnhancedCoverPremiumAd2, PremiumWaiverCoverPremiumAd2, GlobalCoverCoverPremiumAd2, MedicallyAdvisedCoverPremiumAd2, EmergencyAssistanceCoverPremiumAd2, HomeCareCoverPremiumAd2, WellnessBenefitCoverPremiumAd2, DiseaseManagementCoverPremiumAd2;
    double BasicInsuranceCoverPremiumM, PersonalAccidentCoverPremiumM, CriticalIllnessCoverPremiumM, DailyHospitalCoverPremiumM, ModernTreatmentCoverPremiumM, ExtensionPreHospitalizationCoverPremiumM, ExtensionProHospitalizationCoverPremiumM, MaternityChildcareCoverPremiumM, CoverageNonMedicalCoverPremiumM, ConditionWaiverCoverPremiumM, PreExistingDiseaseCoverPremiumM, OutpatientDentalCoverPremiumM, EmergencyTravellingCoverPremiumM, SecondOpinionCoverPremiumM, RestCureCoverPremiumM, ObesityWeightCoverPremiumM, SterilityInfertilityCoverPremiumM, EnhancedCoverPremiumM, PremiumWaiverCoverPremiumM, GlobalCoverCoverPremiumM, MedicallyAdvisedCoverPremiumM, EmergencyAssistanceCoverPremiumM, HomeCareCoverPremiumM, WellnessBenefitCoverPremiumM, DiseaseManagementCoverPremiumM;
    double BasicInsuranceCoverPremiumF, PersonalAccidentCoverPremiumF, CriticalIllnessCoverPremiumF, DailyHospitalCoverPremiumF, ModernTreatmentCoverPremiumF, ExtensionPreHospitalizationCoverPremiumF, ExtensionProHospitalizationCoverPremiumF, MaternityChildcareCoverPremiumF, CoverageNonMedicalCoverPremiumF, ConditionWaiverCoverPremiumF, PreExistingDiseaseCoverPremiumF, OutpatientDentalCoverPremiumF, EmergencyTravellingCoverPremiumF, SecondOpinionCoverPremiumF, RestCureCoverPremiumF, ObesityWeightCoverPremiumF, SterilityInfertilityCoverPremiumF, EnhancedCoverPremiumF, PremiumWaiverCoverPremiumF, GlobalCoverCoverPremiumF, MedicallyAdvisedCoverPremiumF, EmergencyAssistanceCoverPremiumF, HomeCareCoverPremiumF, WellnessBenefitCoverPremiumF, DiseaseManagementCoverPremiumF;
    double BasicPremiumAdd, conditionAdd, ExtensionPreAdd, ExtensionProAdd, EmergencyAdd, PersonalAccidentAdd, WellnessAdd, PewmiumWaiverAdd, SecondOpinionAdd, ModernTreatAdd, CoverageNonAdd, MedicallyAdvisedAdd, EnhancedAdd, HomeCareAdd, CriticalAdd, DailyCashAdd, OutpatientDentalAdd, EmergencyTravellingAdd, PreExistingAdd, MaternityAdd, DiseaseManagementAdd, RestCureAdd, SterilityAdd, GlobalAdd, ObesityWeightAdd;
    double BasicPremiumAdd1, conditionAdd1, ExtensionPreAdd1, ExtensionProAdd1, EmergencyAdd1, PersonalAccidentAdd1, WellnessAdd1, PewmiumWaiverAdd1, SecondOpinionAdd1, ModernTreatAdd1, CoverageNonAdd1, MedicallyAdvisedAdd1, EnhancedAdd1, HomeCareAdd1, CriticalAdd1, DailyCashAdd1, OutpatientDentalAdd1, EmergencyTravellingAdd1, PreExistingAdd1, MaternityAdd1, RestCureAdd1, SterilityAdd1, GlobalAdd1, ObesityWeightAdd1, DiseaseManagementAdd1;
    JSONObject CoverDetailsJsonObject1, JsonObjectCover1, JsonObjectCoverCh2, JsonObjectCoverCh3, JsonObjectCoverCh4;
    JSONArray InsuredDetailsGroupArray1, InsuredDetailsGroupArray;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_new_chiadd_ons);
        getWindow().setStatusBarColor(ContextCompat.getColor(NewCHIAddOns.this, R.color.colorPrimaryDark));
        mySharedPreference = MySharedPreference.getInstance(NewCHIAddOns.this);
        customprogress = new CustomProgressDialog(NewCHIAddOns.this);
        strEmailIDEditSelf = getIntent().getStringExtra("strEmailIDEditSelf");
        str_edt_name = getIntent().getStringExtra("str_edt_name");
        strEdtNameSelf = getIntent().getStringExtra("strEdtNameSelf");
        str_age = getIntent().getStringExtra("str_age");
        str_edt_phone = getIntent().getStringExtra("str_edt_phone");
        str_email = getIntent().getStringExtra("str_email");
        strCheckBoxSelf = getIntent().getStringExtra("strCheckBoxSelf");
        str_policyType_spinner = getIntent().getStringExtra("str_policyType_spinner");
        str_IndividualTypeEdit = getIntent().getStringExtra("str_IndividualTypeEdit");
        strSelfAgeEditText = getIntent().getStringExtra("strSelfAgeEditText");
        strGenderSpinner = getIntent().getStringExtra("strGenderSpinner");
        strCheckBoxSpouse = getIntent().getStringExtra("strCheckBoxSpouse");
        strSpouseAgeEditText = getIntent().getStringExtra("strSpouseAgeEditText");
        strCheckBoxMother = getIntent().getStringExtra("strCheckBoxMother");
        strMotherAgeEditText = getIntent().getStringExtra("strMotherAgeEditText");
        strFatherAgeEditText = getIntent().getStringExtra("strFatherAgeEditText");
        strCheckBoxFather = getIntent().getStringExtra("strCheckBoxFather");
        strCheckBoxMotherLaw = getIntent().getStringExtra("strCheckBoxMotherLaw");
        strMotherLawAgeEditText = getIntent().getStringExtra("strMotherLawAgeEditText");
        strCheckBoxFatherLaw = getIntent().getStringExtra("strCheckBoxFatherLaw");
        strFatherLawAgeEditText = getIntent().getStringExtra("strFatherLawAgeEditText");
        strFirstSonAgeEditText = getIntent().getStringExtra("strFirstSonAgeEditText");
        strSecondSonAgeEditText = getIntent().getStringExtra("strSecondSonAgeEditText");
        strThirdSonAgeEditText = getIntent().getStringExtra("strThirdSonAgeEditText");
        strFourSonAgeEditText = getIntent().getStringExtra("strFourSonAgeEditText");
        strCheckBoxSon = getIntent().getStringExtra("strCheckBoxSon");
        yearRadio = getIntent().getStringExtra("yearRadio");
        strSumInsured = getIntent().getStringExtra("strSumInsured");
        selectYearProposer = getIntent().getIntExtra("selectYearProposer", 0);
        mCounter = getIntent().getIntExtra("mCounter", 0);
        selectYearAdult = getIntent().getIntExtra("selectYearAdult", 0);
        selectYearSecondAdult = getIntent().getIntExtra("selectYearSecondAdult", 0);
        selectYearMotherAdult = getIntent().getIntExtra("selectYearMotherAdult", 0);
        selectMotherLawAdult = getIntent().getIntExtra("selectMotherLawAdult", 0);
        selectFirstYearChild = getIntent().getIntExtra("selectFirstYearChild", 0);
        selectSecSonChild = getIntent().getIntExtra("selectSecSonChild", 0);
        selectThirdSonChild = getIntent().getIntExtra("selectThirdSonChild", 0);
        selectYearChildFour = getIntent().getIntExtra("selectYearChildFour", 0);
        FamilyTypeCounter = getIntent().getIntExtra("FamilyTypeCounter", 0);
        strFor = getIntent().getStringExtra("strFor");
        BasicStatus = getIntent().getStringExtra("BasicStatus");
        PersonalStatus = getIntent().getStringExtra("PersonalStatus");
        PersonalAccidentCategory = getIntent().getStringExtra("PersonalAccidentCategory");
        CriticalStatus = getIntent().getStringExtra("CriticalStatus");
        DailyHospitalSatus = getIntent().getStringExtra("DailyHospitalSatus");
        ModernTreatmentsStatus = getIntent().getStringExtra("ModernTreatmentsStatus");
        ExtensionPreHospitalization = getIntent().getStringExtra("ExtensionPreHospitalization");
        ExtensionPr0Hospitalization = getIntent().getStringExtra("ExtensionPr0Hospitalization");
        MaternityAndChildcare = getIntent().getStringExtra("MaternityAndChildcare");
        CoverageNonMedical = getIntent().getStringExtra("CoverageNonMedical");
        ConditionWaiverStatus = getIntent().getStringExtra("ConditionWaiverStatus");
        PersonalAccidentACoverStatus = getIntent().getStringExtra("PersonalAccidentACoverStatus");
        PersonalAccidentBCoverStatus = getIntent().getStringExtra("PersonalAccidentBCoverStatus");
        PreExistingDiseaseStatus = getIntent().getStringExtra("PreExistingDiseaseStatus");
        OutpatientDentalStatus = getIntent().getStringExtra("OutpatientDentalStatus");
        SecondOpinionStatus = getIntent().getStringExtra("SecondOpinionStatus");
        RestCureStatus = getIntent().getStringExtra("RestCureStatus");
        ObesityWeightStatus = getIntent().getStringExtra("ObesityWeightStatus");
        SterilityInfertilityStatus = getIntent().getStringExtra("SterilityInfertilityStatus");
        SterilityInfertilityMale = getIntent().getStringExtra("SterilityInfertilityMale");
        EnhancedOrganStatus = getIntent().getStringExtra("EnhancedOrganStatus");
        GlobalCoverStatus = getIntent().getStringExtra("GlobalCoverStatus");
        MedicallyAdvisedStatus = getIntent().getStringExtra("MedicallyAdvisedStatus");
        EmergencyAssistanceStatus = getIntent().getStringExtra("EmergencyAssistanceStatus");
        HomeCareStatus = getIntent().getStringExtra("HomeCareStatus");
        WellnessBenefitStatus = getIntent().getStringExtra("WellnessBenefitStatus");
        DiseaseManagementStatus = getIntent().getStringExtra("DiseaseManagementStatus");
        LoyaltyDiscountStatus = getIntent().getStringExtra("LoyaltyDiscountStatus");
        CoPaymentStatus = getIntent().getStringExtra("CoPaymentStatus");
        EmergencyTravellingStatus = getIntent().getStringExtra("EmergencyTravellingStatus");
        strPolicyNumber = getIntent().getStringExtra("strPolicyNumber");
        CoPaymentLoading = getIntent().getStringExtra("CoPaymentLoading");
        PremiumWaiverStatus = getIntent().getStringExtra("PremiumWaiverStatus");
        PosPolicyNo = getIntent().getStringExtra("PosPolicyNo");
        strPackageOne = getIntent().getStringExtra("strPackageOne");
        strPackage1 = getIntent().getStringExtra("strPackage1");
        strPackageTwo = getIntent().getStringExtra("strPackageTwo");
        strPackageThree = getIntent().getStringExtra("strPackageThree");
        strPackageFour = getIntent().getStringExtra("strPackageFour");
        strPackageFive = getIntent().getStringExtra("strPackageFive");
        strPackageSix = getIntent().getStringExtra("strPackageSix");
        PlanType = getIntent().getStringExtra("PlanType");
        LongTermDiscountStatus = getIntent().getStringExtra("LongTermDiscountStatus");
        SubCategoryDiscountStatus = getIntent().getStringExtra("SubCategoryDiscountStatus");
        SubCategory = getIntent().getStringExtra("SubCategory");
        PersonalAccidentACoverChildFourStatus = getIntent().getStringExtra("PersonalAccidentACoverChildFourStatus");
        PersonalAccidentBCoverChildFourStatus = getIntent().getStringExtra("PersonalAccidentBCoverChildFourStatus");
        PersonalStatusChildFour = getIntent().getStringExtra("PersonalStatusChildFour");
        PersonalStatusChildThird = getIntent().getStringExtra("PersonalStatusChildThird");
        PersonalAccidentACoverChildThirdStatus = getIntent().getStringExtra("PersonalAccidentACoverChildThirdStatus");
        PersonalAccidentBCoverChildThirdStatus = getIntent().getStringExtra("PersonalAccidentBCoverChildThirdStatus");
        PersonalAccidentBChildTwoCoverStatus = getIntent().getStringExtra("PersonalAccidentBChildTwoCoverStatus");
        PersonalAccidentAChildTwoCoverStatus = getIntent().getStringExtra("PersonalAccidentAChildTwoCoverStatus");
        PersonalStatusChildTwo = getIntent().getStringExtra("PersonalStatusChildTwo");
        PersonalAccidentACoverChildOneStatus = getIntent().getStringExtra("PersonalAccidentACoverChildOneStatus");
        PersonalAccidentBCoverChildOneStatus = getIntent().getStringExtra("PersonalAccidentBCoverChildOneStatus");
        DirectPolicyDiscountPremium = getIntent().getStringExtra("DirectPolicyDiscountPremium");
        FamilyComposition = getIntent().getStringExtra("FamilyComposition");
        ParentComposition = getIntent().getStringExtra("ParentComposition");
        PersonalStatusChildOne = getIntent().getStringExtra("PersonalStatusChildOne");
        DailyHospitalCoverPremium = getIntent().getStringExtra("DailyHospitalCoverPremium");
        CriticalIllnessCoverPremium = getIntent().getStringExtra("CriticalIllnessCoverPremium");
        ExtensionPreHospitalizationCoverPremium = getIntent().getStringExtra("ExtensionPreHospitalizationCoverPremium");
        ExtensionProHospitalizationCoverPremium = getIntent().getStringExtra("ExtensionProHospitalizationCoverPremium");
        MaternityChildcareCoverPremium = getIntent().getStringExtra("MaternityChildcareCoverPremium");
        CoverageNonMedicalCoverPremium = getIntent().getStringExtra("CoverageNonMedicalCoverPremium");
        ConditionWaiverCoverPremium = getIntent().getStringExtra("ConditionWaiverCoverPremium");
        PersonalAccidentCoverPremium = getIntent().getStringExtra("PersonalAccidentCoverPremium");
        PreExistingDiseaseCoverPremium = getIntent().getStringExtra("PreExistingDiseaseCoverPremium");
        OutpatientDentalCoverPremium = getIntent().getStringExtra("OutpatientDentalCoverPremium");
        EmergencyTravellingCoverPremium = getIntent().getStringExtra("EmergencyTravellingCoverPremium");
        SecondOpinionCoverPremium = getIntent().getStringExtra("SecondOpinionCoverPremium");
        RestCureCoverPremium = getIntent().getStringExtra("RestCureCoverPremium");
        ObesityWeightCoverPremium = getIntent().getStringExtra("ObesityWeightCoverPremium");
        SterilityInfertilityCoverPremium = getIntent().getStringExtra("SterilityInfertilityCoverPremium");
        EnhancedCoverPremium = getIntent().getStringExtra("EnhancedCoverPremium");
        MedicallyAdvisedCoverPremium = getIntent().getStringExtra("MedicallyAdvisedCoverPremium");
        EmergencyAssistanceCoverPremium = getIntent().getStringExtra("EmergencyAssistanceCoverPremium");
        HomeCareCoverPremium = getIntent().getStringExtra("HomeCareCoverPremium");
        WellnessBenefitCoverPremium = getIntent().getStringExtra("WellnessBenefitCoverPremium");
        DiseaseManagementCoverPremium = getIntent().getStringExtra("DiseaseManagementCoverPremium");
        GlobalCoverCoverPremium = getIntent().getStringExtra("GlobalCoverCoverPremium");
        ModernTreatmentCoverPremium = getIntent().getStringExtra("ModernTreatmentCoverPremium");
        PremiumWaiverCoverPremium = getIntent().getStringExtra("PremiumWaiverCoverPremium");
        OrganDiscountStatus = getIntent().getStringExtra("OrganDiscountStatus");
        checkPackage = getIntent().getStringExtra("checkPackage");
        CoPaymentCheckBoxCheck = getIntent().getStringExtra("CoPaymentCheckBoxCheck");
        SubCategoryDiscountStatusCheck = getIntent().getStringExtra("SubCategoryDiscountStatusCheck");
        strCoPaymentEditText = getIntent().getStringExtra("strCoPaymentEditText");
        strSubLimitEditText = getIntent().getStringExtra("strSubLimitEditText");
        strBasicPremium = getIntent().getStringExtra("strBasicPremium");
        TreatmentCheckBoxCheck = getIntent().getStringExtra("TreatmentCheckBoxCheck");
        MaternityAndChildcareMale = getIntent().getStringExtra("MaternityAndChildcareMale");
        GSt = getIntent().getStringExtra("GSt");
        strProposerEdtName = getIntent().getStringExtra("strProposerEdtName");
        selectFatherLawAdult = getIntent().getIntExtra("selectFatherLawAdult", 0);
        selectYearFatherAdult = getIntent().getIntExtra("selectYearFatherAdult", 0);
        LongTerm = getIntent().getDoubleExtra("LongTerm", 0.00);
        OrganDonar = getIntent().getDoubleExtra("OrganDonar", 0.00);
        sublimt = getIntent().getDoubleExtra("sublimt", 0.00);
        copayemntMax = getIntent().getIntExtra("copayemntMax", 0);
        TiresDiscount = getIntent().getIntExtra("TiresDiscount", 0);
        DirectPolicy = getIntent().getIntExtra("DirectPolicy", 0);
        loyalityDiscount = getIntent().getIntExtra("loyalityDiscount", 0);
        strEmailIDEditSelf = getIntent().getStringExtra("strEmailIDEditSelf");
        strPinCodeEdit = getIntent().getStringExtra("strPinCodeEdit");
        strCityEdit = getIntent().getStringExtra("strCityEdit");
        strStateEdit = getIntent().getStringExtra("strStateEdit");
        address1 = getIntent().getStringExtra("address1");
        address2 = getIntent().getStringExtra("address2");
        address3 = getIntent().getStringExtra("address3");
        corresAddress1 = getIntent().getStringExtra("corresAddress1");
        corresAddress2 = getIntent().getStringExtra("corresAddress2");
        corresAddress3 = getIntent().getStringExtra("corresAddress3");
        firstName = getIntent().getStringExtra("firstName");
        middleName = getIntent().getStringExtra("middleName");
        lastName = getIntent().getStringExtra("lastName");
        ckycNo = getIntent().getStringExtra("ckycNo");
        uniqueTransactionNumber = getIntent().getStringExtra("uniqueTransactionNumber");
        permAndCorresAddSame = getIntent().getStringExtra("permAndCorresAddSame");
        strDob = getIntent().getStringExtra("strDob");
        TreatmentStatus = getIntent().getStringExtra("TreatmentStatus");
        strIDTypeName = getIntent().getStringExtra("strIDTypeName");



        Log.e("selectYearAdult", String.valueOf(selectYearAdult));
        PersonalAccidentPackageB = findViewById(R.id.PersonalAccidentPackageB);
        PersonalAccidentPackageTwoB = findViewById(R.id.PersonalAccidentPackageTwoB);
        PersonalAccidentPackageThreeB = findViewById(R.id.PersonalAccidentPackageThreeB);
        PersonalAccidentPackageFourB = findViewById(R.id.PersonalAccidentPackageFourB);
        ViewDetails = findViewById(R.id.ViewDetails);
        CoPaymentEditText = findViewById(R.id.CoPaymentEditText);
        SubLimitEditText = findViewById(R.id.SubLimitEditText);
        CoPaymentSpinnerLiner = findViewById(R.id.CoPaymentSpinnerLiner);
        SubLimitSpinnerLiner = findViewById(R.id.SubLimitSpinnerLiner);
        SumInsuredDropDown = findViewById(R.id.SumInsuredDropDown);
        SumInsuredEditText = findViewById(R.id.SumInsuredEditText);
        PlanTypeTXT = findViewById(R.id.PlanTypeTXT);
        SelfNameText = findViewById(R.id.SelfNameText);
        SumInsuredSelectPlan = findViewById(R.id.SumInsuredSelectPlan);
        relativeSecond = findViewById(R.id.relativeSecond);
        PlanTypeTXT2 = findViewById(R.id.PlanTypeTXT2);
        SumInsuredDiGiProTxt = findViewById(R.id.SumInsuredDiGiProTxt);
        continueButton = findViewById(R.id.continueButton);
        CoPaymentPercentageLiner = findViewById(R.id.CoPaymentPercentageLiner);
        LinerPolicyNumber = findViewById(R.id.LinerPolicyNumber);
        SubLimitLiner = findViewById(R.id.SubLimitLiner);
        SelectAddOnsButton = findViewById(R.id.SelectAddOnsButton);
        TotalPremium = findViewById(R.id.TotalPremium);
        TotalPremiumSelectPlan = findViewById(R.id.TotalPremiumSelectPlan);
        checkBoxLoyaltyDiscount = findViewById(R.id.checkBoxLoyaltyDiscount);
        PolicyNumber = findViewById(R.id.PolicyNumber);
        ACheckBox = findViewById(R.id.ACheckBox);
        BCheckBox = findViewById(R.id.BCheckBox);
        CCheckBox = findViewById(R.id.CCheckBox);
        OneYear = findViewById(R.id.OneYear);
        TwoYearRadio = findViewById(R.id.TwoYearRadio);
        ThreeYearRadio = findViewById(R.id.ThreeYearRadio);
        oneYearSecondRadio = findViewById(R.id.oneYearSecondRadio);
        TwoYearSecondRadio = findViewById(R.id.TwoYearSecondRadio);
        ThreeYearSecondRadio = findViewById(R.id.ThreeYearSecondRadio);
        TotalPremiumSecond = findViewById(R.id.TotalPremiumSecond);
        CoPaymentCheckBox = findViewById(R.id.CoPaymentCheckBox);
        TenCheckBox = findViewById(R.id.TenCheckBox);
        TwentyCheckBox = findViewById(R.id.TwentyCheckBox);
        ThirtyCheckBox = findViewById(R.id.ThirtyCheckBox);
        fortyCheckBox = findViewById(R.id.fortyCheckBox);
        FiftyCheckBox = findViewById(R.id.FiftyCheckBox);
        PackageOne = findViewById(R.id.PackageOne);
        PackageTwo = findViewById(R.id.PackageTwo);
        PackageThree = findViewById(R.id.PackageThree);
        PackageFour = findViewById(R.id.PackageFour);
        PackageFive = findViewById(R.id.PackageFive);
        PackageSix = findViewById(R.id.PackageSix);
        DailyHospitalAddImg = findViewById(R.id.DailyHospitalAddImg);
        horizontalScroll = findViewById(R.id.horizontalScroll);
        DailyHospitalLiner = findViewById(R.id.DailyHospitalLiner);
        CriticalIllnessLiner = findViewById(R.id.CriticalIllnessLiner);
        CriticalIllnessImg = findViewById(R.id.CriticalIllnessImg);
        ExtensionPreLiner = findViewById(R.id.ExtensionPreLiner);
        ExtensionPreImg = findViewById(R.id.ExtensionPreImg);
        ExtensionPostImg = findViewById(R.id.ExtensionPostImg);
        ExtensionPostLiner = findViewById(R.id.ExtensionPostLiner);
        MaternityLiner = findViewById(R.id.MaternityLiner);
        MaternityImg = findViewById(R.id.MaternityImg);
        CoverageLiner = findViewById(R.id.CoverageLiner);
        CoverageImg = findViewById(R.id.CoverageImg);
        ConditionWaiverImg = findViewById(R.id.ConditionWaiverImg);
        ConditionWaiverLiner = findViewById(R.id.ConditionWaiverLiner);
        PreExistingDiseaseLiner = findViewById(R.id.PreExistingDiseaseLiner);
        PreExistingDiseaseImg = findViewById(R.id.PreExistingDiseaseImg);
        OutpatientDentalLiner = findViewById(R.id.OutpatientDentalLiner);
        OutpatientDentalImg = findViewById(R.id.OutpatientDentalImg);
        EmergencyTravellingLiner = findViewById(R.id.EmergencyTravellingLiner);
        EmergencyTravellingImg = findViewById(R.id.EmergencyTravellingImg);
        SecondOpinionLiner = findViewById(R.id.SecondOpinionLiner);
        SecondOpinionImg = findViewById(R.id.SecondOpinionImg);
        RestCureLiner = findViewById(R.id.RestCureLiner);
        RestCureImg = findViewById(R.id.RestCureImg);
        ObesityWeightLiner = findViewById(R.id.ObesityWeightLiner);
        ObesityWeightImg = findViewById(R.id.ObesityWeightImg);
        SterilityInfertilityLiner = findViewById(R.id.SterilityInfertilityLiner);
        SterilityInfertilityImg = findViewById(R.id.SterilityInfertilityImg);
        EnhancedOrganLiner = findViewById(R.id.EnhancedOrganLiner);
        EnhancedOrganImg = findViewById(R.id.EnhancedOrganImg);
        MedicallyAdvisedLiner = findViewById(R.id.MedicallyAdvisedLiner);
        MedicallyAdvisedImg = findViewById(R.id.MedicallyAdvisedImg);
        EmergencyAssistanceLine = findViewById(R.id.EmergencyAssistanceLine);
        EmergencyAssistanceImg = findViewById(R.id.EmergencyAssistanceImg);
        HomeCareLiner = findViewById(R.id.HomeCareLiner);
        HomeCareImg = findViewById(R.id.HomeCareImg);
        WellnessBenefitLiner = findViewById(R.id.WellnessBenefitLiner);
        WellnessBenefitImg = findViewById(R.id.WellnessBenefitImg);
        DiseaseManagementLiner = findViewById(R.id.DiseaseManagementLiner);
        DiseaseManagementImg = findViewById(R.id.DiseaseManagementImg);
        GlobalCoverLiner = findViewById(R.id.GlobalCoverLiner);
        GlobalCoverImg = findViewById(R.id.GlobalCoverImg);
        ModernTreatmentsLiner = findViewById(R.id.ModernTreatmentsLiner);
        ModernTreatmentsImg = findViewById(R.id.ModernTreatmentsImg);
        PremiumWaiverLiner = findViewById(R.id.PremiumWaiverLiner);
        PremiumWaiverImg = findViewById(R.id.PremiumWaiverImg);
        ConditionWaiverPackageOne = findViewById(R.id.ConditionWaiverPackageOne);
        ConditionWaiverPackageTwo = findViewById(R.id.ConditionWaiverPackageTwo);
        ConditionWaiverPackageThree = findViewById(R.id.ConditionWaiverPackageThree);
        ConditionWaiverPackageFour = findViewById(R.id.ConditionWaiverPackageFour);
        ExtensionPreHospitalizationPackageOne = findViewById(R.id.ExtensionPreHospitalizationPackageOne);
        ExtensionProHospitalizationPackageOne = findViewById(R.id.ExtensionProHospitalizationPackageOne);
        EmergencyAssistancePackageOe = findViewById(R.id.EmergencyAssistancePackageOe);
        PersonalAccidentPackageOne = findViewById(R.id.PersonalAccidentPackageOne);
        WellnessBenefitPackageOne = findViewById(R.id.WellnessBenefitPackageOne);
        TotalPremiumPackageOne = findViewById(R.id.TotalPremiumPackageOne);
        PremiumWaiverPackageTwo = findViewById(R.id.PremiumWaiverPackageTwo);
        SecondOpinionPackageTwo = findViewById(R.id.SecondOpinionPackageTwo);
        ModernTreatments = findViewById(R.id.ModernTreatments);
        PersonalAccidentPackageTwo = findViewById(R.id.PersonalAccidentPackageTwo);
        EmergencyAssistancePackageTwo = findViewById(R.id.EmergencyAssistancePackageTwo);
        SumPremiumPackageTwo = findViewById(R.id.SumPremiumPackageTwo);
        NonMedicalPackageThree = findViewById(R.id.NonMedicalPackageThree);
        MedicallyAdvisedPackageThree = findViewById(R.id.MedicallyAdvisedPackageThree);
        EnhancedOrganPackageThree = findViewById(R.id.EnhancedOrganPackageThree);
        PersonalAccidentPackageThree = findViewById(R.id.PersonalAccidentPackageThree);
        HomeCarePackageThree = findViewById(R.id.HomeCarePackageThree);
        SumPremiumPackageThree = findViewById(R.id.SumPremiumPackageThree);
        PersonalAccidentPackageFour = findViewById(R.id.PersonalAccidentPackageFour);
        CriticalIllnessPackageFour = findViewById(R.id.CriticalIllnessPackageFour);
        ModernTreatmentPackageFour = findViewById(R.id.ModernTreatmentPackageFour);
        HospitalDailyCashPackageFour = findViewById(R.id.HospitalDailyCashPackageFour);
        SumPremiumPackageFour = findViewById(R.id.SumPremiumPackageFour);
        TreatmentTiredNetworkPackageFive = findViewById(R.id.TreatmentTiredNetworkPackageFive);
        SubLimitPackageFive = findViewById(R.id.SubLimitPackageFive);
        CoPaymentPackageFive = findViewById(R.id.CoPaymentPackageFive);
        WellnessBenefitPackageFive = findViewById(R.id.WellnessBenefitPackageFive);
        SumPremiumPackageFive = findViewById(R.id.SumPremiumPackageFive);
        LinerPackage = findViewById(R.id.LinerPackage);
        SubLimitCheckBox = findViewById(R.id.SubLimitCheckBox);
        OrganCheckBox = findViewById(R.id.OrganCheckBox);
        TreatmentCheckBox = findViewById(R.id.TreatmentCheckBox);
        AddOnsBack = findViewById(R.id.AddOnsBack);
        infoImge = findViewById(R.id.infoImge);
        insuredMemberTxt = findViewById(R.id.insuredMemberTxt);
        ImageEye = findViewById(R.id.ImageEye);
        ImageEye1 = findViewById(R.id.ImageEye1);

        DirectPolicy=15;

        if (!strCheckBoxSelf.equals("Checked")){
            SelfNameText.setText(str_edt_name);
        }else{
            str_edt_name=firstName+" "+middleName+" "+lastName;
            SelfNameText.setText(str_edt_name);
            if (strIDTypeName.equals("Reference Number")){
                str_edt_name=firstName;
                SelfNameText.setText(str_edt_name);
            }
        }

        if (strFor.equals("0")) {
            checkPackage = "PackageSix";
            strPackageSix = "Check";
            PackageSix.setChecked(true);
            PackageOne.setChecked(false);
            PackageTwo.setChecked(false);
            PackageThree.setChecked(false);
            PackageFour.setChecked(false);
            PackageFive.setChecked(false);
            strPolicyNumber = "";
            CoPaymentLoading = "";
            PersonalAccidentCategory = "";
            packageSix();
            DiseaseManagementStatus = "False";
            MaternityAndChildcareMale = "False";
            SterilityInfertilityMale = "False";
            LoyaltyDiscountStatus = "False";
            CoPaymentStatus = "False";
            TreatmentStatus = "False";
            LongTermDiscountStatus = "False";
            SubCategoryDiscountStatus = "False";
            OrganDiscountStatus = "False";
            SubCategoryDiscountStatusCheck = "False";
            CoPaymentCheckBoxCheck = "False";
            TreatmentCheckBoxCheck = "False";
            SubCategory = "";
            strPackageOne = "False";
            strSumInsured = "900000";
            SumInsuredEditText.setText(strSumInsured);
            strPlanTypeTXT = "Privilege";
            strPlanTypeTXT2 = "Digi-Pro";
            strPolicyTenure = "1";
            PlanType = strPlanTypeTXT;
            relativeSecond.setVisibility(View.VISIBLE);
            PlanTypeTXT.setText(strPlanTypeTXT);
            PlanTypeTXT2.setText(strPlanTypeTXT2);
            SumInsuredSelectPlan.setText(strSumInsured);
            SumInsuredDiGiProTxt.setText(strSumInsured);

            Calendar calendar = Calendar.getInstance();
            date = calendar.getTime();
            formatter = new SimpleDateFormat("dd/MM/yyyy");
            today = formatter.format(date);
            Log.e("today", today);

            if (strPolicyTenure.equals("2")){
                calendar.add(Calendar.DATE, 364 * 2);
                date = calendar.getTime();
                formatter = new SimpleDateFormat("dd/MM/yyyy");
                nextYear = formatter.format(date);
            }else if(strPolicyTenure.equals("3")){
                calendar.add(Calendar.DATE, 364*3);
                date = calendar.getTime();
                formatter = new SimpleDateFormat("dd/MM/yyyy");
                nextYear = formatter.format(date);
            }else{
                calendar.add(Calendar.DATE, 364);
                date = calendar.getTime();
                formatter = new SimpleDateFormat("dd/MM/yyyy");
                nextYear = formatter.format(date);
                Log.e("nextYear", nextYear);
            }

            //20/12/2022
//            SelfNameText.setText(str_edt_name);


            if (ParentComposition.equals("")){
                insuredMemberTxt.setText(FamilyComposition);
            }else{
                insuredMemberTxt.setText(FamilyComposition+" + "+ParentComposition);
            }
            yearRadio = "OneYearFirstCard";
            OneYear.setChecked(true);
            strPackage1 = "UnCheck";
            strPackageTwo = "UnCheck";
            strPackageThree = "UnCheck";
            strPackageFour = "UnCheck";
            strPackageFive = "UnCheck";
            strSubLimitEditText = "A";
            strCoPaymentEditText = "10";
            SubLimitEditText.setText(strSubLimitEditText);
            CoPaymentEditText.setText(strCoPaymentEditText);
            if (selectFirstYearChild < 5) {
                Log.e("selectFirstYearChild", String.valueOf(selectFirstYearChild));
                PersonalStatusChildOne = "False";
                PersonalAccidentACoverChildOneStatus = "False";
                PersonalAccidentBCoverChildOneStatus = "False";
                PersonalStatusChildOne1 = "False";
                PersonalAccidentACoverChildOneStatus1 = "False";
                PersonalAccidentBCoverChildOneStatus1 = "False";
            }
            else {
                PersonalStatusChildOne = "False";
                PersonalAccidentACoverChildOneStatus = "False";
                PersonalAccidentBCoverChildOneStatus = "False";
                PersonalStatusChildOne1 = "True";
                PersonalAccidentACoverChildOneStatus1 = "True";
                PersonalAccidentBCoverChildOneStatus1 = "True";
            }
            if (selectSecSonChild < 5) {
                PersonalStatusChildTwo = "False";
                PersonalAccidentAChildTwoCoverStatus = "False";
                PersonalAccidentBChildTwoCoverStatus = "False";
                PersonalStatusChildTwo1 = "False";
                PersonalAccidentAChildTwoCoverStatus1 = "False";
                PersonalAccidentBChildTwoCoverStatus1 = "False";
            }
            else {
                PersonalStatusChildTwo = "False";
                PersonalAccidentAChildTwoCoverStatus = "False";
                PersonalAccidentBChildTwoCoverStatus = "False";
                PersonalStatusChildTwo1 = "True";
                PersonalAccidentAChildTwoCoverStatus1 = "True";
                PersonalAccidentBChildTwoCoverStatus1 = "True";
            }
            if (selectThirdSonChild < 5) {
                PersonalStatusChildThird = "False";
                PersonalAccidentACoverChildThirdStatus = "False";
                PersonalAccidentBCoverChildThirdStatus = "False";
                PersonalStatusChildThird1 = "False";
                PersonalAccidentACoverChildThirdStatus1 = "False";
                PersonalAccidentBCoverChildThirdStatus1 = "False";
            }
            else {
                PersonalStatusChildThird = "False";
                PersonalAccidentACoverChildThirdStatus = "False";
                PersonalAccidentBCoverChildThirdStatus = "False";
                PersonalStatusChildThird1 = "True";
                PersonalAccidentACoverChildThirdStatus1 = "True";
                PersonalAccidentBCoverChildThirdStatus1 = "True";
            }
            if (selectYearChildFour <5) {
                PersonalStatusChildFour = "False";
                PersonalAccidentACoverChildFourStatus = "False";
                PersonalAccidentBCoverChildFourStatus = "False";
                PersonalStatusChildFour1 = "False";
                PersonalAccidentACoverChildFourStatus1 = "False";
                PersonalAccidentBCoverChildFourStatus1 = "False";
            }
            else {
                PersonalStatusChildFour = "False";
                PersonalAccidentACoverChildFourStatus = "False";
                PersonalAccidentBCoverChildFourStatus = "False";
                PersonalStatusChildFour1 = "True";
                PersonalAccidentACoverChildFourStatus1 = "True";
                PersonalAccidentBCoverChildFourStatus1 = "True";
            }
        }
        else {
            Calendar calendar = Calendar.getInstance();
            date = calendar.getTime();
            formatter = new SimpleDateFormat("dd/MM/yyyy");
            today = formatter.format(date);
            Log.e("today", today);

            if (strPolicyTenure.equals("2")){
                calendar.add(Calendar.DATE, 364 * 2);
                date = calendar.getTime();
                formatter = new SimpleDateFormat("dd/MM/yyyy");
                nextYear = formatter.format(date);
            }else if(strPolicyTenure.equals("3")){
                calendar.add(Calendar.DATE, 364*3);
                date = calendar.getTime();
                formatter = new SimpleDateFormat("dd/MM/yyyy");
                nextYear = formatter.format(date);
            }else{
                calendar.add(Calendar.DATE, 364);
                date = calendar.getTime();
                formatter = new SimpleDateFormat("dd/MM/yyyy");
                nextYear = formatter.format(date);
                Log.e("nextYear", nextYear);
            }
            if (!str_policyType_spinner.equals("Individual")) {
                if (strCheckBoxSelf.equals("Checked")&&strCheckBoxSpouse.equals("Checked")){
                    if (strCheckBoxSelf.equals("Checked")) {
                        SelfNameText.setText(strEdtNameSelf);
                    }
                }else{
                    if (strCheckBoxSelf.equals("Checked")||strCheckBoxSpouse.equals("Checked")){
                         if (strCheckBoxSpouse.equals("Checked")){
//                             SelfNameText.setText(strProposerEdtName);
                             SelfNameText.setText(str_edt_name);
                    }else{
                             SelfNameText.setText(strEdtNameSelf);
                     }
                    }
                }
            }else{
                if (strCheckBoxSelf.equals("Checked")) {
                    SelfNameText.setText(strEdtNameSelf);
                }
                if (strCheckBoxSpouse.equals("Checked")||strCheckBoxMother.equals("Checked")||strCheckBoxFather.equals("Checked")||strCheckBoxMotherLaw.equals("Checked")||strCheckBoxFatherLaw.equals("Checked")) {
//                    SelfNameText.setText(strProposerEdtName);
                    SelfNameText.setText(str_edt_name);
                  }

            }
            insuredMemberTxt.setText(FamilyComposition+" "+ParentComposition);
            SumInsuredEditText.setText(strSumInsured);
            SubLimitEditText.setText(strSubLimitEditText);
            CoPaymentEditText.setText(strCoPaymentEditText);
            if (selectFirstYearChild < 5) {
                PersonalStatusChildOne1 = "False";
                PersonalAccidentACoverChildOneStatus1 = "False";
                PersonalAccidentBCoverChildOneStatus1 = "False";
            } else {
                PersonalStatusChildOne1 = "True";
                PersonalAccidentACoverChildOneStatus1 = "True";
                PersonalAccidentBCoverChildOneStatus1 = "True";
            }
            if (selectSecSonChild < 5) {
                PersonalStatusChildTwo1 = "False";
                PersonalAccidentAChildTwoCoverStatus1 = "False";
                PersonalAccidentBChildTwoCoverStatus1 = "False";
            } else {
                PersonalStatusChildTwo1 = "True";
                PersonalAccidentAChildTwoCoverStatus1 = "True";
                PersonalAccidentBChildTwoCoverStatus1 = "True";
            }
            if (selectThirdSonChild < 5) {
                PersonalStatusChildThird1 = "False";
                PersonalAccidentACoverChildThirdStatus1 = "False";
                PersonalAccidentBCoverChildThirdStatus1 = "False";
            } else {
                PersonalStatusChildThird1 = "True";
                PersonalAccidentACoverChildThirdStatus1 = "True";
                PersonalAccidentBCoverChildThirdStatus1 = "True";
            }
            if (selectYearChildFour <5) {
                PersonalStatusChildFour1 = "False";
                PersonalAccidentACoverChildFourStatus1 = "False";
                PersonalAccidentBCoverChildFourStatus1 = "False";
            } else {
                PersonalStatusChildFour1 = "True";
                PersonalAccidentACoverChildFourStatus1 = "True";
                PersonalAccidentBCoverChildFourStatus1 = "True";
            }


            if (strSumInsured.equals("500000") || strSumInsured.equals("400000") || strSumInsured.equals("300000")) {
                strPlanTypeTXT = "Essential";
                strPlanTypeTXT2 = "Digi-Pro";
                relativeSecond.setVisibility(View.VISIBLE);
                PlanTypeTXT.setText(strPlanTypeTXT);
                PlanTypeTXT2.setText(strPlanTypeTXT2);
                SumInsuredSelectPlan.setText(strSumInsured);
                SumInsuredDiGiProTxt.setText(strSumInsured);
            } else if (strSumInsured.equals("600000") || strSumInsured.equals("700000") || strSumInsured.equals("800000") || strSumInsured.equals("900000") || strSumInsured.equals("1000000")) {
                strPlanTypeTXT = "Privilege";
                strPlanTypeTXT2 = "Digi-Pro";
                relativeSecond.setVisibility(View.VISIBLE);
                PlanTypeTXT.setText(strPlanTypeTXT);
                PlanTypeTXT2.setText(strPlanTypeTXT2);
                SumInsuredSelectPlan.setText(strSumInsured);
                SumInsuredDiGiProTxt.setText(strSumInsured);
            } else if (strSumInsured.equals("1500000") || strSumInsured.equals("2000000")) {
                strPlanTypeTXT = "Plus";
                strPlanTypeTXT2 = "";
                relativeSecond.setVisibility(View.GONE);
                PlanTypeTXT.setText(strPlanTypeTXT);
                SumInsuredSelectPlan.setText(strSumInsured);
            } else if (strSumInsured.equals("2500000") || strSumInsured.equals("3000000")) {
                strPlanTypeTXT = "Premier";
                strPlanTypeTXT2 = "";
                relativeSecond.setVisibility(View.GONE);
                PlanTypeTXT.setText(strPlanTypeTXT);
                SumInsuredSelectPlan.setText(strSumInsured);
            } else if (strSumInsured.equals("4000000") || strSumInsured.equals("5000000")) {
                strPlanTypeTXT = "Executive";
                strPlanTypeTXT2 = "";
                relativeSecond.setVisibility(View.GONE);
                PlanTypeTXT.setText(strPlanTypeTXT);
                SumInsuredSelectPlan.setText(strSumInsured);
            }
            if (yearRadio.equals("OneYearFirstCard")) {
                strPolicyTenure = "1";
                OneYear.setChecked(true);
                TwoYearRadio.setChecked(false);
                ThreeYearRadio.setChecked(false);
                oneYearSecondRadio.setChecked(false);
                TwoYearSecondRadio.setChecked(false);
                ThreeYearSecondRadio.setChecked(false);
                LinerPackage.setVisibility(View.VISIBLE);
            } else if (yearRadio.equals("TwoYearFirstCard")) {
                strPolicyTenure = "2";
                OneYear.setChecked(false);
                TwoYearRadio.setChecked(true);
                ThreeYearRadio.setChecked(false);
                oneYearSecondRadio.setChecked(false);
                TwoYearSecondRadio.setChecked(false);
                ThreeYearSecondRadio.setChecked(false);
                LinerPackage.setVisibility(View.VISIBLE);
            } else if (yearRadio.equals("ThreeYearFirstCard")) {
                strPolicyTenure = "3";
                OneYear.setChecked(false);
                TwoYearRadio.setChecked(false);
                ThreeYearRadio.setChecked(true);
                oneYearSecondRadio.setChecked(false);
                TwoYearSecondRadio.setChecked(false);
                ThreeYearSecondRadio.setChecked(false);
                LinerPackage.setVisibility(View.VISIBLE);
            } else if (yearRadio.equals("OneYearSecondCard")) {
                strPolicyTenure = "1";
                oneYearSecondRadio.setChecked(true);
                TwoYearSecondRadio.setChecked(false);
                ThreeYearSecondRadio.setChecked(false);
                OneYear.setChecked(false);
                TwoYearRadio.setChecked(false);
                ThreeYearRadio.setChecked(false);
                LinerPackage.setVisibility(View.GONE);
            } else if (yearRadio.equals("TwoYearSecondCard")) {
                strPolicyTenure = "2";
                oneYearSecondRadio.setChecked(false);
                TwoYearSecondRadio.setChecked(true);
                ThreeYearSecondRadio.setChecked(false);
                OneYear.setChecked(false);
                TwoYearRadio.setChecked(false);
                ThreeYearRadio.setChecked(false);
                LinerPackage.setVisibility(View.GONE);
            } else if (yearRadio.equals("ThreeYearSecondCard")) {
                strPolicyTenure = "3";
                oneYearSecondRadio.setChecked(false);
                TwoYearSecondRadio.setChecked(false);
                ThreeYearSecondRadio.setChecked(true);
                OneYear.setChecked(false);
                TwoYearRadio.setChecked(false);
                ThreeYearRadio.setChecked(false);
                LinerPackage.setVisibility(View.GONE);
            }
            if (LoyaltyDiscountStatus.equals("True")) {
                checkBoxLoyaltyDiscount.setChecked(true);
                LinerPolicyNumber.setVisibility(View.VISIBLE);
                PolicyNumber.setText(strPolicyNumber);
            } else {
                strPolicyNumber = "";
                checkBoxLoyaltyDiscount.setChecked(false);
                LinerPolicyNumber.setVisibility(View.GONE);
            }
            if (CoPaymentStatus.equals("True")) {
                CoPaymentCheckBox.setChecked(true);
                CoPaymentPercentageLiner.setVisibility(View.VISIBLE);
                if (CoPaymentLoading.equals("10")) {
                    TenCheckBox.setChecked(true);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                } else if (CoPaymentLoading.equals("20")) {
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(true);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                } else if (CoPaymentLoading.equals("30")) {
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(true);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                } else if (CoPaymentLoading.equals("40")) {
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(true);
                    FiftyCheckBox.setChecked(false);
                } else if (CoPaymentLoading.equals("50")) {
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(true);
                }
            }
            else {
                CoPaymentLoading = "";
                TenCheckBox.setChecked(false);
                TwentyCheckBox.setChecked(false);
                ThirtyCheckBox.setChecked(false);
                fortyCheckBox.setChecked(false);
                FiftyCheckBox.setChecked(false);
                CoPaymentPercentageLiner.setVisibility(View.GONE);
            }

            if (checkPackage.equals("PackageOne")) {
                PackageOne.setChecked(true);
                PackageTwo.setChecked(false);
                PackageThree.setChecked(false);
                PackageFour.setChecked(false);
                PackageFive.setChecked(false);
                PackageSix.setChecked(false);
                SelectAddOnsButton.setVisibility(View.VISIBLE);
            }
            else if (checkPackage.equals("PackageTwo")) {
                PackageOne.setChecked(false);
                PackageTwo.setChecked(true);
                PackageThree.setChecked(false);
                PackageFour.setChecked(false);
                PackageFive.setChecked(false);
                PackageSix.setChecked(false);
                SelectAddOnsButton.setVisibility(View.VISIBLE);
            } else if (checkPackage.equals("PackageThree")) {
                PackageOne.setChecked(false);
                PackageTwo.setChecked(false);
                PackageThree.setChecked(true);
                PackageFour.setChecked(false);
                PackageFive.setChecked(false);
                PackageSix.setChecked(false);
                SelectAddOnsButton.setVisibility(View.VISIBLE);
            } else if (checkPackage.equals("PackageFour")) {
                PackageOne.setChecked(false);
                PackageTwo.setChecked(false);
                PackageThree.setChecked(false);
                PackageFour.setChecked(true);
                PackageFive.setChecked(false);
                PackageSix.setChecked(false);
                SelectAddOnsButton.setVisibility(View.VISIBLE);
            } else if (checkPackage.equals("PackageFive")) {
                PackageOne.setChecked(false);
                PackageTwo.setChecked(false);
                PackageThree.setChecked(false);
                PackageFour.setChecked(false);
                PackageFive.setChecked(true);
                PackageSix.setChecked(false);
                SelectAddOnsButton.setVisibility(View.VISIBLE);
            } else if (checkPackage.equals("PackageSix")) {
                PackageOne.setChecked(false);
                PackageTwo.setChecked(false);
                PackageThree.setChecked(false);
                PackageFour.setChecked(false);
                PackageFive.setChecked(false);
                PackageSix.setChecked(true);
                SelectAddOnsButton.setVisibility(View.VISIBLE);
            } else {
                PackageOne.setChecked(false);
                PackageTwo.setChecked(false);
                PackageThree.setChecked(false);
                PackageFour.setChecked(false);
                PackageFive.setChecked(false);
                PackageSix.setChecked(true);
                SelectAddOnsButton.setVisibility(View.VISIBLE);
            }

            if (SubCategoryDiscountStatus.equals("True")) {
                SubLimitCheckBox.setChecked(true);
                SubLimitLiner.setVisibility(View.VISIBLE);
                if (SubCategory.equals("A")) {
                    ACheckBox.setChecked(true);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(false);
                } else if (SubCategory.equals("B")) {
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(true);
                    CCheckBox.setChecked(false);
                } else if (SubCategory.equals("C")) {
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(true);
                }
            } else {
                SubLimitCheckBox.setChecked(false);
                SubLimitLiner.setVisibility(View.GONE);
                ACheckBox.setChecked(false);
                BCheckBox.setChecked(false);
                CCheckBox.setChecked(false);
            }

            if (OrganDiscountStatus.equals("True")) {
                OrganCheckBox.setChecked(true);
            } else {
                OrganCheckBox.setChecked(false);
            }


            if (TreatmentStatus.equals("True")) {
                TreatmentCheckBox.setChecked(true);
            } else {
                TreatmentCheckBox.setChecked(false);
            }
        }

        if (str_policyType_spinner.equals("Individual")) {
            if (strGenderSpinner.equals("Female")) {
                strGender = "F";
                if (strCheckBoxSelf.equals("Checked")) {
                    if (selectYearAdult > 45) {
//                        alertPopup();
                    }
                } else if (strCheckBoxSpouse.equals("Checked")) {
                    if (selectYearSecondAdult > 45) {
//                        alertPopup();
                    }
                }
            } else {
                strGender = "M";
                SterilityInfertilityStatus1 = "False";
                MaternityAndChildcareAddOn = "False";
                MaleMaternityAndChildcareAddOn = MaternityAndChildcareAddOn;
                MaleSterilityInfertilityStatus1 = SterilityInfertilityStatus1;
            }
        }
        else {
            if (strCheckBoxSelf.equals("Checked") && strCheckBoxSpouse.equals("Checked")) {
                if (selectYearAdult < 45 || selectYearSecondAdult < 45) {
                    if (selectYearSecondAdult > 45) {
//                        alertPopup();
                    }
                } else {
//                    alertPopup();
                }
            } else if (strCheckBoxSelf.equals("Checked") || strCheckBoxSpouse.equals("Checked")) {
                if (selectYearAdult < 45 || selectYearSecondAdult < 45) {
                } else {
//                    alertPopup();
                }
            }


        }
        if (!(yearRadio.equals("OneYearSecondCard") || yearRadio.equals("TwoYearSecondCard") || yearRadio.equals("ThreeYearSecondCard"))) {
            if (strSumInsured.equals("500000") || strSumInsured.equals("400000") || strSumInsured.equals("600000") || strSumInsured.equals("700000") || strSumInsured.equals("800000") || strSumInsured.equals("900000") || strSumInsured.equals("1000000")) {
                digiPro();
            }
        }
        HealthQuoteAddOn();
        HealthQuoteCardAmount();
//      HealthQuoteAddOnB();
//        health_quote();
//        new Handler().postDelayed(new Runnable() {
//            public void run() {
//
//            }
//        }, 2000);
        SumInsuredDropDown.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                MyOptionsPickerView singlePicker = new MyOptionsPickerView(NewCHIAddOns.this);
                final ArrayList<String> items1 = new ArrayList<String>();
//                items1.add("100000");
//                items1.add("200000");
//                items1.add("300000");
                items1.add("400000");
                items1.add("500000");
                items1.add("600000");
                items1.add("700000");
                items1.add("800000");
                items1.add("900000");
                items1.add("1000000");
                items1.add("1500000");
                items1.add("2000000");
                items1.add("2500000");
                items1.add("3000000");
                items1.add("4000000");
                items1.add("5000000");
                singlePicker.setPicker(items1);
                singlePicker.setCyclic(false);
                singlePicker.setSelectOptions(0);
                singlePicker.setOnoptionsSelectListener(new MyOptionsPickerView.OnOptionsSelectListener() {
                    @Override
                    public void onOptionsSelect(int options1, int option2, int options3) {
                        strSumInsured = items1.get(options1);
                        SumInsuredEditText.setText(strSumInsured);
                        if (strSumInsured.equals("100000") || strSumInsured.equals("200000")) {
                            strPlanTypeTXT = "Basic";
                            strPlanTypeTXT2 = "Digi-Pro";
                            relativeSecond.setVisibility(View.VISIBLE);
                            PlanTypeTXT.setText(strPlanTypeTXT);
                            PlanTypeTXT2.setText(strPlanTypeTXT2);
                            SumInsuredSelectPlan.setText(strSumInsured);
                            SumInsuredDiGiProTxt.setText(strSumInsured);
                            PlanType = strPlanTypeTXT;
                        } else if (strSumInsured.equals("500000") || strSumInsured.equals("400000") || strSumInsured.equals("300000")) {
                            strPlanTypeTXT = "Essential";
                            strPlanTypeTXT2 = "Digi-Pro";
                            relativeSecond.setVisibility(View.VISIBLE);
                            PlanTypeTXT.setText(strPlanTypeTXT);
                            PlanTypeTXT2.setText(strPlanTypeTXT2);
                            SumInsuredSelectPlan.setText(strSumInsured);
                            SumInsuredDiGiProTxt.setText(strSumInsured);
                            PlanType = strPlanTypeTXT;
                        } else if (strSumInsured.equals("600000") || strSumInsured.equals("700000") || strSumInsured.equals("800000") || strSumInsured.equals("900000") || strSumInsured.equals("1000000")) {
                            strPlanTypeTXT = "Privilege";
                            strPlanTypeTXT2 = "Digi-Pro";
                            relativeSecond.setVisibility(View.VISIBLE);
                            PlanTypeTXT.setText(strPlanTypeTXT);
                            PlanTypeTXT2.setText(strPlanTypeTXT2);
                            SumInsuredSelectPlan.setText(strSumInsured);
                            SumInsuredDiGiProTxt.setText(strSumInsured);
                            PlanType = strPlanTypeTXT;
                        } else if (strSumInsured.equals("1500000") || strSumInsured.equals("2000000")) {
                            strPlanTypeTXT = "Plus";
                            strPlanTypeTXT2 = "";
                            relativeSecond.setVisibility(View.GONE);
                            PlanTypeTXT.setText(strPlanTypeTXT);
                            SumInsuredSelectPlan.setText(strSumInsured);
                            PlanType = strPlanTypeTXT;

                            OneYear.setChecked(true);
                            TwoYearRadio.setChecked(false);
                            ThreeYearRadio.setChecked(false);
                            oneYearSecondRadio.setChecked(false);
                            TwoYearSecondRadio.setChecked(false);
                            ThreeYearSecondRadio.setChecked(false);
                            LinerPackage.setVisibility(View.VISIBLE);

                        } else if (strSumInsured.equals("2500000") || strSumInsured.equals("3000000")) {
                            strPlanTypeTXT = "Premier";
                            strPlanTypeTXT2 = "";
                            relativeSecond.setVisibility(View.GONE);
                            PlanTypeTXT.setText(strPlanTypeTXT);
                            SumInsuredSelectPlan.setText(strSumInsured);
                            PlanType = strPlanTypeTXT;

                            OneYear.setChecked(true);
                            TwoYearRadio.setChecked(false);
                            ThreeYearRadio.setChecked(false);
                            oneYearSecondRadio.setChecked(false);
                            TwoYearSecondRadio.setChecked(false);
                            ThreeYearSecondRadio.setChecked(false);
                            LinerPackage.setVisibility(View.VISIBLE);

                        } else if (strSumInsured.equals("4000000") || strSumInsured.equals("5000000")) {
                            strPlanTypeTXT = "Executive";
                            strPlanTypeTXT2 = "";
                            relativeSecond.setVisibility(View.GONE);
                            PlanTypeTXT.setText(strPlanTypeTXT);
                            SumInsuredSelectPlan.setText(strSumInsured);
                            PlanType = strPlanTypeTXT;

                            OneYear.setChecked(true);
                            TwoYearRadio.setChecked(false);
                            ThreeYearRadio.setChecked(false);
                            oneYearSecondRadio.setChecked(false);
                            TwoYearSecondRadio.setChecked(false);
                            ThreeYearSecondRadio.setChecked(false);
                            LinerPackage.setVisibility(View.VISIBLE);
                        }
                        HealthQuoteAddOn();
                        HealthQuoteCardAmount();
                        new Handler().postDelayed(new Runnable() {
                            public void run() {
                                health_quote();
                            }
                        }, 2000);
                    }
                });
                singlePicker.show();
            }

        });
        OneYear.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (OneYear.isChecked()) {
                    strPolicyTenure = "1";
                    checkPackage = "PackageSix";
                    yearRadio = "OneYearFirstCard";
                    LongTermDiscountStatus = "False";
                    LoyaltyDiscountStatus = "False";
                    CoPaymentStatus = "False";
                    TreatmentStatus = "False";
                    SubCategoryDiscountStatus = "False";
                    OrganDiscountStatus = "False";
                    SubCategoryDiscountStatusCheck = "False";
                    CoPaymentCheckBoxCheck = "False";
                    TreatmentCheckBoxCheck = "False";
                    TiresDiscount = 0;
                    copayemntMax = 0;
                    sublimt = 0.0;
                    loyalityDiscount = 0;
                    OrganDonar = 0.0;
                    LinerPolicyNumber.setVisibility(View.GONE);
                    strPolicyNumber = "";
                    checkBoxLoyaltyDiscount.setChecked(false);
                    OrganCheckBox.setChecked(false);
                    TreatmentCheckBox.setChecked(false);
                    CoPaymentCheckBox.setChecked(false);
                    CoPaymentPercentageLiner.setVisibility(View.GONE);
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                    SubLimitLiner.setVisibility(View.GONE);
                    SubLimitCheckBox.setChecked(false);
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(false);
                    LongTerm=0.0;
                    Calendar calendar = Calendar.getInstance();
                    date = calendar.getTime();
                    formatter = new SimpleDateFormat("dd/MM/yyyy");
                    today = formatter.format(date);
                    Log.e("today", today);
                    calendar.add(Calendar.DATE, 364);
                    date = calendar.getTime();
                    formatter = new SimpleDateFormat("dd/MM/yyyy");
                    nextYear = formatter.format(date);
                    OneYear.setChecked(true);
                    TwoYearRadio.setChecked(false);
                    ThreeYearRadio.setChecked(false);
                    oneYearSecondRadio.setChecked(false);
                    TwoYearSecondRadio.setChecked(false);
                    ThreeYearSecondRadio.setChecked(false);
                    LinerPackage.setVisibility(View.VISIBLE);
                    if (strSumInsured.equals("100000") || strSumInsured.equals("200000")) {
                        strPlanTypeTXT = "Basic";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                    } else if (strSumInsured.equals("500000") || strSumInsured.equals("400000") || strSumInsured.equals("300000")) {
                        strPlanTypeTXT = "Essential";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                        digiPro();
                    } else if (strSumInsured.equals("600000") || strSumInsured.equals("700000") || strSumInsured.equals("800000") || strSumInsured.equals("900000") || strSumInsured.equals("1000000")) {
                        strPlanTypeTXT = "Privilege";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                        digiPro();
                    } else if (strSumInsured.equals("1500000") || strSumInsured.equals("2000000")) {
                        strPlanTypeTXT = "Plus";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                    } else if (strSumInsured.equals("2500000") || strSumInsured.equals("3000000")) {
                        strPlanTypeTXT = "Premier";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                    } else if (strSumInsured.equals("4000000") || strSumInsured.equals("5000000")) {
                        strPlanTypeTXT = "Executive";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                    }
                    checkPackage = "PackageSix";
                    PackageOne.setChecked(false);
                    PackageTwo.setChecked(false);
                    PackageThree.setChecked(false);
                    PackageFour.setChecked(false);
                    PackageFive.setChecked(false);
                    PackageSix.setChecked(true);
                    SelectAddOnsButton.setVisibility(View.VISIBLE);
                    packageSix();
                    HealthQuoteAddOn();
                    HealthQuoteCardAmount();
                    health_quote();
//                    new Handler().postDelayed(new Runnable() {
//                        public void run() {
//                            health_quote();
//                        }
//                    }, 2000);


                }
            }
        });
        TwoYearRadio.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (TwoYearRadio.isChecked()) {
                    strPolicyTenure = "2";
                    yearRadio = "TwoYearFirstCard";
                    LongTermDiscountStatus = "True";
                    LoyaltyDiscountStatus = "False";
                    CoPaymentStatus = "False";
                    TreatmentStatus = "False";
                    SubCategoryDiscountStatus = "False";
                    OrganDiscountStatus = "False";
                    SubCategoryDiscountStatusCheck = "False";
                    CoPaymentCheckBoxCheck = "False";
                    TreatmentCheckBoxCheck = "False";
                    TiresDiscount = 0;
                    copayemntMax = 0;
                    sublimt = 0.0;
                    loyalityDiscount = 0;
                    OrganDonar = 0.0;
                    LinerPolicyNumber.setVisibility(View.GONE);
                    strPolicyNumber = "";
                    checkBoxLoyaltyDiscount.setChecked(false);
                    OrganCheckBox.setChecked(false);
                    TreatmentCheckBox.setChecked(false);
                    CoPaymentCheckBox.setChecked(false);
                    CoPaymentPercentageLiner.setVisibility(View.GONE);
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                    SubLimitLiner.setVisibility(View.GONE);
                    SubLimitCheckBox.setChecked(false);
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(false);
                    Calendar calendar = Calendar.getInstance();
                    date = calendar.getTime();
                    formatter = new SimpleDateFormat("dd/MM/yyyy");
                    today = formatter.format(date);
                    Log.e("today", today);
                    calendar.add(Calendar.DATE, 364 * 2);
                    date = calendar.getTime();
                    formatter = new SimpleDateFormat("dd/MM/yyyy");
                    nextYear = formatter.format(date);
                    Log.e("nextYearTwo",nextYear);
                    OneYear.setChecked(false);
                    TwoYearRadio.setChecked(true);
                    ThreeYearRadio.setChecked(false);
                    oneYearSecondRadio.setChecked(false);
                    TwoYearSecondRadio.setChecked(false);
                    ThreeYearSecondRadio.setChecked(false);
                    LinerPackage.setVisibility(View.VISIBLE);
                    LongTerm=5.0;
                    if (strSumInsured.equals("100000") || strSumInsured.equals("200000")) {
                        strPlanTypeTXT = "Basic";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                    } else if (strSumInsured.equals("500000") || strSumInsured.equals("400000") || strSumInsured.equals("300000")) {
                        strPlanTypeTXT = "Essential";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                        digiPro();
                    } else if (strSumInsured.equals("600000") || strSumInsured.equals("700000") || strSumInsured.equals("800000") || strSumInsured.equals("900000") || strSumInsured.equals("1000000")) {
                        strPlanTypeTXT = "Privilege";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                        digiPro();
                    } else if (strSumInsured.equals("1500000") || strSumInsured.equals("2000000")) {
                        strPlanTypeTXT = "Plus";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;

                    } else if (strSumInsured.equals("2500000") || strSumInsured.equals("3000000")) {
                        strPlanTypeTXT = "Premier";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;

                    } else if (strSumInsured.equals("4000000") || strSumInsured.equals("5000000")) {
                        strPlanTypeTXT = "Executive";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                    }
                    checkPackage = "PackageSix";
                    PackageOne.setChecked(false);
                    PackageTwo.setChecked(false);
                    PackageThree.setChecked(false);
                    PackageFour.setChecked(false);
                    PackageFive.setChecked(false);
                    PackageSix.setChecked(true);
                    SelectAddOnsButton.setVisibility(View.VISIBLE);
                    packageSix();
                    HealthQuoteAddOn();
                    HealthQuoteCardAmount();
                    health_quote();
//                    new Handler().postDelayed(new Runnable() {
//                        public void run() {
//                            health_quote();
//                        }
//                    }, 2000);
                }
            }
        });
        ThreeYearRadio.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (ThreeYearRadio.isChecked()) {
                    strPolicyTenure = "3";
                    yearRadio = "ThreeYearFirstCard";
                    LongTermDiscountStatus = "True";
                    LoyaltyDiscountStatus = "False";
                    CoPaymentStatus = "False";
                    TreatmentStatus = "False";
                    SubCategoryDiscountStatus = "False";
                    OrganDiscountStatus = "False";
                    SubCategoryDiscountStatusCheck = "False";
                    CoPaymentCheckBoxCheck = "False";
                    TreatmentCheckBoxCheck = "False";
                    TiresDiscount = 0;
                    copayemntMax = 0;
                    sublimt = 0.0;
                    loyalityDiscount = 0;
                    OrganDonar = 0.0;
                    LinerPolicyNumber.setVisibility(View.GONE);
                    strPolicyNumber = "";
                    checkBoxLoyaltyDiscount.setChecked(false);
                    OrganCheckBox.setChecked(false);
                    TreatmentCheckBox.setChecked(false);
                    CoPaymentCheckBox.setChecked(false);
                    CoPaymentPercentageLiner.setVisibility(View.GONE);
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                    SubLimitLiner.setVisibility(View.GONE);
                    SubLimitCheckBox.setChecked(false);
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(false);

                    Calendar calendar = Calendar.getInstance();
                    date = calendar.getTime();
                    formatter = new SimpleDateFormat("dd/MM/yyyy");
                    today = formatter.format(date);
                    Log.e("today", today);
                    calendar.add(Calendar.DATE, 364*3);
                    date = calendar.getTime();
                    formatter = new SimpleDateFormat("dd/MM/yyyy");
                    nextYear = formatter.format(date);
                    Log.e("nextYearThree",nextYear);
                    OneYear.setChecked(false);
                    TwoYearRadio.setChecked(false);
                    ThreeYearRadio.setChecked(true);
                    oneYearSecondRadio.setChecked(false);
                    TwoYearSecondRadio.setChecked(false);
                    ThreeYearSecondRadio.setChecked(false);
                    LinerPackage.setVisibility(View.VISIBLE);
                    LongTerm=7.5;

                    if (strSumInsured.equals("100000") || strSumInsured.equals("200000")) {
                        strPlanTypeTXT = "Basic";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                    } else if (strSumInsured.equals("500000") || strSumInsured.equals("400000") || strSumInsured.equals("300000")) {
                        strPlanTypeTXT = "Essential";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                        digiPro();
                    } else if (strSumInsured.equals("600000") || strSumInsured.equals("700000") || strSumInsured.equals("800000") || strSumInsured.equals("900000") || strSumInsured.equals("1000000")) {
                        strPlanTypeTXT = "Privilege";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                        digiPro();
                    } else if (strSumInsured.equals("1500000") || strSumInsured.equals("2000000")) {
                        strPlanTypeTXT = "Plus";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                    } else if (strSumInsured.equals("2500000") || strSumInsured.equals("3000000")) {
                        strPlanTypeTXT = "Premier";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                    } else if (strSumInsured.equals("4000000") || strSumInsured.equals("5000000")) {
                        strPlanTypeTXT = "Executive";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT;
                    }
                    checkPackage = "PackageSix";
                    PackageOne.setChecked(false);
                    PackageTwo.setChecked(false);
                    PackageThree.setChecked(false);
                    PackageFour.setChecked(false);
                    PackageFive.setChecked(false);
                    PackageSix.setChecked(true);
                    SelectAddOnsButton.setVisibility(View.VISIBLE);
                    packageSix();
                    HealthQuoteAddOn();
                    HealthQuoteCardAmount();
                    health_quote();
//                    new Handler().postDelayed(new Runnable() {
//                        public void run() {
//                            health_quote();
//                        }
//                    }, 2000);
                }
            }
        });

        ImageEye.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                popupEye();
            }
        });
        ImageEye1.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                popupEye();
            }
        });
        oneYearSecondRadio.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (oneYearSecondRadio.isChecked()) {
                    checkPackage = "PackageSix";
                    strPolicyTenure = "1";
                    LongTermDiscountStatus = "False";
                    yearRadio = "OneYearSecondCard";

                    LoyaltyDiscountStatus = "False";
                    CoPaymentStatus = "False";
                    TreatmentStatus = "False";
                    SubCategoryDiscountStatus = "False";
                    OrganDiscountStatus = "False";
                    SubCategoryDiscountStatusCheck = "False";
                    CoPaymentCheckBoxCheck = "False";
                    TreatmentCheckBoxCheck = "False";
                    TiresDiscount = 0;
                    copayemntMax = 0;
                    sublimt = 0.0;
                    loyalityDiscount = 0;
                    OrganDonar = 0.0;
                    LinerPolicyNumber.setVisibility(View.GONE);
                    strPolicyNumber = "";
                    checkBoxLoyaltyDiscount.setChecked(false);
                    OrganCheckBox.setChecked(false);
                    TreatmentCheckBox.setChecked(false);
                    CoPaymentCheckBox.setChecked(false);
                    CoPaymentPercentageLiner.setVisibility(View.GONE);
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                    SubLimitLiner.setVisibility(View.GONE);
                    SubLimitCheckBox.setChecked(false);
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(false);


                    Calendar calendar = Calendar.getInstance();
                    date = calendar.getTime();
                    formatter = new SimpleDateFormat("dd/MM/yyyy");
                    today = formatter.format(date);
                    Log.e("today", today);
                    calendar.add(Calendar.DATE, 364);
                    date = calendar.getTime();
                    formatter = new SimpleDateFormat("dd/MM/yyyy");
                    nextYear = formatter.format(date);
                    packageSix();
                    oneYearSecondRadio.setChecked(true);
                    TwoYearSecondRadio.setChecked(false);
                    ThreeYearSecondRadio.setChecked(false);
                    OneYear.setChecked(false);
                    TwoYearRadio.setChecked(false);
                    ThreeYearRadio.setChecked(false);
                    LinerPackage.setVisibility(View.GONE);
                    LongTerm=0.0;

                    if (strSumInsured.equals("100000") || strSumInsured.equals("200000")) {
                        strPlanTypeTXT = "Basic";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;
                    } else if (strSumInsured.equals("500000") || strSumInsured.equals("400000") || strSumInsured.equals("300000")) {
                        strPlanTypeTXT = "Essential";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;
                    } else if (strSumInsured.equals("600000") || strSumInsured.equals("700000") || strSumInsured.equals("800000") || strSumInsured.equals("900000") || strSumInsured.equals("1000000")) {
                        strPlanTypeTXT = "Privilege";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;

                    } else if (strSumInsured.equals("1500000") || strSumInsured.equals("2000000")) {
                        strPlanTypeTXT = "Plus";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;
                    } else if (strSumInsured.equals("2500000") || strSumInsured.equals("3000000")) {
                        strPlanTypeTXT = "Premier";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;
                    } else if (strSumInsured.equals("4000000") || strSumInsured.equals("5000000")) {
                        strPlanTypeTXT = "Executive";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;
                    }
                    SelectAddOnsButton.setVisibility(View.VISIBLE);
                    HealthQuoteAddOn();
                    HealthQuoteCardAmount();
                    new Handler().postDelayed(new Runnable() {
                        public void run() {
                            health_quote();
                        }
                    }, 2000);
                }
            }
        });
        TwoYearSecondRadio.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (TwoYearSecondRadio.isChecked()) {
                    strPolicyTenure = "2";
                    checkPackage = "PackageSix";
                    yearRadio = "TwoYearSecondCard";
                    LongTermDiscountStatus = "True";
                    Calendar calendar = Calendar.getInstance();
                    date = calendar.getTime();
                    formatter = new SimpleDateFormat("dd/MM/yyyy");
                    today = formatter.format(date);
                    Log.e("today", today);
                    calendar.add(Calendar.DATE, 364 * 2);
                    date = calendar.getTime();
                    formatter = new SimpleDateFormat("dd/MM/yyyy");
                    nextYear = formatter.format(date);
                    Log.e("nextYearTwoDigiPro",nextYear);
                    packageSix();
                    oneYearSecondRadio.setChecked(false);
                    TwoYearSecondRadio.setChecked(true);
                    ThreeYearSecondRadio.setChecked(false);
                    OneYear.setChecked(false);
                    TwoYearRadio.setChecked(false);
                    ThreeYearRadio.setChecked(false);
                    LinerPackage.setVisibility(View.GONE);
                    LongTerm=5.0;

                    LoyaltyDiscountStatus = "False";
                    CoPaymentStatus = "False";
                    TreatmentStatus = "False";
                    SubCategoryDiscountStatus = "False";
                    OrganDiscountStatus = "False";
                    SubCategoryDiscountStatusCheck = "False";
                    CoPaymentCheckBoxCheck = "False";
                    TreatmentCheckBoxCheck = "False";
                    TiresDiscount = 0;
                    copayemntMax = 0;
                    sublimt = 0.0;
                    loyalityDiscount = 0;
                    OrganDonar = 0.0;
                    LinerPolicyNumber.setVisibility(View.GONE);
                    strPolicyNumber = "";
                    checkBoxLoyaltyDiscount.setChecked(false);
                    OrganCheckBox.setChecked(false);
                    TreatmentCheckBox.setChecked(false);
                    CoPaymentCheckBox.setChecked(false);
                    CoPaymentPercentageLiner.setVisibility(View.GONE);
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                    SubLimitLiner.setVisibility(View.GONE);
                    SubLimitCheckBox.setChecked(false);
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(false);

                    if (strSumInsured.equals("100000") || strSumInsured.equals("200000")) {
                        strPlanTypeTXT = "Basic";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;
                    } else if (strSumInsured.equals("500000") || strSumInsured.equals("400000") || strSumInsured.equals("300000")) {
                        strPlanTypeTXT = "Essential";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;

                    } else if (strSumInsured.equals("600000") || strSumInsured.equals("700000") || strSumInsured.equals("800000") || strSumInsured.equals("900000") || strSumInsured.equals("1000000")) {
                        strPlanTypeTXT = "Privilege";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;

                    } else if (strSumInsured.equals("1500000") || strSumInsured.equals("2000000")) {
                        strPlanTypeTXT = "Plus";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;

                    } else if (strSumInsured.equals("2500000") || strSumInsured.equals("3000000")) {
                        strPlanTypeTXT = "Premier";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;

                    } else if (strSumInsured.equals("4000000") || strSumInsured.equals("5000000")) {
                        strPlanTypeTXT = "Executive";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;

                    }
                    SelectAddOnsButton.setVisibility(View.VISIBLE);

                    HealthQuoteAddOn();
                    HealthQuoteCardAmount();
                    new Handler().postDelayed(new Runnable() {
                        public void run() {
                            health_quote();
                        }
                    }, 2000);
                }
            }
        });
        ThreeYearSecondRadio.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (ThreeYearSecondRadio.isChecked()) {
                    strPolicyTenure = "3";
                    checkPackage = "PackageSix";
                    LongTermDiscountStatus = "True";
                    yearRadio = "ThreeYearSecondCard";
                    LoyaltyDiscountStatus = "False";
                    CoPaymentStatus = "False";
                    TreatmentStatus = "False";
                    SubCategoryDiscountStatus = "False";
                    OrganDiscountStatus = "False";
                    SubCategoryDiscountStatusCheck = "False";
                    CoPaymentCheckBoxCheck = "False";
                    TreatmentCheckBoxCheck = "False";
                    TiresDiscount = 0;
                    copayemntMax = 0;
                    sublimt = 0.0;
                    loyalityDiscount = 0;
                    OrganDonar = 0.0;
                    LinerPolicyNumber.setVisibility(View.GONE);
                    strPolicyNumber = "";
                    checkBoxLoyaltyDiscount.setChecked(false);
                    OrganCheckBox.setChecked(false);
                    TreatmentCheckBox.setChecked(false);
                    CoPaymentCheckBox.setChecked(false);
                    CoPaymentPercentageLiner.setVisibility(View.GONE);
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                    SubLimitLiner.setVisibility(View.GONE);
                    SubLimitCheckBox.setChecked(false);
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(false);
                    Calendar calendar = Calendar.getInstance();
                    date = calendar.getTime();
                    formatter = new SimpleDateFormat("dd/MM/yyyy");
                    today = formatter.format(date);
                    Log.e("today", today);
                    calendar.add(Calendar.DATE, 364*3);
                    date = calendar.getTime();
                    formatter = new SimpleDateFormat("dd/MM/yyyy");
                    nextYear = formatter.format(date);
                    Log.e("nextYearThreeDigiPro",nextYear);
                    LongTerm=7.5;
                    packageSix();
                    oneYearSecondRadio.setChecked(false);
                    TwoYearSecondRadio.setChecked(false);
                    ThreeYearSecondRadio.setChecked(true);
                    OneYear.setChecked(false);
                    TwoYearRadio.setChecked(false);
                    ThreeYearRadio.setChecked(false);
                    LinerPackage.setVisibility(View.GONE);
                    if (strSumInsured.equals("100000") || strSumInsured.equals("200000")) {
                        strPlanTypeTXT = "Basic";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;

                    } else if (strSumInsured.equals("500000") || strSumInsured.equals("400000") || strSumInsured.equals("300000")) {
                        strPlanTypeTXT = "Essential";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;

                    } else if (strSumInsured.equals("600000") || strSumInsured.equals("700000") || strSumInsured.equals("800000") || strSumInsured.equals("900000") || strSumInsured.equals("1000000")) {
                        strPlanTypeTXT = "Privilege";
                        strPlanTypeTXT2 = "Digi-Pro";
                        relativeSecond.setVisibility(View.VISIBLE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        PlanTypeTXT2.setText(strPlanTypeTXT2);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        SumInsuredDiGiProTxt.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;

                    } else if (strSumInsured.equals("1500000") || strSumInsured.equals("2000000")) {
                        strPlanTypeTXT = "Plus";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;


                    } else if (strSumInsured.equals("2500000") || strSumInsured.equals("3000000")) {
                        strPlanTypeTXT = "Premier";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;


                    } else if (strSumInsured.equals("4000000") || strSumInsured.equals("5000000")) {
                        strPlanTypeTXT = "Executive";
                        strPlanTypeTXT2 = "";
                        relativeSecond.setVisibility(View.GONE);
                        PlanTypeTXT.setText(strPlanTypeTXT);
                        SumInsuredSelectPlan.setText(strSumInsured);
                        PlanType = strPlanTypeTXT2;

                    }
                    SelectAddOnsButton.setVisibility(View.VISIBLE);
                    HealthQuoteAddOn();
                    HealthQuoteCardAmount();
                    new Handler().postDelayed(new Runnable() {
                        public void run() {
                            health_quote();
                        }
                    }, 2000);
                }
            }
        });
        CoPaymentCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (CoPaymentCheckBox.isChecked()) {
                    CoPaymentStatus = "True";
                    CoPaymentCheckBoxCheck = "True";
                    CoPaymentCheckBox.setChecked(true);
                    CoPaymentPercentageLiner.setVisibility(View.VISIBLE);
                    Toast.makeText(NewCHIAddOns.this, "Please Select percentage of Co-Payment ", Toast.LENGTH_SHORT).show();
//                    if (copayemntMax +DirectPolicy+OrganDonar + loyalityDiscount + sublimt >= 35) {
//                        copayemntMax = 0;
//                        CoPaymentStatus = "False";
//                        CoPaymentCheckBoxCheck = "False";
//                        CoPaymentLoading = "";
//                        TenCheckBox.setChecked(false);
//                        TwentyCheckBox.setChecked(false);
//                        ThirtyCheckBox.setChecked(false);
//                        fortyCheckBox.setChecked(false);
//                        FiftyCheckBox.setChecked(false);
//                        CoPaymentCheckBox.setChecked(false);
//                        CoPaymentPercentageLiner.setVisibility(View.GONE);
//                        discountAlert();
//                    } else {
//                        CoPaymentStatus = "True";
//                        CoPaymentCheckBoxCheck = "True";
//                        CoPaymentCheckBox.setChecked(true);
//                        CoPaymentPercentageLiner.setVisibility(View.VISIBLE);
//                        Toast.makeText(NewCHIAddOns.this, "Please Select percentage of Co-Payment ", Toast.LENGTH_SHORT).show();
//                    }
                } else {
                    if (checkPackage.equals("PackageFive")){
                        CoPaymentStatus = "True";
                        CoPaymentCheckBoxCheck = "True";
                        CoPaymentCheckBox.setChecked(true);
                        CoPaymentPercentageLiner.setVisibility(View.VISIBLE);
                    }else{
                        copayemntMax = 0;
                        CoPaymentStatus = "False";
                        CoPaymentCheckBoxCheck = "False";
                        CoPaymentLoading = "";
                        TenCheckBox.setChecked(false);
                        TwentyCheckBox.setChecked(false);
                        ThirtyCheckBox.setChecked(false);
                        fortyCheckBox.setChecked(false);
                        FiftyCheckBox.setChecked(false);
                        CoPaymentCheckBox.setChecked(false);
                        CoPaymentPercentageLiner.setVisibility(View.GONE);
                        health_quote();
                        HealthQuoteAddOn();
                    }


                }
            }
        });
        TenCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (TenCheckBox.isChecked()) {
                    CoPaymentLoading = "10";
                    copayemntMax = 10;
                    CoPaymentStatus = "True";
                    CoPaymentCheckBoxCheck = "True";
                    health_quote();
                    HealthQuoteAddOn();
                    TenCheckBox.setChecked(true);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
//                    if (TiresDiscount +copayemntMax +DirectPolicy+OrganDonar + loyalityDiscount + sublimt >= 35) {
//                        copayemntMax = 0;
//                        CoPaymentStatus = "False";
//                        CoPaymentCheckBoxCheck = "False";
//                        CoPaymentLoading = "";
//                        TenCheckBox.setChecked(false);
//                        TwentyCheckBox.setChecked(false);
//                        ThirtyCheckBox.setChecked(false);
//                        fortyCheckBox.setChecked(false);
//                        FiftyCheckBox.setChecked(false);
//                        CoPaymentCheckBox.setChecked(false);
//                        discountAlert();
//                    } else {
//                        CoPaymentLoading = "10";
//                        copayemntMax = 10;
//                        CoPaymentStatus = "True";
//                        CoPaymentCheckBoxCheck = "True";
//                        health_quote();
//                        HealthQuoteAddOn();
//                        TenCheckBox.setChecked(true);
//                        TwentyCheckBox.setChecked(false);
//                        ThirtyCheckBox.setChecked(false);
//                        fortyCheckBox.setChecked(false);
//                        FiftyCheckBox.setChecked(false);
//                    }
                }
            }
        });
        TwentyCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (TwentyCheckBox.isChecked()) {
                    CoPaymentLoading = "20";
                    copayemntMax = 20;
                    CoPaymentStatus = "True";
                    CoPaymentCheckBoxCheck = "True";
                    health_quote();
                    HealthQuoteAddOn();
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(true);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
//                    if (TiresDiscount +copayemntMax +DirectPolicy+OrganDonar + loyalityDiscount + sublimt >= 35) {
//                        copayemntMax = 0;
//                        CoPaymentStatus = "False";
//                        CoPaymentCheckBoxCheck = "False";
//                        CoPaymentLoading = "";
//                        TenCheckBox.setChecked(false);
//                        TwentyCheckBox.setChecked(false);
//                        ThirtyCheckBox.setChecked(false);
//                        fortyCheckBox.setChecked(false);
//                        FiftyCheckBox.setChecked(false);
//                        CoPaymentCheckBox.setChecked(false);
//                        discountAlert();
//                    }
//                    else {
//                        CoPaymentLoading = "20";
//                        copayemntMax = 20;
//                        CoPaymentStatus = "True";
//                        CoPaymentCheckBoxCheck = "True";
//                        health_quote();
//                        HealthQuoteAddOn();
//                        TenCheckBox.setChecked(false);
//                        TwentyCheckBox.setChecked(true);
//                        ThirtyCheckBox.setChecked(false);
//                        fortyCheckBox.setChecked(false);
//                        FiftyCheckBox.setChecked(false);
//                    }

                }
            }
        });
        ThirtyCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (ThirtyCheckBox.isChecked()) {
                    CoPaymentLoading = "30";
                    copayemntMax = 30;
                    CoPaymentStatus = "True";
                    CoPaymentCheckBoxCheck = "True";
                    health_quote();
                    HealthQuoteAddOn();
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(true);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
//                    if (TiresDiscount +copayemntMax +DirectPolicy+OrganDonar + loyalityDiscount + sublimt >= 35) {
//                        copayemntMax = 0;
//                        CoPaymentStatus = "False";
//                        CoPaymentCheckBoxCheck = "False";
//                        CoPaymentLoading = "";
//                        CoPaymentCheckBox.setChecked(false);
//                        TenCheckBox.setChecked(false);
//                        TwentyCheckBox.setChecked(false);
//                        ThirtyCheckBox.setChecked(false);
//                        fortyCheckBox.setChecked(false);
//                        FiftyCheckBox.setChecked(false);
//                        discountAlert();
//                    }
//                    else {
//                        CoPaymentLoading = "30";
//                        copayemntMax = 30;
//                        CoPaymentStatus = "True";
//                        CoPaymentCheckBoxCheck = "True";
//                        health_quote();
//                        HealthQuoteAddOn();
//                        TenCheckBox.setChecked(false);
//                        TwentyCheckBox.setChecked(false);
//                        ThirtyCheckBox.setChecked(true);
//                        fortyCheckBox.setChecked(false);
//                        FiftyCheckBox.setChecked(false);
//                    }

                }
            }
        });
        fortyCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (fortyCheckBox.isChecked()) {
                    CoPaymentLoading = "40";
                    copayemntMax = 40;
                    CoPaymentStatus = "True";
                    CoPaymentCheckBoxCheck = "True";
                    health_quote();
                    HealthQuoteAddOn();
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(true);
                    FiftyCheckBox.setChecked(false);
//                    if (TiresDiscount +copayemntMax +DirectPolicy+OrganDonar + loyalityDiscount + sublimt >= 35) {
//                        copayemntMax = 0;
//                        CoPaymentStatus = "False";
//                        CoPaymentCheckBoxCheck = "False";
//                        CoPaymentLoading = "";
//                        CoPaymentCheckBox.setChecked(false);
//                        TenCheckBox.setChecked(false);
//                        TwentyCheckBox.setChecked(false);
//                        ThirtyCheckBox.setChecked(false);
//                        fortyCheckBox.setChecked(false);
//                        FiftyCheckBox.setChecked(false);
//                        discountAlert();
//                    }
//                    else {
//                        CoPaymentLoading = "40";
//                        copayemntMax = 40;
//                        CoPaymentStatus = "True";
//                        CoPaymentCheckBoxCheck = "True";
//                        health_quote();
//                        HealthQuoteAddOn();
//                        TenCheckBox.setChecked(false);
//                        TwentyCheckBox.setChecked(false);
//                        ThirtyCheckBox.setChecked(false);
//                        fortyCheckBox.setChecked(true);
//                        FiftyCheckBox.setChecked(false);
//                    }

                }
            }
        });
        FiftyCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (FiftyCheckBox.isChecked()) {
                    CoPaymentLoading = "50";
                    copayemntMax = 50;
                    CoPaymentStatus = "True";
                    CoPaymentCheckBoxCheck = "True";
                    health_quote();
                    HealthQuoteAddOn();
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(true);
//                    if (TiresDiscount +copayemntMax +DirectPolicy+OrganDonar + loyalityDiscount + sublimt >= 35) {
//                        copayemntMax = 0;
//                        CoPaymentStatus = "False";
//                        CoPaymentCheckBoxCheck = "False";
//                        CoPaymentLoading = "";
//                        CoPaymentCheckBox.setChecked(false);
//                        TenCheckBox.setChecked(false);
//                        TwentyCheckBox.setChecked(false);
//                        ThirtyCheckBox.setChecked(false);
//                        fortyCheckBox.setChecked(false);
//                        FiftyCheckBox.setChecked(false);
//                        discountAlert();
//                    }
//                    else {
//                        CoPaymentLoading = "50";
//                        copayemntMax = 50;
//                        CoPaymentStatus = "True";
//                        CoPaymentCheckBoxCheck = "True";
//                        CoPaymentCheckBox.setChecked(true);
//                        CoPaymentPercentageLiner.setVisibility(View.VISIBLE);
//                        health_quote();
//                        HealthQuoteAddOn();
//                        TenCheckBox.setChecked(false);
//                        TwentyCheckBox.setChecked(false);
//                        ThirtyCheckBox.setChecked(false);
//                        fortyCheckBox.setChecked(false);
//                        FiftyCheckBox.setChecked(true);
//                    }

                }
            }
        });
        checkBoxLoyaltyDiscount.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (checkBoxLoyaltyDiscount.isChecked()) {
                    LoyaltyDiscountStatus = "True";
                    checkBoxLoyaltyDiscount.setChecked(true);
                    LinerPolicyNumber.setVisibility(View.VISIBLE);
                    Toast.makeText(NewCHIAddOns.this, "Please Enter Policy Number", Toast.LENGTH_SHORT).show();
//                    if (TiresDiscount +LongTerm+DirectPolicy+OrganDonar + loyalityDiscount + sublimt >= 35) {
//                        loyalityDiscount = 0;
//                        LinerPolicyNumber.setVisibility(View.GONE);
//                        strPolicyNumber = "";
//                        LoyaltyDiscountStatus = "False";
//                        checkBoxLoyaltyDiscount.setChecked(false);
//                        discountAlert();
//                    } else {
//                        LoyaltyDiscountStatus = "True";
//                        checkBoxLoyaltyDiscount.setChecked(true);
//                        LinerPolicyNumber.setVisibility(View.VISIBLE);
//                        Toast.makeText(NewCHIAddOns.this, "Please Enter Policy Number", Toast.LENGTH_SHORT).show();
//                    }
                } else {
                    loyalityDiscount = 0;
                    LinerPolicyNumber.setVisibility(View.GONE);
                    strPolicyNumber = "";
                    LoyaltyDiscountStatus = "False";
                    health_quote();
                    HealthQuoteAddOn();
                    checkBoxLoyaltyDiscount.setChecked(false);
                }
            }
        });
        PolicyNumber.addTextChangedListener(new TextWatcher() {

            @Override
            public void onTextChanged(CharSequence s, int start, int before, int count) {
                // TODO Auto-generated method stub
            }

            @Override
            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
                // TODO Auto-generated method stub
            }

            @Override
            public void afterTextChanged(Editable s) {
                Is_Valid_refer(PolicyNumber);
//                if (TiresDiscount +DirectPolicy+OrganDonar + loyalityDiscount + sublimt >= 35) {
//                    loyalityDiscount = 0;
//                    strPolicyNumber = "";
//                    LoyaltyDiscountStatus = "False";
//                    LinerPolicyNumber.setVisibility(View.GONE);
//                    checkBoxLoyaltyDiscount.setChecked(false);
//                    discountAlert();
//                } else {
//
//                }
                // pass your EditText Obj here.
            }

            public void Is_Valid_refer(EditText edt_refer) {
                if (edt_refer.length() == 20) {
                    strPolicyNumber = edt_refer.getText().toString();
                    if (!edt_refer.getText().toString().contains("/")) {
                        Toast.makeText(NewCHIAddOns.this, "Please Enter Existing Policy Number", Toast.LENGTH_SHORT).show();
                        loyalityDiscount = 0;
                    } else {
                        LoyaltyDiscountStatus = "True";
                        loyalityDiscount = 5;
                        health_quote();
                        HealthQuoteAddOn();
                    }
                } else if (edt_refer.getText().toString().equals("")) {
                    loyalityDiscount = 0;
                    Toast.makeText(NewCHIAddOns.this, "Please Enter Existing Policy Number", Toast.LENGTH_SHORT).show();
                }
            }
        });
        SubLimitCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (SubLimitCheckBox.isChecked()) {
                    SubLimitCheckBox.setChecked(true);
                    SubCategoryDiscountStatusCheck = "True";
                    SubCategoryDiscountStatus = "True";
                    SubLimitLiner.setVisibility(View.VISIBLE);
                    Toast.makeText(NewCHIAddOns.this, "Please Select SubCategory ", Toast.LENGTH_SHORT).show();
//                    if (TiresDiscount +LongTerm +DirectPolicy+OrganDonar + sublimt >= 35) {
//                        SubCategoryDiscountStatus = "False";
//                        SubCategoryDiscountStatusCheck = "False";
//                        SubLimitCheckBox.setChecked(false);
//                        SubLimitLiner.setVisibility(View.GONE);
//                        ACheckBox.setChecked(false);
//                        BCheckBox.setChecked(false);
//                        CCheckBox.setChecked(false);
//                        sublimt = 0.0;
//                        discountAlert();
//                    } else {
//                        SubLimitCheckBox.setChecked(true);
//                        SubCategoryDiscountStatusCheck = "True";
//                        SubCategoryDiscountStatus = "True";
//                        SubLimitLiner.setVisibility(View.VISIBLE);
//                        Toast.makeText(NewCHIAddOns.this, "Please Select SubCategory ", Toast.LENGTH_SHORT).show();
//                    }
                } else {
                    if (checkPackage.equals("PackageFive")){
                        SubLimitCheckBox.setChecked(true);
                        SubCategoryDiscountStatusCheck = "True";
                        SubCategoryDiscountStatus = "True";
                        SubLimitLiner.setVisibility(View.VISIBLE);
                    }else{
                        sublimt = 0.0;
                        SubCategoryDiscountStatus = "False";
                        SubCategoryDiscountStatusCheck = "False";
                        ACheckBox.setChecked(false);
                        BCheckBox.setChecked(false);
                        CCheckBox.setChecked(false);
                        SubLimitCheckBox.setChecked(false);
                        SubLimitLiner.setVisibility(View.GONE);
                        health_quote();
                        HealthQuoteAddOn();
                    }
                }
            }
        });
        ACheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (ACheckBox.isChecked()) {
                    SubCategory = "A";
                    sublimt = 10.0;
                    SubLimitCheckBox.setChecked(true);
                    SubCategoryDiscountStatusCheck = "True";
                    SubCategoryDiscountStatus = "True";
                    SubLimitLiner.setVisibility(View.VISIBLE);
                    health_quote();
                    HealthQuoteAddOn();
                    ACheckBox.setChecked(true);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(false);
//                    if (TiresDiscount +LongTerm +DirectPolicy+OrganDonar + sublimt >= 35) {
//                        SubCategoryDiscountStatus = "False";
//                        SubCategoryDiscountStatusCheck = "False";
//                        SubLimitCheckBox.setChecked(false);
//                        ACheckBox.setChecked(false);
//                        BCheckBox.setChecked(false);
//                        CCheckBox.setChecked(false);
//                        SubLimitLiner.setVisibility(View.GONE);
//                        discountAlert();
//                        sublimt = 0.0;
//                    } else {
//                        SubCategory = "A";
//                        sublimt = 10.0;
//                        SubLimitCheckBox.setChecked(true);
//                        SubCategoryDiscountStatusCheck = "True";
//                        SubCategoryDiscountStatus = "True";
//                        SubLimitLiner.setVisibility(View.VISIBLE);
//                        health_quote();
//                        HealthQuoteAddOn();
//                        ACheckBox.setChecked(true);
//                        BCheckBox.setChecked(false);
//                        CCheckBox.setChecked(false);
//                    }

                }
            }
        });
        BCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (BCheckBox.isChecked()) {
                    SubCategory = "B";
                    sublimt = 7.5;
                    SubLimitCheckBox.setChecked(true);
                    SubCategoryDiscountStatusCheck = "True";
                    SubCategoryDiscountStatus = "True";
                    SubLimitLiner.setVisibility(View.VISIBLE);
                    health_quote();
                    HealthQuoteAddOn();
                    BCheckBox.setChecked(true);
                    ACheckBox.setChecked(false);
                    CCheckBox.setChecked(false);
//                    if (TiresDiscount +LongTerm +DirectPolicy+OrganDonar + sublimt >= 35) {
//                        SubCategoryDiscountStatus = "False";
//                        SubCategoryDiscountStatusCheck = "False";
//                        SubLimitCheckBox.setChecked(false);
//                        ACheckBox.setChecked(false);
//                        BCheckBox.setChecked(false);
//                        CCheckBox.setChecked(false);
//                        SubLimitLiner.setVisibility(View.GONE);
//                        sublimt = 0.0;
//                        discountAlert();
//                    } else {
//                        SubCategory = "B";
//                        sublimt = 7.5;
//                        SubLimitCheckBox.setChecked(true);
//                        SubCategoryDiscountStatusCheck = "True";
//                        SubCategoryDiscountStatus = "True";
//                        SubLimitLiner.setVisibility(View.VISIBLE);
//                        health_quote();
//                        HealthQuoteAddOn();
//                        BCheckBox.setChecked(true);
//                        ACheckBox.setChecked(false);
//                        CCheckBox.setChecked(false);
//                    }
                }
            }
        });
        CCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (CCheckBox.isChecked()) {
                    SubCategory = "C";
                    sublimt = 5.0;
                    SubLimitCheckBox.setChecked(true);
                    SubCategoryDiscountStatusCheck = "True";
                    SubCategoryDiscountStatus = "True";
                    SubLimitLiner.setVisibility(View.VISIBLE);
                    health_quote();
                    HealthQuoteAddOn();
                    CCheckBox.setChecked(true);
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(false);
//                    if (TiresDiscount +LongTerm +DirectPolicy+OrganDonar + sublimt >= 35) {
//                        SubCategoryDiscountStatus = "False";
//                        SubCategoryDiscountStatusCheck = "False";
//                        SubLimitCheckBox.setChecked(false);
//                        ACheckBox.setChecked(false);
//                        BCheckBox.setChecked(false);
//                        CCheckBox.setChecked(false);
//                        SubLimitLiner.setVisibility(View.GONE);
//                        discountAlert();
//                        sublimt = 0.0;
//                    } else {
//                        SubCategory = "C";
//                        sublimt = 5.0;
//                        SubLimitCheckBox.setChecked(true);
//                        SubCategoryDiscountStatusCheck = "True";
//                        SubCategoryDiscountStatus = "True";
//                        SubLimitLiner.setVisibility(View.VISIBLE);
//                        health_quote();
//                        HealthQuoteAddOn();
//                        CCheckBox.setChecked(true);
//                        ACheckBox.setChecked(false);
//                        BCheckBox.setChecked(false);
//                    }

                }
            }
        });
        TreatmentCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (TreatmentCheckBox.isChecked()) {
                    TreatmentCheckBoxCheck = "True";
                    TreatmentStatus = "True";
                    TiresDiscount = 5;
                    TreatmentCheckBox.setChecked(true);
                    health_quote();
                    HealthQuoteAddOn();
//                    if (TiresDiscount +LongTerm +DirectPolicy+OrganDonar + sublimt >= 35) {
//                        TreatmentStatus = "False";
//                        TreatmentCheckBoxCheck = "False";
//                        TiresDiscount = 0;
//                        TreatmentCheckBox.setChecked(false);
//                        discountAlert();
//                    } else {
//                        TreatmentCheckBoxCheck = "True";
//                        TreatmentStatus = "True";
//                        TiresDiscount = 5;
//                        TreatmentCheckBox.setChecked(true);
//                        health_quote();
//                        HealthQuoteAddOn();
//                    }
                } else {
                    if (checkPackage.equals("PackageFive")){
                        TreatmentCheckBoxCheck = "True";
                        TreatmentStatus = "True";
                        TreatmentCheckBox.setChecked(true);
                    }else{
                        TiresDiscount = 0;
                        TreatmentStatus = "False";
                        TreatmentCheckBoxCheck = "False";
                        TreatmentCheckBox.setChecked(false);
                        health_quote();
                        HealthQuoteAddOn();
                    }

                }
            }
        });
        OrganCheckBox.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (OrganCheckBox.isChecked()) {
                    OrganDiscountStatus = "True";
                    OrganDonar = 2.5;
                    OrganCheckBox.setChecked(true);
                    health_quote();
                    HealthQuoteAddOn();
//                    if (TiresDiscount +LongTerm +DirectPolicy+OrganDonar + sublimt >= 35) {
//                        OrganDiscountStatus = "False";
//                        OrganDonar = 0.0;
//                        OrganCheckBox.setChecked(false);
//                        discountAlert();
//                    } else {
//                        OrganDiscountStatus = "True";
//                        OrganDonar = 2.5;
//                        OrganCheckBox.setChecked(true);
//                        health_quote();
//                        HealthQuoteAddOn();
//                    }
                } else {
                    OrganDonar = 0.0;
                    OrganDiscountStatus = "False";
                    OrganCheckBox.setChecked(false);
                    health_quote();
                    HealthQuoteAddOn();
                }



            }
        });
        continueButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                str_edt_name = SelfNameText.getText().toString();
                if (TiresDiscount +LongTerm +DirectPolicy+OrganDonar + sublimt >= 35) {
                    discountAlert();
                }else{
                    if (str_edt_name.equals("")) {
                        Toast.makeText(NewCHIAddOns.this, "Please Enter Member Name", Toast.LENGTH_SHORT).show();
                    }
                    else if (!(strPackage1.equals("Check") || strPackageTwo.equals("Check") || strPackageThree.equals("Check") || strPackageFour.equals("Check") || strPackageFive.equals("Check") || strPackageSix.equals("Check"))) {
                        Toast.makeText(NewCHIAddOns.this, "Select At-Least One Package", Toast.LENGTH_SHORT).show();
                    }
                    else {
                        if (CoPaymentCheckBox.isChecked()) {
                            if (CoPaymentLoading.equals("")) {
                                Toast.makeText(NewCHIAddOns.this, "Please Select percentage of Co-Payment ", Toast.LENGTH_SHORT).show();
                            } else if (checkBoxLoyaltyDiscount.isChecked()) {
                                if (strPolicyNumber.equals("")) {
                                    Toast.makeText(NewCHIAddOns.this, "Please Enter Policy Number", Toast.LENGTH_SHORT).show();
                                } else if (!(strPolicyNumber.contains("/") && strPolicyNumber.length() == 20)) {
                                    Toast.makeText(NewCHIAddOns.this, "Please Enter Existing Policy Number", Toast.LENGTH_SHORT).show();
                                } else {
                                    popupElse();
                                }
                            } else if (SubLimitCheckBox.isChecked()) {
                                if (SubCategory.equals("")) {
                                    Toast.makeText(NewCHIAddOns.this, "Please Select SubCategory for Sub-Limt discount", Toast.LENGTH_SHORT).show();
                                } else {
                                    popupElse();
                                }
                            } else {
                                popupElse();
                            }
                        } else if (checkBoxLoyaltyDiscount.isChecked()) {
                            if (strPolicyNumber.equals("")) {
                                Toast.makeText(NewCHIAddOns.this, "Please Enter Policy Number", Toast.LENGTH_SHORT).show();
                            } else if (!(strPolicyNumber.contains("/") && strPolicyNumber.length() == 20)) {
                                Toast.makeText(NewCHIAddOns.this, "Please Enter Existing Policy Number", Toast.LENGTH_SHORT).show();
                            } else if (SubLimitCheckBox.isChecked()) {
                                if (SubCategory.equals("")) {
                                    Toast.makeText(NewCHIAddOns.this, "Please Select SubCategory for Sub-Limt discount", Toast.LENGTH_SHORT).show();
                                } else {
                                    popupElse();
                                }
                            } else {
                                popupElse();
                            }
                        } else if (SubLimitCheckBox.isChecked()) {
                            if (SubCategory.equals("")) {
                                Toast.makeText(NewCHIAddOns.this, "Please Select SubCategory for Sub-Limt discount", Toast.LENGTH_SHORT).show();
                            } else {
                                popupElse();
                            }
                        } else {
                            popupElse();
                        }
                    }
                }
            }
        });
        infoImge.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                final Dialog Orgondialog = new Dialog(NewCHIAddOns.this);
                Orgondialog.setCanceledOnTouchOutside(false);
                Orgondialog.setCancelable(false);
                Orgondialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
                Objects.requireNonNull(Orgondialog.getWindow()).setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));
                Orgondialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;
                Orgondialog.setContentView(R.layout.alert_dialog_organ);
                WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
                lp.copyFrom(Orgondialog.getWindow().getAttributes());
                lp.width = WindowManager.LayoutParams.MATCH_PARENT;
                lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
                lp.gravity = Gravity.CENTER;
                TextView ok_dialog;
                CheckBox checkbox;
                checkbox= Orgondialog.findViewById(R.id.checkbox);
                checkbox.setChecked(true);
                checkbox.setClickable(false);
                ok_dialog = Orgondialog.findViewById(R.id.ok_dialog);
                ok_dialog.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        Orgondialog.dismiss();
                    }
                });
                Orgondialog.show();
            }
        });
        SelectAddOnsButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
//                BottomSheetDialog bottomSheetDialog=new BottomSheetDialog(NewCHIAddOns.this,R.style.BottomSheetTheme);
//                View viewBottomSheet= LayoutInflater.from(NewCHIAddOns.this).inflate(R.layout.chi_bottom_addons,null);
//                bottomSheetDialog.setContentView(viewBottomSheet);
//                bottomSheetDialog.setCanceledOnTouchOutside(false);
                final Dialog viewBottomSheet = new Dialog(NewCHIAddOns.this);
                viewBottomSheet.setCanceledOnTouchOutside(false);
                viewBottomSheet.setCancelable(false);
                viewBottomSheet.requestWindowFeature(Window.FEATURE_NO_TITLE);
                Objects.requireNonNull(viewBottomSheet.getWindow()).setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));
                viewBottomSheet.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation1;
                viewBottomSheet.setContentView(R.layout.chi_bottom_addons);
                WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
                lp.copyFrom(viewBottomSheet.getWindow().getAttributes());
                lp.width = WindowManager.LayoutParams.MATCH_PARENT;
                lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
                lp.gravity = Gravity.BOTTOM;
                viewBottomSheet.getWindow().setAttributes(lp);
                CheckBoxDailyCash = viewBottomSheet.findViewById(R.id.CheckBoxDailyCash);
                CheckBoxCriticalIllnes = viewBottomSheet.findViewById(R.id.CheckBoxCriticalIllnes);
                CheckBoxPreHospitalization = viewBottomSheet.findViewById(R.id.CheckBoxPreHospitalization);
                CheckBoxProHospitalization = viewBottomSheet.findViewById(R.id.CheckBoxProHospitalization);
                CheckBoxMaternityChildcare = viewBottomSheet.findViewById(R.id.CheckBoxMaternityChildcare);
                CheckBoxCoverageNonMedical = viewBottomSheet.findViewById(R.id.CheckBoxCoverageNonMedical);
                CheckBoxConditionWaiver = viewBottomSheet.findViewById(R.id.CheckBoxConditionWaiver);
                CheckBoxPersonalCoverA = viewBottomSheet.findViewById(R.id.CheckBoxPersonalCoverA);
                CheckBoxPersonalCoverB = viewBottomSheet.findViewById(R.id.CheckBoxPersonalCoverB);
                CheckBoxPreExistingDisease = viewBottomSheet.findViewById(R.id.CheckBoxPreExistingDisease);
                CheckBoxOutpatientDental = viewBottomSheet.findViewById(R.id.CheckBoxOutpatientDental);
                CheckBoxEmergencyTravelling = viewBottomSheet.findViewById(R.id.CheckBoxEmergencyTravelling);
                CheckBoxSecondOpinion = viewBottomSheet.findViewById(R.id.CheckBoxSecondOpinion);
                CheckBoxRestCure = viewBottomSheet.findViewById(R.id.CheckBoxRestCure);
                CheckBoxObesityWeight = viewBottomSheet.findViewById(R.id.CheckBoxObesityWeight);
                CheckBoxSterilityInfertility = viewBottomSheet.findViewById(R.id.CheckBoxSterilityInfertility);
                CheckBoxEnhancedOrgan = viewBottomSheet.findViewById(R.id.CheckBoxEnhancedOrgan);
                CheckBoxMedicallyAdvised = viewBottomSheet.findViewById(R.id.CheckBoxMedicallyAdvised);
                CheckBoxHomeCare = viewBottomSheet.findViewById(R.id.CheckBoxHomeCare);
                CheckBoxWellnessBenefit = viewBottomSheet.findViewById(R.id.CheckBoxWellnessBenefit);
                CheckBoxDiseaseManagement = viewBottomSheet.findViewById(R.id.CheckBoxDiseaseManagement);
                CheckBoxModernTreatments = viewBottomSheet.findViewById(R.id.CheckBoxModernTreatments);
                CheckBoxPremiumWaiver = viewBottomSheet.findViewById(R.id.CheckBoxPremiumWaiver);
                CheckBoxGlobalCover = viewBottomSheet.findViewById(R.id.CheckBoxGlobalCover);
                CheckBoxEmergencyAssistance = viewBottomSheet.findViewById(R.id.CheckBoxEmergencyAssistance);
                TextView DailyCashPremiumTxt = viewBottomSheet.findViewById(R.id.DailyCashPremiumTxt);
                TextView CriticalIllnessPremiumTxt = viewBottomSheet.findViewById(R.id.CriticalIllnessPremiumTxt);
                TextView PreHospitalizationPremiumTxt = viewBottomSheet.findViewById(R.id.PreHospitalizationPremiumTxt);
                TextView ProHospitalizationPremiumTxt = viewBottomSheet.findViewById(R.id.ProHospitalizationPremiumTxt);
                TextView MaternityChildcarePremiumTxt = viewBottomSheet.findViewById(R.id.MaternityChildcarePremiumTxt);
                TextView NoMedicalPremiumTxt = viewBottomSheet.findViewById(R.id.NoMedicalPremiumTxt);
                TextView ConditionPremiumTxt = viewBottomSheet.findViewById(R.id.ConditionPremiumTxt);
                TextView PersonalAPremiumTxt = viewBottomSheet.findViewById(R.id.PersonalAPremiumTxt);
                TextView PersonalBPremiumTxt = viewBottomSheet.findViewById(R.id.PersonalBPremiumTxt);
                TextView PreexistingDiseasePremiumTxt = viewBottomSheet.findViewById(R.id.PreexistingDiseasePremiumTxt);
                TextView OutPatientPremiumTxt = viewBottomSheet.findViewById(R.id.OutPatientPremiumTxt);
                TextView EmergencyTravellingPremiumTxt = viewBottomSheet.findViewById(R.id.EmergencyTravellingPremiumTxt);
                TextView SecondOpinionPremiumTxt = viewBottomSheet.findViewById(R.id.SecondOpinionPremiumTxt);
                TextView RestCurePremiumTxt = viewBottomSheet.findViewById(R.id.RestCurePremiumTxt);
                TextView ObesityPremiumTxt = viewBottomSheet.findViewById(R.id.ObesityPremiumTxt);
                TextView SterilityPremiumTxt = viewBottomSheet.findViewById(R.id.SterilityPremiumTxt);
                TextView EnhancedOrganPremiumTxt = viewBottomSheet.findViewById(R.id.EnhancedOrganPremiumTxt);
                TextView MedicallyPremiumTxt = viewBottomSheet.findViewById(R.id.MedicallyPremiumTxt);
                TextView HomeCarePremiumTxt = viewBottomSheet.findViewById(R.id.HomeCarePremiumTxt);
                TextView WellnessBenefitPremiumTxt = viewBottomSheet.findViewById(R.id.WellnessBenefitPremiumTxt);
                TextView DiseaseManagementPremiumTxt = viewBottomSheet.findViewById(R.id.DiseaseManagementPremiumTxt);
                TextView ModernTreatmentsPremiumTxt = viewBottomSheet.findViewById(R.id.ModernTreatmentsPremiumTxt);
                TextView PremiumWaiverPremiumTxt = viewBottomSheet.findViewById(R.id.PremiumWaiverPremiumTxt);
                TextView GlobalCoverPremiumTxt = viewBottomSheet.findViewById(R.id.GlobalCoverPremiumTxt);

                TextView EmergencyAssistancePremiumTxt = viewBottomSheet.findViewById(R.id.EmergencyAssistancePremiumTxt);
                ImageView bottomCancel = viewBottomSheet.findViewById(R.id.bottomCancel);
                LinearLayout LinerMaternity = viewBottomSheet.findViewById(R.id.LinerMaternity);
                LinearLayout SterilityLiner = viewBottomSheet.findViewById(R.id.SterilityLiner);
                LinearLayout GlobalLiner = viewBottomSheet.findViewById(R.id.GlobalLiner);
                LinearLayout PersonalCoverALiner = viewBottomSheet.findViewById(R.id.PersonalCoverALiner);
                LinearLayout PersonalCoverBLiner = viewBottomSheet.findViewById(R.id.PersonalCoverBLiner);
                LinearLayout NonMedicalLiner = viewBottomSheet.findViewById(R.id.NonMedicalLiner);
                LinearLayout ConditionWaiverLiner = viewBottomSheet.findViewById(R.id.ConditionWaiverLiner);
                LinearLayout PreExistingLiner = viewBottomSheet.findViewById(R.id.PreExistingLiner);
                LinearLayout OutpatientDentalLiner = viewBottomSheet.findViewById(R.id.OutpatientDentalLiner);
                LinearLayout EmergencyAssistanceLiner = viewBottomSheet.findViewById(R.id.EmergencyAssistanceLiner);
                LinearLayout SecondLiner = viewBottomSheet.findViewById(R.id.SecondLiner);
                LinearLayout RestCureLiner = viewBottomSheet.findViewById(R.id.RestCureLiner);
                LinearLayout ObesityLiner = viewBottomSheet.findViewById(R.id.ObesityLiner);
                LinearLayout EnhancedLiner = viewBottomSheet.findViewById(R.id.EnhancedLiner);
                LinearLayout EmergencyLiner = viewBottomSheet.findViewById(R.id.EmergencyLiner);
                LinearLayout LinerHomeCare = viewBottomSheet.findViewById(R.id.LinerHomeCare);
                LinearLayout LinerMedically = viewBottomSheet.findViewById(R.id.LinerMedically);
                LinearLayout WellnessLiner = viewBottomSheet.findViewById(R.id.WellnessLiner);
                LinearLayout DiseaseLiner = viewBottomSheet.findViewById(R.id.DiseaseLiner);
                LinearLayout ModernLiner = viewBottomSheet.findViewById(R.id.ModernLiner);
                LinearLayout PremiumLiner = viewBottomSheet.findViewById(R.id.PremiumLiner);
                LinearLayout DailyCashLiner = viewBottomSheet.findViewById(R.id.DailyCashLiner);
                LinearLayout CriticalIllnesLiner = viewBottomSheet.findViewById(R.id.CriticalIllnesLiner);
                LinearLayout ExtensionPreHospLiner = viewBottomSheet.findViewById(R.id.ExtensionPreHospLiner);
                LinearLayout ExtensionProHospLiner = viewBottomSheet.findViewById(R.id.ExtensionProHospLiner);


                if (checkPackage.equals("PackageOne")) {
                    CheckBoxConditionWaiver.setChecked(true);
                    CheckBoxPreHospitalization.setChecked(true);
                    CheckBoxProHospitalization.setChecked(true);
                    CheckBoxEmergencyAssistance.setChecked(true);
                    CheckBoxPersonalCoverA.setChecked(true);
                    CheckBoxWellnessBenefit.setChecked(true);
                    CheckBoxConditionWaiver.setClickable(false);
                    CheckBoxPreHospitalization.setClickable(false);
                    CheckBoxProHospitalization.setClickable(false);
                    CheckBoxEmergencyAssistance.setClickable(false);
                    CheckBoxPersonalCoverA.setClickable(false);
                    CheckBoxWellnessBenefit.setClickable(false);
                    //thursday

                    checkboxCheck();

//                    CheckBoxDailyCash.setClickable(true);
//                    CheckBoxCriticalIllnes.setClickable(false);
//                    CheckBoxMaternityChildcare.setClickable(false);
//                    CheckBoxCoverageNonMedical.setClickable(false);
//                    CheckBoxPreExistingDisease.setClickable(false);
//                    CheckBoxOutpatientDental.setClickable(false);
//                    CheckBoxEmergencyTravelling.setClickable(false);
//                    CheckBoxSecondOpinion.setClickable(false);
//                    CheckBoxRestCure.setClickable(false);
//                    CheckBoxObesityWeight.setClickable(false);
//                    CheckBoxSterilityInfertility.setClickable(false);
//                    CheckBoxEnhancedOrgan.setClickable(false);
//                    CheckBoxMedicallyAdvised.setClickable(false);
//                    CheckBoxHomeCare.setClickable(false);
//                    CheckBoxDiseaseManagement.setClickable(false);
//                    CheckBoxGlobalCover.setClickable(false);
//                    CheckBoxModernTreatments.setClickable(false);
//                    CheckBoxPremiumWaiver.setClickable(false);

                }
                else if (checkPackage.equals("PackageTwo")) {
                    CheckBoxConditionWaiver.setChecked(true);
                    CheckBoxPremiumWaiver.setChecked(true);
                    CheckBoxSecondOpinion.setChecked(true);
                    CheckBoxModernTreatments.setChecked(true);
                    CheckBoxPersonalCoverA.setChecked(true);
                    CheckBoxEmergencyAssistance.setChecked(true);
                    CheckBoxConditionWaiver.setClickable(false);
                    CheckBoxPremiumWaiver.setClickable(false);
                    CheckBoxSecondOpinion.setClickable(false);
                    CheckBoxModernTreatments.setClickable(false);
                    CheckBoxPersonalCoverA.setClickable(false);
                    CheckBoxEmergencyAssistance.setClickable(false);
                    checkboxCheck();

//                    //thursday
//                    CheckBoxDailyCash.setClickable(false);
//                    CheckBoxCriticalIllnes.setClickable(false);
//                    CheckBoxPreHospitalization.setClickable(false);
//                    CheckBoxProHospitalization.setClickable(false);
//                    CheckBoxMaternityChildcare.setClickable(false);
//                    CheckBoxCoverageNonMedical.setClickable(false);
//                    CheckBoxPreExistingDisease.setClickable(false);
//                    CheckBoxOutpatientDental.setClickable(false);
//                    CheckBoxEmergencyTravelling.setClickable(false);
//                    CheckBoxRestCure.setClickable(false);
//                    CheckBoxObesityWeight.setClickable(false);
//                    CheckBoxSterilityInfertility.setClickable(false);
//                    CheckBoxEnhancedOrgan.setClickable(false);
//                    CheckBoxMedicallyAdvised.setClickable(false);
//                    CheckBoxHomeCare.setClickable(false);
//                    CheckBoxWellnessBenefit.setClickable(false);
//                    CheckBoxDiseaseManagement.setClickable(false);
//                    CheckBoxGlobalCover.setClickable(false);
                }
                else if (checkPackage.equals("PackageThree")) {
                    CheckBoxConditionWaiver.setChecked(true);
                    CheckBoxCoverageNonMedical.setChecked(true);
                    CheckBoxMedicallyAdvised.setChecked(true);
                    CheckBoxEnhancedOrgan.setChecked(true);
                    CheckBoxPersonalCoverA.setChecked(true);
                    CheckBoxHomeCare.setChecked(true);
                    CheckBoxConditionWaiver.setClickable(false);
                    CheckBoxCoverageNonMedical.setClickable(false);
                    CheckBoxMedicallyAdvised.setClickable(false);
                    CheckBoxEnhancedOrgan.setClickable(false);
                    CheckBoxPersonalCoverA.setClickable(false);
                    CheckBoxHomeCare.setClickable(false);

                    checkboxCheck();
//                    //thursday
//                    CheckBoxDailyCash.setClickable(false);
//                    CheckBoxCriticalIllnes.setClickable(false);
//                    CheckBoxPreHospitalization.setClickable(false);
//                    CheckBoxProHospitalization.setClickable(false);
//                    CheckBoxMaternityChildcare.setClickable(false);
//                    CheckBoxPreExistingDisease.setClickable(false);
//                    CheckBoxOutpatientDental.setClickable(false);
//                    CheckBoxEmergencyTravelling.setClickable(false);
//                    CheckBoxSecondOpinion.setClickable(false);
//                    CheckBoxRestCure.setClickable(false);
//                    CheckBoxObesityWeight.setClickable(false);
//                    CheckBoxSterilityInfertility.setClickable(false);
//                    CheckBoxEmergencyAssistance.setClickable(false);
//                    CheckBoxWellnessBenefit.setClickable(false);
//                    CheckBoxDiseaseManagement.setClickable(false);
//                    CheckBoxGlobalCover.setClickable(false);
//                    CheckBoxModernTreatments.setClickable(false);
//                    CheckBoxPremiumWaiver.setClickable(false);
                }
                else if (checkPackage.equals("PackageFour")) {
                    CheckBoxConditionWaiver.setChecked(true);
                    CheckBoxPersonalCoverA.setChecked(true);
                    CheckBoxCriticalIllnes.setChecked(true);
                    CheckBoxModernTreatments.setChecked(true);
                    CheckBoxDailyCash.setChecked(true);
                    CheckBoxConditionWaiver.setClickable(false);
                    CheckBoxPersonalCoverA.setClickable(false);
                    CheckBoxCriticalIllnes.setClickable(false);
                    CheckBoxModernTreatments.setClickable(false);
                    CheckBoxDailyCash.setClickable(false);
                    checkboxCheck();

//                    //thursday
//                    CheckBoxPreHospitalization.setClickable(false);
//                    CheckBoxProHospitalization.setClickable(false);
//                    CheckBoxMaternityChildcare.setClickable(false);
//                    CheckBoxCoverageNonMedical.setClickable(false);
//                    CheckBoxConditionWaiver.setClickable(false);
//                    CheckBoxPreExistingDisease.setClickable(false);
//                    CheckBoxOutpatientDental.setClickable(false);
//                    CheckBoxEmergencyTravelling.setClickable(false);
//                    CheckBoxSecondOpinion.setClickable(false);
//                    CheckBoxRestCure.setClickable(false);
//                    CheckBoxObesityWeight.setClickable(false);
//                    CheckBoxSterilityInfertility.setClickable(false);
//                    CheckBoxEnhancedOrgan.setClickable(false);
//                    CheckBoxMedicallyAdvised.setClickable(false);
//                    CheckBoxEmergencyAssistance.setClickable(false);
//                    CheckBoxHomeCare.setClickable(false);
//                    CheckBoxWellnessBenefit.setClickable(false);
//                    CheckBoxDiseaseManagement.setClickable(false);
//                    CheckBoxGlobalCover.setClickable(false);
//                    CheckBoxPremiumWaiver.setClickable(false);
                }
                else if (checkPackage.equals("PackageFive")) {
                    CheckBoxWellnessBenefit.setChecked(true);
                    CheckBoxWellnessBenefit.setClickable(false);

                    checkboxCheck();
//                    //thursday
//                    CheckBoxDailyCash.setClickable(false);
//                    CheckBoxCriticalIllnes.setClickable(false);
//                    CheckBoxPreHospitalization.setClickable(false);
//                    CheckBoxProHospitalization.setClickable(false);
//                    CheckBoxMaternityChildcare.setClickable(false);
//                    CheckBoxCoverageNonMedical.setClickable(false);
//                    CheckBoxConditionWaiver.setClickable(false);
//                    CheckBoxPreExistingDisease.setClickable(false);
//                    CheckBoxOutpatientDental.setClickable(false);
//                    CheckBoxEmergencyTravelling.setClickable(false);
//                    CheckBoxSecondOpinion.setClickable(false);
//                    CheckBoxRestCure.setClickable(false);
//                    CheckBoxObesityWeight.setClickable(false);
//                    CheckBoxSterilityInfertility.setClickable(false);
//                    CheckBoxEnhancedOrgan.setClickable(false);
//                    CheckBoxMedicallyAdvised.setClickable(false);
//                    CheckBoxEmergencyAssistance.setClickable(false);
//                    CheckBoxHomeCare.setClickable(false);
//                    CheckBoxDiseaseManagement.setClickable(false);
//                    CheckBoxGlobalCover.setClickable(false);
//                    CheckBoxModernTreatments.setClickable(false);
//                    CheckBoxPremiumWaiver.setClickable(false);
//                    CheckBoxPersonalCoverA.setClickable(false);

                }
                else {
                    checkboxCheck();

                }

                if (MaternityChildcareCoverPremium.equals("0.00") || MaternityChildcareCoverPremium.equals("0.0")) {
                    LinerMaternity.setVisibility(View.GONE);
                    MaternityChildcareCoverPremium = "0.00";
                    MaternityChildcarePremiumTxt.setText(MaternityChildcareCoverPremium);
                } else {
                    MaternityChildcarePremiumTxt.setText(MaternityChildcareCoverPremium);
                    LinerMaternity.setVisibility(View.VISIBLE);
                }

                if (SterilityInfertilityCoverPremium.equals("0.00") || SterilityInfertilityCoverPremium.equals("0.0")) {
                    SterilityLiner.setVisibility(View.GONE);
                    SterilityInfertilityCoverPremium = "0.00";
                    SterilityPremiumTxt.setText(SterilityInfertilityCoverPremium);
                } else {
                    SterilityPremiumTxt.setText(SterilityInfertilityCoverPremium);
                    SterilityLiner.setVisibility(View.VISIBLE);
                }
                if (GlobalCoverCoverPremium.equals("0.00") || GlobalCoverCoverPremium.equals("0.0")) {
                    GlobalLiner.setVisibility(View.GONE);
                    GlobalCoverCoverPremium = "0.00";
                } else {
                    GlobalLiner.setVisibility(View.VISIBLE);
                }
                GlobalCoverPremiumTxt.setText(GlobalCoverCoverPremium);

                if (!checkPackage.equals("PackageFour")) {
                    CriticalIllnessCoverPremium = CriticalIllnessCoverPremium2;
                }
                if (CriticalIllnessCoverPremium.equals("0.00") || CriticalIllnessCoverPremium.equals("0.0") || CriticalIllnessCoverPremium.equals("")) {
                    CriticalIllnesLiner.setVisibility(View.GONE);
                    CriticalIllnessCoverPremium = "0.00";
                } else {
                    CriticalIllnesLiner.setVisibility(View.VISIBLE);
                    CriticalIllnessPremiumTxt.setText(CriticalIllnessCoverPremium);
                }
                if (!(checkPackage.equals("PackageOne") || checkPackage.equals("PackageTwo") || checkPackage.equals("PackageThree") || checkPackage.equals("PackageFour"))) {
                    PersonalAccidentCoverPremium = PersonalAccidentCoverPremium2;
                }

                if (PersonalAccidentCoverPremium.equals("0.00") || PersonalAccidentCoverPremium.equals("0.0")) {
                    PersonalAccidentCoverPremium = "0.00";
                    PersonalCoverALiner.setVisibility(View.GONE);
                } else {
                    PersonalCoverALiner.setVisibility(View.VISIBLE);

                }
                PersonalAPremiumTxt.setText(PersonalAccidentCoverPremium);

                if (!(checkPackage.equals("PackageFour"))) {
                    DailyHospitalCoverPremium = DailyHospitalCoverPremium2;
                }

                if (DailyHospitalCoverPremium.equals("0.00") || DailyHospitalCoverPremium.equals("0.0")) {
                    DailyCashLiner.setVisibility(View.GONE);
                    DailyHospitalCoverPremium = "0.00";
                } else {
                    DailyCashLiner.setVisibility(View.VISIBLE);
                    DailyCashPremiumTxt.setText(DailyHospitalCoverPremium);
                }

                if (!(checkPackage.equals("PackageTwo") || checkPackage.equals("PackageFour"))) {
                    ModernTreatmentCoverPremium = ModernTreatmentCoverPremium2;
                }
                if (ModernTreatmentCoverPremium.equals("0.00") || ModernTreatmentCoverPremium.equals("0.0")) {
                    ModernLiner.setVisibility(View.GONE);
                    ModernTreatmentCoverPremium = "0.00";
                } else {
                    ModernLiner.setVisibility(View.VISIBLE);
                    ModernTreatmentsPremiumTxt.setText(ModernTreatmentCoverPremium);
                }

                if (!(checkPackage.equals("PackageOne"))) {
                    ExtensionPreHospitalizationCoverPremium = ExtensionPreHospitalizationCoverPremium2;
                }
                if (ExtensionPreHospitalizationCoverPremium.equals("0.00") || ExtensionPreHospitalizationCoverPremium.equals("0.0")) {
                    ExtensionPreHospLiner.setVisibility(View.GONE);
                    ExtensionPreHospitalizationCoverPremium = "0.00";
                } else {
                    ExtensionPreHospLiner.setVisibility(View.VISIBLE);
                    PreHospitalizationPremiumTxt.setText(ExtensionPreHospitalizationCoverPremium);
                }
                if (!(checkPackage.equals("PackageOne"))) {
                    ExtensionProHospitalizationCoverPremium = ExtensionProHospitalizationCoverPremium2;
                }
                if (ExtensionProHospitalizationCoverPremium.equals("0.00") || ExtensionProHospitalizationCoverPremium.equals("0.0")) {
                    ExtensionProHospLiner.setVisibility(View.GONE);
                    ExtensionProHospitalizationCoverPremium = "0.00";
                } else {
                    ExtensionProHospLiner.setVisibility(View.VISIBLE);
                    ProHospitalizationPremiumTxt.setText(ExtensionProHospitalizationCoverPremium);
                }
                if (!(checkPackage.equals("PackageThree"))) {
                    CoverageNonMedicalCoverPremium = CoverageNonMedicalCoverPremium2;
                }
                if (CoverageNonMedicalCoverPremium.equals("0.00") || CoverageNonMedicalCoverPremium.equals("0.0")) {
                    NonMedicalLiner.setVisibility(View.GONE);
                    CoverageNonMedicalCoverPremium = "0.00";
                } else {
                    NonMedicalLiner.setVisibility(View.VISIBLE);
                    NoMedicalPremiumTxt.setText(CoverageNonMedicalCoverPremium);
                }
                if (!(checkPackage.equals("PackageOne") || checkPackage.equals("PackageTwo") || checkPackage.equals("PackageThree") || checkPackage.equals("PackageFour"))) {
                    ConditionWaiverCoverPremium = ConditionWaiverCoverPremium2;
                }
                if (ConditionWaiverCoverPremium.equals("0.00") || ConditionWaiverCoverPremium.equals("0.0")) {
                    ConditionWaiverLiner.setVisibility(View.GONE);
                    ConditionWaiverCoverPremium = "0.00";
                } else {
                    ConditionWaiverLiner.setVisibility(View.VISIBLE);
                    ConditionPremiumTxt.setText(ConditionWaiverCoverPremium);
                }

                if (!(checkPackage.equals("PackageTwo"))) {
                    SecondOpinionCoverPremium = SecondOpinionCoverPremium2;
                }
                if (SecondOpinionCoverPremium.equals("0.00") || SecondOpinionCoverPremium.equals("0.0")) {
                    SecondLiner.setVisibility(View.GONE);
                    SecondOpinionCoverPremium = "0.00";
                } else {
                    SecondLiner.setVisibility(View.VISIBLE);
                    SecondOpinionPremiumTxt.setText(SecondOpinionCoverPremium);
                }

                if (!(checkPackage.equals("PackageThree"))) {
                    EnhancedCoverPremium = EnhancedCoverPremium2;
                }
                if (EnhancedCoverPremium.equals("0.00") || EnhancedCoverPremium.equals("0.0")) {
                    EnhancedLiner.setVisibility(View.GONE);
                    EnhancedCoverPremium = "0.00";
                } else {
                    EnhancedLiner.setVisibility(View.VISIBLE);
                    EnhancedOrganPremiumTxt.setText(EnhancedCoverPremium);
                }

                if (!(checkPackage.equals("PackageTwo"))) {
                    PremiumWaiverCoverPremium = PremiumWaiverCoverPremium2;
                }
                if (PremiumWaiverCoverPremium.equals("0.00") || PremiumWaiverCoverPremium.equals("0.0")) {
                    PremiumLiner.setVisibility(View.GONE);
                    PremiumWaiverCoverPremium = "0.00";
                } else {
                    PremiumLiner.setVisibility(View.VISIBLE);
                    PremiumWaiverPremiumTxt.setText(PremiumWaiverCoverPremium);
                }

                if (!(checkPackage.equals("PackageThree"))) {
                    MedicallyAdvisedCoverPremium = MedicallyAdvisedCoverPremium2;
                }
                if (MedicallyAdvisedCoverPremium.equals("0.00") || MedicallyAdvisedCoverPremium.equals("0.0")) {
                    LinerMedically.setVisibility(View.GONE);
                    MedicallyAdvisedCoverPremium = "0.00";
                } else {
                    LinerMedically.setVisibility(View.VISIBLE);
                    MedicallyPremiumTxt.setText(MedicallyAdvisedCoverPremium);
                }

                if (!(checkPackage.equals("PackageOne") || checkPackage.equals("PackageTwo"))) {
                    EmergencyAssistanceCoverPremium = EmergencyAssistanceCoverPremium2;
                }

                if (EmergencyAssistanceCoverPremium.equals("0.00") || EmergencyAssistanceCoverPremium.equals("0.0")) {
                    EmergencyLiner.setVisibility(View.GONE);
                    EmergencyAssistanceCoverPremium = "0.00";
                } else {
                    EmergencyLiner.setVisibility(View.VISIBLE);
                    EmergencyAssistancePremiumTxt.setText(EmergencyAssistanceCoverPremium);
                }
                if (!(checkPackage.equals("PackageThree"))) {
                    HomeCareCoverPremium = HomeCareCoverPremium2;
                }
                if (HomeCareCoverPremium.equals("0.00") || HomeCareCoverPremium.equals("0.0")) {
                    LinerHomeCare.setVisibility(View.GONE);
                    HomeCareCoverPremium = "0.00";
                } else {
                    LinerHomeCare.setVisibility(View.VISIBLE);
                    HomeCarePremiumTxt.setText(HomeCareCoverPremium);
                }

                if (!(checkPackage.equals("PackageOne") || checkPackage.equals("PackageFive"))) {
                    WellnessBenefitCoverPremium = WellnessBenefitCoverPremium2;
                }

                if (WellnessBenefitCoverPremium.equals("0.00") || WellnessBenefitCoverPremium.equals("0.0")) {
                    WellnessLiner.setVisibility(View.GONE);
                    WellnessBenefitCoverPremium = "0.00";
                } else {
                    WellnessLiner.setVisibility(View.VISIBLE);
                    WellnessBenefitPremiumTxt.setText(WellnessBenefitCoverPremium);
                }


                if (PreExistingDiseaseCoverPremium.equals("0.00") || PreExistingDiseaseCoverPremium.equals("0.0")) {
                    PreExistingLiner.setVisibility(View.GONE);
                    PreExistingDiseaseCoverPremium = "0.00";
                } else {
                    PreExistingLiner.setVisibility(View.VISIBLE);
                    PreexistingDiseasePremiumTxt.setText(PreExistingDiseaseCoverPremium);
                }
                if (OutpatientDentalCoverPremium.equals("0.00") || OutpatientDentalCoverPremium.equals("0.0")) {
                    OutpatientDentalLiner.setVisibility(View.GONE);
                    OutpatientDentalCoverPremium = "0.00";
                } else {
                    OutpatientDentalLiner.setVisibility(View.VISIBLE);
                    OutPatientPremiumTxt.setText(OutpatientDentalCoverPremium);
                }

                if (EmergencyTravellingCoverPremium.equals("0.00") || EmergencyTravellingCoverPremium.equals("0.0")) {
                    EmergencyAssistanceLiner.setVisibility(View.GONE);
                    EmergencyTravellingCoverPremium = "0.00";
                } else {
                    EmergencyAssistanceLiner.setVisibility(View.VISIBLE);
                    EmergencyTravellingPremiumTxt.setText(EmergencyTravellingCoverPremium);
                }

                if (RestCureCoverPremium.equals("0.00") || RestCureCoverPremium.equals("0.0")) {
                    RestCureLiner.setVisibility(View.GONE);
                    RestCureCoverPremium = "0.00";
                } else {
                    RestCureLiner.setVisibility(View.VISIBLE);
                    RestCurePremiumTxt.setText(RestCureCoverPremium);
                }
                if (ObesityWeightCoverPremium.equals("0.00") || ObesityWeightCoverPremium.equals("0.0")) {
                    ObesityLiner.setVisibility(View.GONE);
                    ObesityWeightCoverPremium = "0.00";
                } else {
                    ObesityLiner.setVisibility(View.VISIBLE);
                    ObesityPremiumTxt.setText(ObesityWeightCoverPremium);
                }
                if (DiseaseManagementCoverPremium.equals("0.00") || DiseaseManagementCoverPremium.equals("0.0")) {
                    DiseaseLiner.setVisibility(View.GONE);
                    DiseaseManagementCoverPremium = "0.00";
                } else {
                    DiseaseLiner.setVisibility(View.VISIBLE);
                    DiseaseManagementPremiumTxt.setText(DiseaseManagementCoverPremium);
                }


                CheckBoxPersonalCoverA.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxPersonalCoverA.isChecked()) {
                            PersonalStatus = "True";
                            PersonalAccidentCategory = "A";
                            CountScroll++;
                            if (selectFirstYearChild < 5) {
                                Log.e("selectFirstYearChild", String.valueOf(selectFirstYearChild));
                                PersonalStatusChildOne = "False";
                                PersonalAccidentACoverChildOneStatus = "False";
                                PersonalAccidentBCoverChildOneStatus = "False";
                                PersonalStatusChildOne1 = "False";
                                PersonalAccidentACoverChildOneStatus1 = "False";
                                PersonalAccidentBCoverChildOneStatus1 = "False";
                            }
                            else {
                                PersonalStatusChildOne = "True";
                                PersonalAccidentACoverChildOneStatus = "False";
                                PersonalAccidentBCoverChildOneStatus = "False";
                                PersonalStatusChildOne1 = "True";
                                PersonalAccidentACoverChildOneStatus1 = "True";
                                PersonalAccidentBCoverChildOneStatus1 = "True";
                            }
                            if (selectSecSonChild < 5) {
                                PersonalStatusChildTwo = "False";
                                PersonalAccidentAChildTwoCoverStatus = "False";
                                PersonalAccidentBChildTwoCoverStatus = "False";
                                PersonalStatusChildTwo1 = "False";
                                PersonalAccidentAChildTwoCoverStatus1 = "False";
                                PersonalAccidentBChildTwoCoverStatus1 = "False";
                            }
                            else {
                                PersonalStatusChildTwo = "True";
                                PersonalAccidentAChildTwoCoverStatus = "False";
                                PersonalAccidentBChildTwoCoverStatus = "False";
                                PersonalStatusChildTwo1 = "True";
                                PersonalAccidentAChildTwoCoverStatus1 = "True";
                                PersonalAccidentBChildTwoCoverStatus1 = "True";
                            }
                            if (selectThirdSonChild < 5) {
                                PersonalStatusChildThird = "False";
                                PersonalAccidentACoverChildThirdStatus = "False";
                                PersonalAccidentBCoverChildThirdStatus = "False";
                                PersonalStatusChildThird1 = "False";
                                PersonalAccidentACoverChildThirdStatus1 = "False";
                                PersonalAccidentBCoverChildThirdStatus1 = "False";
                            }
                            else {
                                PersonalStatusChildThird = "True";
                                PersonalAccidentACoverChildThirdStatus = "False";
                                PersonalAccidentBCoverChildThirdStatus = "False";
                                PersonalStatusChildThird1 = "True";
                                PersonalAccidentACoverChildThirdStatus1 = "True";
                                PersonalAccidentBCoverChildThirdStatus1 = "True";
                            }
                            if (selectYearChildFour <5) {
                                PersonalStatusChildFour = "False";
                                PersonalAccidentACoverChildFourStatus = "False";
                                PersonalAccidentBCoverChildFourStatus = "False";
                                PersonalStatusChildFour1 = "False";
                                PersonalAccidentACoverChildFourStatus1 = "False";
                                PersonalAccidentBCoverChildFourStatus1 = "False";
                            }
                            else {
                                PersonalStatusChildFour = "True";
                                PersonalAccidentACoverChildFourStatus = "False";
                                PersonalAccidentBCoverChildFourStatus = "False";
                                PersonalStatusChildFour1 = "True";
                                PersonalAccidentACoverChildFourStatus1 = "True";
                                PersonalAccidentBCoverChildFourStatus1 = "True";
                            }

                        } else {
                            CountScroll--;
                            PersonalAccidentCategory = "";
                            PersonalStatus = "False";

                            PersonalStatusChildOne = "False";
                            PersonalAccidentACoverChildOneStatus = "False";
                            PersonalAccidentBCoverChildOneStatus = "False";
                            PersonalStatusChildOne1 = "False";
                            PersonalAccidentACoverChildOneStatus1 = "False";
                            PersonalAccidentBCoverChildOneStatus1 = "False";
                            PersonalStatusChildTwo = "False";
                            PersonalAccidentAChildTwoCoverStatus = "False";
                            PersonalAccidentBChildTwoCoverStatus = "False";
                            PersonalStatusChildTwo1 = "False";
                            PersonalAccidentAChildTwoCoverStatus1 = "False";
                            PersonalAccidentBChildTwoCoverStatus1 = "False";
                            PersonalStatusChildThird = "False";
                            PersonalAccidentACoverChildThirdStatus = "False";
                            PersonalAccidentBCoverChildThirdStatus = "False";
                            PersonalStatusChildThird1 = "False";
                            PersonalAccidentACoverChildThirdStatus1 = "False";
                            PersonalAccidentBCoverChildThirdStatus1 = "False";
                            PersonalStatusChildFour = "False";
                            PersonalAccidentACoverChildFourStatus = "False";
                            PersonalAccidentBCoverChildFourStatus = "False";
                            PersonalStatusChildFour1 = "False";
                            PersonalAccidentACoverChildFourStatus1 = "False";
                            PersonalAccidentBCoverChildFourStatus1 = "False";
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });

                CheckBoxPersonalCoverB.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxPersonalCoverB.isChecked()) {
                            PersonalStatus = "True";
                            PersonalAccidentCategory = "B";
                            CountScroll++;
                        } else {
                            PersonalAccidentCategory = "";
                            CountScroll--;
                            PersonalStatus = "False";
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });

                CheckBoxDailyCash.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxDailyCash.isChecked()) {
                            DailyHospitalSatus = "True";
                            CountScroll++;
                            DailyHospitalLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            DailyHospitalSatus = "False";
                            DailyHospitalLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxCriticalIllnes.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxCriticalIllnes.isChecked()) {
                            CriticalStatus = "True";
                            CountScroll++;
                            CriticalIllnessLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            CriticalStatus = "False";
                            CriticalIllnessLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxPreHospitalization.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxPreHospitalization.isChecked()) {
                            ExtensionPreHospitalization = "True";
                            CountScroll++;
                            ExtensionPreLiner.setVisibility(View.VISIBLE);

                        } else {
                            CountScroll--;
                            ExtensionPreHospitalization = "False";
                            ExtensionPreLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxProHospitalization.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxProHospitalization.isChecked()) {
                            ExtensionPr0Hospitalization = "True";
                            CountScroll++;
                            ExtensionPostLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            ExtensionPr0Hospitalization = "False";
                            ExtensionPostLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxMaternityChildcare.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxMaternityChildcare.isChecked()) {
                            MaternityAndChildcare = "True";
                            CountScroll++;
                            MaternityLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            MaternityAndChildcare = "False";
                            MaternityLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxCoverageNonMedical.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxCoverageNonMedical.isChecked()) {
                            CoverageNonMedical = "True";
                            CountScroll++;
                            CoverageLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            CoverageNonMedical = "False";
                            CoverageLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxConditionWaiver.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxConditionWaiver.isChecked()) {
                            ConditionWaiverStatus = "True";
                            CountScroll++;
                            ConditionWaiverLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            ConditionWaiverStatus = "False";
                            ConditionWaiverLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxPreExistingDisease.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxPreExistingDisease.isChecked()) {
                            PreExistingDiseaseStatus = "True";
                            CountScroll++;
                            PreExistingDiseaseLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            PreExistingDiseaseStatus = "False";
                            PreExistingDiseaseLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxOutpatientDental.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxOutpatientDental.isChecked()) {
                            OutpatientDentalStatus = "True";
                            CountScroll++;
                            OutpatientDentalLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            OutpatientDentalStatus = "False";
                            OutpatientDentalLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxEmergencyTravelling.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxEmergencyTravelling.isChecked()) {
                            EmergencyTravellingStatus = "True";
                            CountScroll++;
                            EmergencyTravellingLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            EmergencyTravellingStatus = "False";
                            EmergencyTravellingLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxSecondOpinion.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxSecondOpinion.isChecked()) {
                            SecondOpinionStatus = "True";
                            CountScroll++;
                            SecondOpinionLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            SecondOpinionStatus = "False";
                            SecondOpinionLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxRestCure.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxRestCure.isChecked()) {
                            RestCureStatus = "True";
                            CountScroll++;
                            RestCureLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            RestCureStatus = "False";
                            RestCureLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxObesityWeight.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxObesityWeight.isChecked()) {
                            ObesityWeightStatus = "True";
                            CountScroll++;
                            ObesityWeightLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            ObesityWeightStatus = "False";
                            ObesityWeightLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxSterilityInfertility.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxSterilityInfertility.isChecked()) {
                            SterilityInfertilityStatus = "True";
                            CountScroll++;
                            SterilityInfertilityLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            SterilityInfertilityStatus = "False";
                            SterilityInfertilityLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxEnhancedOrgan.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxEnhancedOrgan.isChecked()) {
                            EnhancedOrganStatus = "True";
                            CountScroll++;
                            EnhancedOrganLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            EnhancedOrganStatus = "False";
                            EnhancedOrganLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxMedicallyAdvised.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxMedicallyAdvised.isChecked()) {
                            MedicallyAdvisedStatus = "True";
                            CountScroll++;
                            MedicallyAdvisedLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            MedicallyAdvisedStatus = "False";
                            MedicallyAdvisedLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxEmergencyAssistance.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxEmergencyAssistance.isChecked()) {
                            EmergencyAssistanceStatus = "True";
                            CountScroll++;
                            EmergencyAssistanceLine.setVisibility(View.VISIBLE);

                        } else {
                            CountScroll--;
                            EmergencyAssistanceStatus = "False";
                            EmergencyAssistanceLine.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxHomeCare.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxHomeCare.isChecked()) {
                            HomeCareStatus = "True";
                            CountScroll++;
                            HomeCareLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            HomeCareStatus = "False";
                            HomeCareLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxWellnessBenefit.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxWellnessBenefit.isChecked()) {
                            WellnessBenefitStatus = "True";
                            CountScroll++;
                            WellnessBenefitLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            WellnessBenefitStatus = "False";
                            WellnessBenefitLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxDiseaseManagement.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxDiseaseManagement.isChecked()) {
                            DiseaseManagementStatus = "True";
                            CountScroll++;
                            DiseaseManagementLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            DiseaseManagementStatus = "False";
                            DiseaseManagementLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxGlobalCover.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxGlobalCover.isChecked()) {
                            GlobalCoverStatus = "True";
                            CountScroll++;
                            GlobalCoverLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            GlobalCoverStatus = "False";
                            GlobalCoverLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxModernTreatments.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxModernTreatments.isChecked()) {
                            ModernTreatmentsStatus = "True";
                            CountScroll++;
                            ModernTreatmentsLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            ModernTreatmentsStatus = "False";
                            ModernTreatmentsLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });
                CheckBoxPremiumWaiver.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
                    @Override
                    public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                        if (CheckBoxPremiumWaiver.isChecked()) {
                            PremiumWaiverStatus = "True";
                            CountScroll++;
                            PremiumWaiverLiner.setVisibility(View.VISIBLE);
                        } else {
                            CountScroll--;
                            PremiumWaiverStatus = "False";
                            PremiumWaiverLiner.setVisibility(View.GONE);
                        }
                        health_quote();
                        HealthQuoteAddOn();
                    }
                });

                if (CountScroll == 0) {
                    horizontalScroll.setVisibility(View.GONE);
                } else {
                    horizontalScroll.setVisibility(View.GONE);
                }

                bottomCancel.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        viewBottomSheet.dismiss();

                    }
                });

                viewBottomSheet.show();
            }
        });
        DailyHospitalAddImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                DailyHospitalSatus = "False";
                DailyHospitalLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        CriticalIllnessImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                CriticalStatus = "False";
                CriticalIllnessLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        ExtensionPreImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                ExtensionPreHospitalization = "False";
                ExtensionPreLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        ExtensionPostImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                ExtensionPr0Hospitalization = "False";
                ExtensionPostLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        MaternityImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                MaternityAndChildcare = "False";
                MaternityLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        CoverageImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                CoverageNonMedical = "False";
                CoverageLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        ConditionWaiverImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                ConditionWaiverStatus = "False";
                ConditionWaiverLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        PreExistingDiseaseImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                PreExistingDiseaseStatus = "False";
                PreExistingDiseaseLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        OutpatientDentalImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                OutpatientDentalStatus = "False";
                OutpatientDentalLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        EmergencyTravellingImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                EmergencyTravellingStatus = "False";
                EmergencyTravellingLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        SecondOpinionImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                SecondOpinionStatus = "False";
                SecondOpinionLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        RestCureImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                RestCureStatus = "False";
                RestCureLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        ObesityWeightImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                ObesityWeightStatus = "False";
                ObesityWeightLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        SterilityInfertilityImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                SterilityInfertilityStatus = "False";
                SterilityInfertilityLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        EnhancedOrganImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                EnhancedOrganStatus = "False";
                EnhancedOrganLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        MedicallyAdvisedImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                MedicallyAdvisedStatus = "False";
                MedicallyAdvisedLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        EmergencyAssistanceImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                EmergencyAssistanceStatus = "False";
                EmergencyAssistanceLine.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        HomeCareImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                HomeCareStatus = "False";
                HomeCareLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        WellnessBenefitImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                WellnessBenefitStatus = "False";
                WellnessBenefitLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        DiseaseManagementImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                DiseaseManagementStatus = "False";
                DiseaseManagementLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        GlobalCoverImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                GlobalCoverStatus = "False";
                GlobalCoverLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        ModernTreatmentsImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                ModernTreatmentsStatus = "False";
                ModernTreatmentsLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        PremiumWaiverImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                PremiumWaiverStatus = "False";
                PremiumWaiverLiner.setVisibility(View.GONE);
                health_quote();
                HealthQuoteAddOn();
            }
        });
        PackageOne.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (PackageOne.isChecked()) {
                    strPackageOne = "Check";
                    strPackage1 = "Check";
                    checkPackage = "PackageOne";
                    CountScroll++;
                    PackageOne.setChecked(true);
                    PackageTwo.setChecked(false);
                    PackageThree.setChecked(false);
                    PackageFour.setChecked(false);
                    PackageFive.setChecked(false);
                    PackageSix.setChecked(false);

                    ConditionWaiverStatus = "True";
                    ExtensionPreHospitalization = "True";
                    ExtensionPr0Hospitalization = "True";
                    EmergencyAssistanceStatus = "True";
                    PersonalStatus = "True";
                    WellnessBenefitStatus = "True";
                    BasicStatus = "True";
                    CriticalStatus = "False";
                    DailyHospitalSatus = "False";
                    ModernTreatmentsStatus = "False";
                    MaternityAndChildcare = "False";
                    CoverageNonMedical = "False";
                    PersonalAccidentACoverStatus = "False";
                    PersonalAccidentBCoverStatus = "False";
                    PreExistingDiseaseStatus = "False";
                    OutpatientDentalStatus = "False";
                    EmergencyTravellingStatus = "False";
                    SecondOpinionStatus = "False";
                    RestCureStatus = "False";
                    ObesityWeightStatus = "False";
                    SterilityInfertilityStatus = "False";
                    EnhancedOrganStatus = "False";
                    PremiumWaiverStatus = "False";
                    GlobalCoverStatus = "False";
                    MedicallyAdvisedStatus = "False";
                    HomeCareStatus = "False";
                    DiseaseManagementStatus = "False";
                    TreatmentStatus1 = "False";
                    TreatmentStatus = TreatmentStatus1;

                    LoyaltyDiscountStatus = "False";
                    CoPaymentStatus = "False";
                    TreatmentStatus = "False";
                    SubCategoryDiscountStatus = "False";
                    OrganDiscountStatus = "False";
                    SubCategoryDiscountStatusCheck = "False";
                    CoPaymentCheckBoxCheck = "False";
                    TreatmentCheckBoxCheck = "False";
                    TiresDiscount = 0;
                    copayemntMax = 0;
                    sublimt = 0.0;
                    loyalityDiscount = 0;
                    OrganDonar = 0.0;
                    LinerPolicyNumber.setVisibility(View.GONE);
                    strPolicyNumber = "";
                    checkBoxLoyaltyDiscount.setChecked(false);
                    OrganCheckBox.setChecked(false);
                    TreatmentCheckBox.setChecked(false);
                    CoPaymentCheckBox.setChecked(false);
                    CoPaymentPercentageLiner.setVisibility(View.GONE);
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                    SubLimitLiner.setVisibility(View.GONE);
                    SubLimitCheckBox.setChecked(false);
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(false);

                    if (selectFirstYearChild < 5) {
                        Log.e("selectFirstYearChild", String.valueOf(selectFirstYearChild));
                        PersonalStatusChildOne = "False";
                        PersonalAccidentACoverChildOneStatus = "False";
                        PersonalAccidentBCoverChildOneStatus = "False";
                        PersonalStatusChildOne1 = "False";
                        PersonalAccidentACoverChildOneStatus1 = "False";
                        PersonalAccidentBCoverChildOneStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildOne = "True";
                        PersonalAccidentACoverChildOneStatus = "False";
                        PersonalAccidentBCoverChildOneStatus = "False";
                        PersonalStatusChildOne1 = "True";
                        PersonalAccidentACoverChildOneStatus1 = "True";
                        PersonalAccidentBCoverChildOneStatus1 = "True";
                    }
                    if (selectSecSonChild < 5) {
                        PersonalStatusChildTwo = "False";
                        PersonalAccidentAChildTwoCoverStatus = "False";
                        PersonalAccidentBChildTwoCoverStatus = "False";
                        PersonalStatusChildTwo1 = "False";
                        PersonalAccidentAChildTwoCoverStatus1 = "False";
                        PersonalAccidentBChildTwoCoverStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildTwo = "True";
                        PersonalAccidentAChildTwoCoverStatus = "False";
                        PersonalAccidentBChildTwoCoverStatus = "False";
                        PersonalStatusChildTwo1 = "True";
                        PersonalAccidentAChildTwoCoverStatus1 = "True";
                        PersonalAccidentBChildTwoCoverStatus1 = "True";
                    }
                    if (selectThirdSonChild < 5) {
                        PersonalStatusChildThird = "False";
                        PersonalAccidentACoverChildThirdStatus = "False";
                        PersonalAccidentBCoverChildThirdStatus = "False";
                        PersonalStatusChildThird1 = "False";
                        PersonalAccidentACoverChildThirdStatus1 = "False";
                        PersonalAccidentBCoverChildThirdStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildThird = "True";
                        PersonalAccidentACoverChildThirdStatus = "False";
                        PersonalAccidentBCoverChildThirdStatus = "False";
                        PersonalStatusChildThird1 = "True";
                        PersonalAccidentACoverChildThirdStatus1 = "True";
                        PersonalAccidentBCoverChildThirdStatus1 = "True";
                    }
                    if (selectYearChildFour <5) {
                        PersonalStatusChildFour = "False";
                        PersonalAccidentACoverChildFourStatus = "False";
                        PersonalAccidentBCoverChildFourStatus = "False";
                        PersonalStatusChildFour1 = "False";
                        PersonalAccidentACoverChildFourStatus1 = "False";
                        PersonalAccidentBCoverChildFourStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildFour = "True";
                        PersonalAccidentACoverChildFourStatus = "False";
                        PersonalAccidentBCoverChildFourStatus = "False";
                        PersonalStatusChildFour1 = "True";
                        PersonalAccidentACoverChildFourStatus1 = "True";
                        PersonalAccidentBCoverChildFourStatus1 = "True";
                    }



                    health_quote();
                    HealthQuoteAddOn();
                    SelectAddOnsButton.setVisibility(View.VISIBLE);
                }
//                  else {
//                      strPackageOne="UnCheck";
//                      strPackage1="UnCheck";
//                      CountScroll--;
//                  }

            }
        });
        PackageTwo.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (PackageTwo.isChecked()) {
                    CountScroll++;
                    checkPackage = "PackageTwo";
                    strPackageOne = "Check";
                    strPackageTwo = "Check";
                    PackageOne.setChecked(false);
                    PackageTwo.setChecked(true);
                    PackageThree.setChecked(false);
                    PackageFour.setChecked(false);
                    PackageFive.setChecked(false);
                    PackageSix.setChecked(false);
                    ConditionWaiverStatus = "True";
                    PremiumWaiverStatus = "True";
                    SecondOpinionStatus = "True";
                    ModernTreatmentsStatus = "True";
                    PersonalStatus = "True";
                    EmergencyAssistanceStatus = "True";
                    BasicStatus = "True";
                    CriticalStatus = "False";
                    DailyHospitalSatus = "False";
                    ExtensionPreHospitalization = "False";
                    ExtensionPr0Hospitalization = "False";
                    MaternityAndChildcare = "False";
                    CoverageNonMedical = "False";
                    PersonalAccidentACoverStatus = "False";
                    PersonalAccidentBCoverStatus = "False";
                    PreExistingDiseaseStatus = "False";
                    OutpatientDentalStatus = "False";
                    EmergencyTravellingStatus = "False";
                    RestCureStatus = "False";
                    ObesityWeightStatus = "False";
                    SterilityInfertilityStatus = "False";
                    EnhancedOrganStatus = "False";
                    GlobalCoverStatus = "False";
                    MedicallyAdvisedStatus = "False";
                    HomeCareStatus = "False";
                    WellnessBenefitStatus = "False";
                    DiseaseManagementStatus = "False";
                    TreatmentStatus1 = "False";
                    TreatmentStatus = TreatmentStatus1;

                    LoyaltyDiscountStatus = "False";
                    CoPaymentStatus = "False";
                    TreatmentStatus = "False";
                    SubCategoryDiscountStatus = "False";
                    OrganDiscountStatus = "False";
                    SubCategoryDiscountStatusCheck = "False";
                    CoPaymentCheckBoxCheck = "False";
                    TreatmentCheckBoxCheck = "False";
                    TiresDiscount = 0;
                    copayemntMax = 0;
                    sublimt = 0.0;
                    loyalityDiscount = 0;
                    OrganDonar = 0.0;
                    LinerPolicyNumber.setVisibility(View.GONE);
                    strPolicyNumber = "";
                    checkBoxLoyaltyDiscount.setChecked(false);
                    OrganCheckBox.setChecked(false);
                    TreatmentCheckBox.setChecked(false);
                    CoPaymentCheckBox.setChecked(false);
                    CoPaymentPercentageLiner.setVisibility(View.GONE);
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                    SubLimitLiner.setVisibility(View.GONE);
                    SubLimitCheckBox.setChecked(false);
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(false);

                    if (selectFirstYearChild < 5) {
                        Log.e("selectFirstYearChild", String.valueOf(selectFirstYearChild));
                        PersonalStatusChildOne = "False";
                        PersonalAccidentACoverChildOneStatus = "False";
                        PersonalAccidentBCoverChildOneStatus = "False";
                        PersonalStatusChildOne1 = "False";
                        PersonalAccidentACoverChildOneStatus1 = "False";
                        PersonalAccidentBCoverChildOneStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildOne = "True";
                        PersonalAccidentACoverChildOneStatus = "False";
                        PersonalAccidentBCoverChildOneStatus = "False";
                        PersonalStatusChildOne1 = "True";
                        PersonalAccidentACoverChildOneStatus1 = "True";
                        PersonalAccidentBCoverChildOneStatus1 = "True";
                    }
                    if (selectSecSonChild < 5) {
                        PersonalStatusChildTwo = "False";
                        PersonalAccidentAChildTwoCoverStatus = "False";
                        PersonalAccidentBChildTwoCoverStatus = "False";
                        PersonalStatusChildTwo1 = "False";
                        PersonalAccidentAChildTwoCoverStatus1 = "False";
                        PersonalAccidentBChildTwoCoverStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildTwo = "True";
                        PersonalAccidentAChildTwoCoverStatus = "False";
                        PersonalAccidentBChildTwoCoverStatus = "False";
                        PersonalStatusChildTwo1 = "True";
                        PersonalAccidentAChildTwoCoverStatus1 = "True";
                        PersonalAccidentBChildTwoCoverStatus1 = "True";
                    }
                    if (selectThirdSonChild < 5) {
                        PersonalStatusChildThird = "True";
                        PersonalAccidentACoverChildThirdStatus = "False";
                        PersonalAccidentBCoverChildThirdStatus = "False";
                        PersonalStatusChildThird1 = "False";
                        PersonalAccidentACoverChildThirdStatus1 = "False";
                        PersonalAccidentBCoverChildThirdStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildThird = "True";
                        PersonalAccidentACoverChildThirdStatus = "False";
                        PersonalAccidentBCoverChildThirdStatus = "False";
                        PersonalStatusChildThird1 = "True";
                        PersonalAccidentACoverChildThirdStatus1 = "True";
                        PersonalAccidentBCoverChildThirdStatus1 = "True";
                    }
                    if (selectYearChildFour <5) {
                        PersonalStatusChildFour = "False";
                        PersonalAccidentACoverChildFourStatus = "False";
                        PersonalAccidentBCoverChildFourStatus = "False";
                        PersonalStatusChildFour1 = "False";
                        PersonalAccidentACoverChildFourStatus1 = "False";
                        PersonalAccidentBCoverChildFourStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildFour = "True";
                        PersonalAccidentACoverChildFourStatus = "False";
                        PersonalAccidentBCoverChildFourStatus = "False";
                        PersonalStatusChildFour1 = "True";
                        PersonalAccidentACoverChildFourStatus1 = "True";
                        PersonalAccidentBCoverChildFourStatus1 = "True";
                    }

                    health_quote();
                    HealthQuoteAddOn();
                    SelectAddOnsButton.setVisibility(View.VISIBLE);
                }
//                  else {
//                      strPackageOne="UnCheck";
//                      strPackageTwo="UnCheck";
//                      CountScroll--;
//
//                  }

            }
        });
        PackageThree.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (PackageThree.isChecked()) {
                    checkPackage = "PackageThree";
                    strPackageOne = "Check";
                    strPackageThree = "Check";
                    CountScroll++;
                    PackageOne.setChecked(false);
                    PackageTwo.setChecked(false);
                    PackageThree.setChecked(true);
                    PackageFour.setChecked(false);
                    PackageFive.setChecked(false);
                    PackageSix.setChecked(false);
                    ConditionWaiverStatus = "True";
                    CoverageNonMedical = "True";
                    MedicallyAdvisedStatus = "True";
                    EnhancedOrganStatus = "True";
                    PersonalStatus = "True";
                    HomeCareStatus = "True";
                    BasicStatus = "True";
                    CriticalStatus = "False";
                    DailyHospitalSatus = "False";
                    ModernTreatmentsStatus = "False";
                    ExtensionPreHospitalization = "False";
                    ExtensionPr0Hospitalization = "False";
                    MaternityAndChildcare = "False";
                    PersonalAccidentACoverStatus = "False";
                    PersonalAccidentBCoverStatus = "False";
                    PreExistingDiseaseStatus = "False";
                    OutpatientDentalStatus = "False";
                    EmergencyTravellingStatus = "False";
                    SecondOpinionStatus = "False";
                    RestCureStatus = "False";
                    ObesityWeightStatus = "False";
                    SterilityInfertilityStatus = "False";
                    PremiumWaiverStatus = "False";
                    GlobalCoverStatus = "False";
                    EmergencyAssistanceStatus = "False";
                    WellnessBenefitStatus = "False";
                    DiseaseManagementStatus = "False";
                    TreatmentStatus1 = "False";
                    TreatmentStatus = TreatmentStatus1;

                    LoyaltyDiscountStatus = "False";
                    CoPaymentStatus = "False";
                    TreatmentStatus = "False";
                    SubCategoryDiscountStatus = "False";
                    OrganDiscountStatus = "False";
                    SubCategoryDiscountStatusCheck = "False";
                    CoPaymentCheckBoxCheck = "False";
                    TreatmentCheckBoxCheck = "False";
                    TiresDiscount = 0;
                    copayemntMax = 0;
                    sublimt = 0.0;
                    loyalityDiscount = 0;
                    OrganDonar = 0.0;
                    LinerPolicyNumber.setVisibility(View.GONE);
                    strPolicyNumber = "";
                    checkBoxLoyaltyDiscount.setChecked(false);
                    OrganCheckBox.setChecked(false);
                    TreatmentCheckBox.setChecked(false);
                    CoPaymentCheckBox.setChecked(false);
                    CoPaymentPercentageLiner.setVisibility(View.GONE);
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                    SubLimitLiner.setVisibility(View.GONE);
                    SubLimitCheckBox.setChecked(false);
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(false);


                    if (selectFirstYearChild < 5) {
                        Log.e("selectFirstYearChild", String.valueOf(selectFirstYearChild));
                        PersonalStatusChildOne = "False";
                        PersonalAccidentACoverChildOneStatus = "False";
                        PersonalAccidentBCoverChildOneStatus = "False";
                        PersonalStatusChildOne1 = "False";
                        PersonalAccidentACoverChildOneStatus1 = "False";
                        PersonalAccidentBCoverChildOneStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildOne = "True";
                        PersonalAccidentACoverChildOneStatus = "False";
                        PersonalAccidentBCoverChildOneStatus = "False";
                        PersonalStatusChildOne1 = "True";
                        PersonalAccidentACoverChildOneStatus1 = "True";
                        PersonalAccidentBCoverChildOneStatus1 = "True";
                    }
                    if (selectSecSonChild < 5) {
                        PersonalStatusChildTwo = "False";
                        PersonalAccidentAChildTwoCoverStatus = "False";
                        PersonalAccidentBChildTwoCoverStatus = "False";
                        PersonalStatusChildTwo1 = "False";
                        PersonalAccidentAChildTwoCoverStatus1 = "False";
                        PersonalAccidentBChildTwoCoverStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildTwo = "True";
                        PersonalAccidentAChildTwoCoverStatus = "False";
                        PersonalAccidentBChildTwoCoverStatus = "False";
                        PersonalStatusChildTwo1 = "True";
                        PersonalAccidentAChildTwoCoverStatus1 = "True";
                        PersonalAccidentBChildTwoCoverStatus1 = "True";
                    }
                    if (selectThirdSonChild < 5) {
                        PersonalStatusChildThird = "False";
                        PersonalAccidentACoverChildThirdStatus = "False";
                        PersonalAccidentBCoverChildThirdStatus = "False";
                        PersonalStatusChildThird1 = "False";
                        PersonalAccidentACoverChildThirdStatus1 = "False";
                        PersonalAccidentBCoverChildThirdStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildThird = "True";
                        PersonalAccidentACoverChildThirdStatus = "False";
                        PersonalAccidentBCoverChildThirdStatus = "False";
                        PersonalStatusChildThird1 = "True";
                        PersonalAccidentACoverChildThirdStatus1 = "True";
                        PersonalAccidentBCoverChildThirdStatus1 = "True";
                    }
                    if (selectYearChildFour <5) {
                        PersonalStatusChildFour = "False";
                        PersonalAccidentACoverChildFourStatus = "False";
                        PersonalAccidentBCoverChildFourStatus = "False";
                        PersonalStatusChildFour1 = "False";
                        PersonalAccidentACoverChildFourStatus1 = "False";
                        PersonalAccidentBCoverChildFourStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildFour = "True";
                        PersonalAccidentACoverChildFourStatus = "False";
                        PersonalAccidentBCoverChildFourStatus = "False";
                        PersonalStatusChildFour1 = "True";
                        PersonalAccidentACoverChildFourStatus1 = "True";
                        PersonalAccidentBCoverChildFourStatus1 = "True";
                    }

                    health_quote();
                    HealthQuoteAddOn();
                    SelectAddOnsButton.setVisibility(View.VISIBLE);
                }
//                  else {
//                      strPackageOne="UnCheck";
//                      strPackageThree="UnCheck";
//                      CountScroll--;
//                  }


            }
        });
        PackageFour.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (PackageFour.isChecked()) {
                    checkPackage = "PackageFour";
                    strPackageOne = "Check";
                    strPackageFour = "Check";
                    CountScroll++;
                    PackageOne.setChecked(false);
                    PackageTwo.setChecked(false);
                    PackageThree.setChecked(false);
                    PackageFour.setChecked(true);
                    PackageFive.setChecked(false);
                    PackageSix.setChecked(false);
                    ConditionWaiverStatus = "True";
                    CriticalStatus = "True";
                    ModernTreatmentsStatus = "True";
                    PersonalStatus = "True";
                    DailyHospitalSatus = "True";
                    BasicStatus = "True";
                    ExtensionPreHospitalization = "False";
                    ExtensionPr0Hospitalization = "False";
                    MaternityAndChildcare = "False";
                    CoverageNonMedical = "False";
                    PersonalAccidentACoverStatus = "False";
                    PersonalAccidentBCoverStatus = "False";
                    PreExistingDiseaseStatus = "False";
                    OutpatientDentalStatus = "False";
                    EmergencyTravellingStatus = "False";
                    SecondOpinionStatus = "False";
                    RestCureStatus = "False";
                    ObesityWeightStatus = "False";
                    SterilityInfertilityStatus = "False";
                    EnhancedOrganStatus = "False";
                    PremiumWaiverStatus = "False";
                    GlobalCoverStatus = "False";
                    MedicallyAdvisedStatus = "False";
                    EmergencyAssistanceStatus = "False";
                    HomeCareStatus = "False";
                    WellnessBenefitStatus = "False";
                    DiseaseManagementStatus = "False";
                    TreatmentStatus1 = "False";
                    TreatmentStatus = TreatmentStatus1;

                    LoyaltyDiscountStatus = "False";
                    CoPaymentStatus = "False";
                    TreatmentStatus = "False";
                    SubCategoryDiscountStatus = "False";
                    OrganDiscountStatus = "False";
                    SubCategoryDiscountStatusCheck = "False";
                    CoPaymentCheckBoxCheck = "False";
                    TreatmentCheckBoxCheck = "False";
                    TiresDiscount = 0;
                    copayemntMax = 0;
                    sublimt = 0.0;
                    loyalityDiscount = 0;
                    OrganDonar = 0.0;
                    LinerPolicyNumber.setVisibility(View.GONE);
                    strPolicyNumber = "";
                    checkBoxLoyaltyDiscount.setChecked(false);
                    OrganCheckBox.setChecked(false);
                    TreatmentCheckBox.setChecked(false);
                    CoPaymentCheckBox.setChecked(false);
                    CoPaymentPercentageLiner.setVisibility(View.GONE);
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                    SubLimitLiner.setVisibility(View.GONE);
                    SubLimitCheckBox.setChecked(false);
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(false);


                    if (selectFirstYearChild < 5) {
                        Log.e("selectFirstYearChild", String.valueOf(selectFirstYearChild));
                        PersonalStatusChildOne = "False";
                        PersonalAccidentACoverChildOneStatus = "False";
                        PersonalAccidentBCoverChildOneStatus = "False";
                        PersonalStatusChildOne1 = "False";
                        PersonalAccidentACoverChildOneStatus1 = "False";
                        PersonalAccidentBCoverChildOneStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildOne = "True";
                        PersonalAccidentACoverChildOneStatus = "False";
                        PersonalAccidentBCoverChildOneStatus = "False";
                        PersonalStatusChildOne1 = "True";
                        PersonalAccidentACoverChildOneStatus1 = "True";
                        PersonalAccidentBCoverChildOneStatus1 = "True";
                    }
                    if (selectSecSonChild < 5) {
                        PersonalStatusChildTwo = "False";
                        PersonalAccidentAChildTwoCoverStatus = "False";
                        PersonalAccidentBChildTwoCoverStatus = "False";
                        PersonalStatusChildTwo1 = "False";
                        PersonalAccidentAChildTwoCoverStatus1 = "False";
                        PersonalAccidentBChildTwoCoverStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildTwo = "True";
                        PersonalAccidentAChildTwoCoverStatus = "False";
                        PersonalAccidentBChildTwoCoverStatus = "False";
                        PersonalStatusChildTwo1 = "True";
                        PersonalAccidentAChildTwoCoverStatus1 = "True";
                        PersonalAccidentBChildTwoCoverStatus1 = "True";
                    }
                    if (selectThirdSonChild < 5) {
                        PersonalStatusChildThird = "False";
                        PersonalAccidentACoverChildThirdStatus = "False";
                        PersonalAccidentBCoverChildThirdStatus = "False";
                        PersonalStatusChildThird1 = "False";
                        PersonalAccidentACoverChildThirdStatus1 = "False";
                        PersonalAccidentBCoverChildThirdStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildThird = "True";
                        PersonalAccidentACoverChildThirdStatus = "False";
                        PersonalAccidentBCoverChildThirdStatus = "False";
                        PersonalStatusChildThird1 = "True";
                        PersonalAccidentACoverChildThirdStatus1 = "True";
                        PersonalAccidentBCoverChildThirdStatus1 = "True";
                    }
                    if (selectYearChildFour <5) {
                        PersonalStatusChildFour = "False";
                        PersonalAccidentACoverChildFourStatus = "False";
                        PersonalAccidentBCoverChildFourStatus = "False";
                        PersonalStatusChildFour1 = "False";
                        PersonalAccidentACoverChildFourStatus1 = "False";
                        PersonalAccidentBCoverChildFourStatus1 = "False";
                    }
                    else {
                        PersonalStatusChildFour = "True";
                        PersonalAccidentACoverChildFourStatus = "False";
                        PersonalAccidentBCoverChildFourStatus = "False";
                        PersonalStatusChildFour1 = "True";
                        PersonalAccidentACoverChildFourStatus1 = "True";
                        PersonalAccidentBCoverChildFourStatus1 = "True";
                    }
                    health_quote();
                    HealthQuoteAddOn();
                    SelectAddOnsButton.setVisibility(View.VISIBLE);
                }
//                  else {
//                      strPackageOne="UnCheck";
//                      strPackageFour="UnCheck";
//                      CountScroll--;
//                  }

            }
        });
        PackageFive.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (PackageFive.isChecked()) {
                    strPackageOne = "Check";
                    strPackageFive = "Check";
                    checkPackage = "PackageFive";
                    CountScroll++;
                    PackageOne.setChecked(false);
                    PackageTwo.setChecked(false);
                    PackageThree.setChecked(false);
                    PackageFour.setChecked(false);
                    PackageFive.setChecked(true);
                    PackageSix.setChecked(false);
                    WellnessBenefitStatus = "True";
                    BasicStatus = "True";
                    PersonalStatus = "False";
                    CriticalStatus = "False";
                    DailyHospitalSatus = "False";
                    ModernTreatmentsStatus = "False";
                    ExtensionPreHospitalization = "False";
                    ExtensionPr0Hospitalization = "False";
                    MaternityAndChildcare = "False";
                    CoverageNonMedical = "False";
                    ConditionWaiverStatus = "False";
                    PersonalAccidentACoverStatus = "False";
                    PersonalAccidentBCoverStatus = "False";
                    PreExistingDiseaseStatus = "False";
                    OutpatientDentalStatus = "False";
                    EmergencyTravellingStatus = "False";
                    SecondOpinionStatus = "False";
                    RestCureStatus = "False";
                    ObesityWeightStatus = "False";
                    SterilityInfertilityStatus = "False";
                    EnhancedOrganStatus = "False";
                    PremiumWaiverStatus = "False";
                    GlobalCoverStatus = "False";
                    MedicallyAdvisedStatus = "False";
                    EmergencyAssistanceStatus = "False";
                    HomeCareStatus = "False";
                    DiseaseManagementStatus = "False";
                    CoPaymentStatus1 = "True";
                    TreatmentStatus1 = "True";
                    SubCategoryDiscountStatus1 = "True";
                    CoPaymentStatus = CoPaymentStatus1;
                    TreatmentStatus = TreatmentStatus1;
                    SubCategoryDiscountStatus = SubCategoryDiscountStatus1;
                    SubCategory = strSubLimitEditText;
                    CoPaymentLoading = strCoPaymentEditText;

                    PersonalStatusChildOne = "False";
                    PersonalAccidentACoverChildOneStatus = "False";
                    PersonalAccidentBCoverChildOneStatus = "False";
                    PersonalStatusChildOne1 = "False";
                    PersonalAccidentACoverChildOneStatus1 = "False";
                    PersonalAccidentBCoverChildOneStatus1 = "False";
                    PersonalStatusChildTwo = "False";
                    PersonalAccidentAChildTwoCoverStatus = "False";
                    PersonalAccidentBChildTwoCoverStatus = "False";
                    PersonalStatusChildTwo1 = "False";
                    PersonalAccidentAChildTwoCoverStatus1 = "False";
                    PersonalAccidentBChildTwoCoverStatus1 = "False";
                    PersonalStatusChildThird = "False";
                    PersonalAccidentACoverChildThirdStatus = "False";
                    PersonalAccidentBCoverChildThirdStatus = "False";
                    PersonalStatusChildThird1 = "False";
                    PersonalAccidentACoverChildThirdStatus1 = "False";
                    PersonalAccidentBCoverChildThirdStatus1 = "False";
                    PersonalStatusChildFour = "False";
                    PersonalAccidentACoverChildFourStatus = "False";
                    PersonalAccidentBCoverChildFourStatus = "False";
                    PersonalStatusChildFour1 = "False";
                    PersonalAccidentACoverChildFourStatus1 = "False";
                    PersonalAccidentBCoverChildFourStatus1 = "False";

                    if (strSubLimitEditText.equals("A")){
                        sublimt = 10.0;
                    }else if (strSubLimitEditText.equals("B")){
                        sublimt = 7.5;
                    }else if (strSubLimitEditText.equals("C")){
                        sublimt = 5.0;
                    }else{
                        sublimt = 10.0;
                    }
                    TreatmentCheckBoxCheck = "True";
                    TreatmentStatus = "True";
                    TiresDiscount = 5;
                    TreatmentCheckBox.setChecked(true);
                    CoPaymentStatus = "True";
                    CoPaymentCheckBoxCheck = "True";
                    CoPaymentCheckBox.setChecked(true);
                    CoPaymentPercentageLiner.setVisibility(View.VISIBLE);

                    if (strCoPaymentEditText.equals("10")){
                        CoPaymentLoading = "10";
                        copayemntMax = 10;
                        CoPaymentStatus = "True";
                        CoPaymentCheckBoxCheck = "True";
                        TenCheckBox.setChecked(true);
                        TwentyCheckBox.setChecked(false);
                        ThirtyCheckBox.setChecked(false);
                        fortyCheckBox.setChecked(false);
                        FiftyCheckBox.setChecked(false);
                    }else if (strCoPaymentEditText.equals("20")){
                        CoPaymentLoading = "20";
                        copayemntMax = 20;
                        CoPaymentStatus = "True";
                        CoPaymentCheckBoxCheck = "True";
                        TenCheckBox.setChecked(false);
                        TwentyCheckBox.setChecked(true);
                        ThirtyCheckBox.setChecked(false);
                        fortyCheckBox.setChecked(false);
                        FiftyCheckBox.setChecked(false);
                    }else if (strCoPaymentEditText.equals("30")){
                        CoPaymentLoading = "30";
                        copayemntMax = 30;
                        CoPaymentStatus = "True";
                        CoPaymentCheckBoxCheck = "True";
                        TenCheckBox.setChecked(false);
                        TwentyCheckBox.setChecked(false);
                        ThirtyCheckBox.setChecked(true);
                        fortyCheckBox.setChecked(false);
                        FiftyCheckBox.setChecked(false);
                    }else if (strCoPaymentEditText.equals("40")){
                        CoPaymentLoading = "40";
                        copayemntMax = 40;
                        CoPaymentStatus = "True";
                        CoPaymentCheckBoxCheck = "True";
                        TenCheckBox.setChecked(false);
                        TwentyCheckBox.setChecked(false);
                        ThirtyCheckBox.setChecked(false);
                        fortyCheckBox.setChecked(true);
                        FiftyCheckBox.setChecked(false);
                    }else if (strCoPaymentEditText.equals("50")){
                        CoPaymentLoading = "50";
                        copayemntMax = 50;
                        CoPaymentStatus = "True";
                        CoPaymentCheckBoxCheck = "True";
                        TenCheckBox.setChecked(false);
                        TwentyCheckBox.setChecked(false);
                        ThirtyCheckBox.setChecked(false);
                        fortyCheckBox.setChecked(false);
                        FiftyCheckBox.setChecked(true);
                    }else {
                        CoPaymentLoading = "10";
                        copayemntMax = 10;
                        CoPaymentStatus = "True";
                        CoPaymentCheckBoxCheck = "True";
                        TenCheckBox.setChecked(true);
                        TwentyCheckBox.setChecked(false);
                        ThirtyCheckBox.setChecked(false);
                        fortyCheckBox.setChecked(false);
                        FiftyCheckBox.setChecked(false);
                    }
                    SubLimitCheckBox.setChecked(true);
                    SubCategoryDiscountStatusCheck = "True";
                    SubCategoryDiscountStatus = "True";
                    SubLimitLiner.setVisibility(View.VISIBLE);

                    if (strSubLimitEditText.equals("A")){
                        SubCategory = "A";
                        sublimt = 10.0;
                        SubLimitCheckBox.setChecked(true);
                        SubCategoryDiscountStatusCheck = "True";
                        SubCategoryDiscountStatus = "True";
                        ACheckBox.setChecked(true);
                        BCheckBox.setChecked(false);
                        CCheckBox.setChecked(false);
                    }else if (strSubLimitEditText.equals("B")){
                        SubCategory = "B";
                        sublimt = 7.5;
                        SubLimitCheckBox.setChecked(true);
                        SubCategoryDiscountStatusCheck = "True";
                        SubCategoryDiscountStatus = "True";
                        ACheckBox.setChecked(false);
                        BCheckBox.setChecked(true);
                        CCheckBox.setChecked(false);
                    }else if (strSubLimitEditText.equals("C")){
                        SubCategory = "C";
                        sublimt = 5.0;
                        SubLimitCheckBox.setChecked(true);
                        SubCategoryDiscountStatusCheck = "True";
                        SubCategoryDiscountStatus = "True";
                        ACheckBox.setChecked(false);
                        BCheckBox.setChecked(false);
                        CCheckBox.setChecked(true);
                    }else {
                        SubCategory = "A";
                        sublimt = 10.0;
                        SubLimitCheckBox.setChecked(true);
                        SubCategoryDiscountStatusCheck = "True";
                        SubCategoryDiscountStatus = "True";
                        ACheckBox.setChecked(true);
                        BCheckBox.setChecked(false);
                        CCheckBox.setChecked(false);
                    }
                    health_quote();
                    HealthQuoteAddOn();
                    SelectAddOnsButton.setVisibility(View.VISIBLE);
                }
//                  else {
//                      strPackageOne="UnCheck";
//                      strPackageFive="UnCheck";
//                      CountScroll--;
//                  }
            }
        });
        PackageSix.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            @Override
            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {
                if (PackageSix.isChecked()) {
                    strPackageSix = "Check";
                    checkPackage = "PackageSix";
                    PackageOne.setChecked(false);
                    PackageTwo.setChecked(false);
                    PackageThree.setChecked(false);
                    PackageFour.setChecked(false);
                    PackageFive.setChecked(false);
                    PackageSix.setChecked(true);
                    BasicStatus = "True";
                    PersonalStatus = "False";
                    CriticalStatus = "False";
                    DailyHospitalSatus = "False";
                    ModernTreatmentsStatus = "False";
                    ExtensionPreHospitalization = "False";
                    ExtensionPr0Hospitalization = "False";
                    MaternityAndChildcare = "False";
                    CoverageNonMedical = "False";
                    ConditionWaiverStatus = "False";
                    PersonalAccidentACoverStatus = "False";
                    PersonalAccidentBCoverStatus = "False";
                    PreExistingDiseaseStatus = "False";
                    OutpatientDentalStatus = "False";
                    EmergencyTravellingStatus = "False";
                    SecondOpinionStatus = "False";
                    RestCureStatus = "False";
                    ObesityWeightStatus = "False";
                    SterilityInfertilityStatus = "False";
                    EnhancedOrganStatus = "False";
                    PremiumWaiverStatus = "False";
                    GlobalCoverStatus = "False";
                    MedicallyAdvisedStatus = "False";
                    EmergencyAssistanceStatus = "False";
                    HomeCareStatus = "False";
                    WellnessBenefitStatus = "False";

                    LoyaltyDiscountStatus = "False";
                    CoPaymentStatus = "False";
                    TreatmentStatus = "False";
                    SubCategoryDiscountStatus = "False";
                    OrganDiscountStatus = "False";
                    SubCategoryDiscountStatusCheck = "False";
                    CoPaymentCheckBoxCheck = "False";
                    TreatmentCheckBoxCheck = "False";
                    TiresDiscount = 0;
                    copayemntMax = 0;
                    sublimt = 0.0;
                    loyalityDiscount = 0;
                    OrganDonar = 0.0;
                    LinerPolicyNumber.setVisibility(View.GONE);
                    strPolicyNumber = "";
                    checkBoxLoyaltyDiscount.setChecked(false);
                    OrganCheckBox.setChecked(false);
                    TreatmentCheckBox.setChecked(false);
                    CoPaymentCheckBox.setChecked(false);
                    CoPaymentPercentageLiner.setVisibility(View.GONE);
                    TenCheckBox.setChecked(false);
                    TwentyCheckBox.setChecked(false);
                    ThirtyCheckBox.setChecked(false);
                    fortyCheckBox.setChecked(false);
                    FiftyCheckBox.setChecked(false);
                    SubLimitLiner.setVisibility(View.GONE);
                    SubLimitCheckBox.setChecked(false);
                    ACheckBox.setChecked(false);
                    BCheckBox.setChecked(false);
                    CCheckBox.setChecked(false);
                    health_quote();
                    HealthQuoteAddOn();
                    SelectAddOnsButton.setVisibility(View.VISIBLE);
                }
//                  else{
//                      strPackageSix="UnCheck";
//                  }


            }
        });
        SubLimitSpinnerLiner.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                MyOptionsPickerView singlePicker = new MyOptionsPickerView(NewCHIAddOns.this);
                final ArrayList<String> items1 = new ArrayList<String>();
                items1.add("A");
                items1.add("B");
                items1.add("C");
                singlePicker.setPicker(items1);
                singlePicker.setCyclic(false);
                singlePicker.setSelectOptions(0);
                singlePicker.setOnoptionsSelectListener(new MyOptionsPickerView.OnOptionsSelectListener() {
                    @Override
                    public void onOptionsSelect(int options1, int option2, int options3) {
                        strSubLimitEditText = items1.get(options1);
                        if (checkPackage.equals("PackageFive")) {
                            SubLimitEditText.setText(strSubLimitEditText);
                            SubLimitCheckBox.setChecked(true);
                            SubCategoryDiscountStatusCheck = "True";
                            SubCategoryDiscountStatus = "True";
                            SubLimitLiner.setVisibility(View.VISIBLE);

                            if (strSubLimitEditText.equals("A")){
                                SubCategory = "A";
                                sublimt = 10.0;
                                SubLimitCheckBox.setChecked(true);
                                SubCategoryDiscountStatusCheck = "True";
                                SubCategoryDiscountStatus = "True";
                                ACheckBox.setChecked(true);
                                BCheckBox.setChecked(false);
                                CCheckBox.setChecked(false);
                            }else if (strSubLimitEditText.equals("B")){
                                SubCategory = "B";
                                sublimt = 7.5;
                                SubLimitCheckBox.setChecked(true);
                                SubCategoryDiscountStatusCheck = "True";
                                SubCategoryDiscountStatus = "True";
                                ACheckBox.setChecked(false);
                                BCheckBox.setChecked(true);
                                CCheckBox.setChecked(false);
                            }else if (strSubLimitEditText.equals("C")){
                                SubCategory = "C";
                                sublimt = 5.0;
                                SubLimitCheckBox.setChecked(true);
                                SubCategoryDiscountStatusCheck = "True";
                                SubCategoryDiscountStatus = "True";
                                ACheckBox.setChecked(false);
                                BCheckBox.setChecked(false);
                                CCheckBox.setChecked(true);
                            }else {
                                SubCategory = "A";
                                sublimt = 10.0;
                                SubLimitCheckBox.setChecked(true);
                                SubCategoryDiscountStatusCheck = "True";
                                SubCategoryDiscountStatus = "True";
                                ACheckBox.setChecked(true);
                                BCheckBox.setChecked(false);
                                CCheckBox.setChecked(false);
                            }

                            health_quote();
                            HealthQuoteAddOn();
                        } else {
                            SubLimitEditText.setText(strSubLimitEditText);
                            Toast.makeText(NewCHIAddOns.this, "Select Package Five", Toast.LENGTH_SHORT).show();
                        }
                    }
                });
                singlePicker.show();
            }
        });
        CoPaymentSpinnerLiner.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                MyOptionsPickerView singlePicker = new MyOptionsPickerView(NewCHIAddOns.this);
                final ArrayList<String> items1 = new ArrayList<String>();
                items1.add("10");
                items1.add("20");
                items1.add("30");
                items1.add("40");
                items1.add("50");
                singlePicker.setPicker(items1);
                singlePicker.setCyclic(false);
                singlePicker.setSelectOptions(0);
                singlePicker.setOnoptionsSelectListener(new MyOptionsPickerView.OnOptionsSelectListener() {
                    @Override
                    public void onOptionsSelect(int options1, int option2, int options3) {
                        strCoPaymentEditText = items1.get(options1);
                        if (checkPackage.equals("PackageFive")) {
                            CoPaymentEditText.setText(strCoPaymentEditText);

                            CoPaymentStatus = "True";
                            CoPaymentCheckBoxCheck = "True";
                            CoPaymentCheckBox.setChecked(true);
                            CoPaymentPercentageLiner.setVisibility(View.VISIBLE);

                            if (strCoPaymentEditText.equals("10")){
                                CoPaymentLoading = "10";
                                copayemntMax = 10;
                                CoPaymentStatus = "True";
                                CoPaymentCheckBoxCheck = "True";
                                TenCheckBox.setChecked(true);
                                TwentyCheckBox.setChecked(false);
                                ThirtyCheckBox.setChecked(false);
                                fortyCheckBox.setChecked(false);
                                FiftyCheckBox.setChecked(false);
                            }else if (strCoPaymentEditText.equals("20")){
                                CoPaymentLoading = "20";
                                copayemntMax = 20;
                                CoPaymentStatus = "True";
                                CoPaymentCheckBoxCheck = "True";
                                TenCheckBox.setChecked(false);
                                TwentyCheckBox.setChecked(true);
                                ThirtyCheckBox.setChecked(false);
                                fortyCheckBox.setChecked(false);
                                FiftyCheckBox.setChecked(false);
                            }else if (strCoPaymentEditText.equals("30")){
                                CoPaymentLoading = "30";
                                copayemntMax = 30;
                                CoPaymentStatus = "True";
                                CoPaymentCheckBoxCheck = "True";
                                TenCheckBox.setChecked(false);
                                TwentyCheckBox.setChecked(false);
                                ThirtyCheckBox.setChecked(true);
                                fortyCheckBox.setChecked(false);
                                FiftyCheckBox.setChecked(false);
                            }else if (strCoPaymentEditText.equals("40")){
                                CoPaymentLoading = "40";
                                copayemntMax = 40;
                                CoPaymentStatus = "True";
                                CoPaymentCheckBoxCheck = "True";
                                TenCheckBox.setChecked(false);
                                TwentyCheckBox.setChecked(false);
                                ThirtyCheckBox.setChecked(false);
                                fortyCheckBox.setChecked(true);
                                FiftyCheckBox.setChecked(false);
                            }else if (strCoPaymentEditText.equals("50")){
                                CoPaymentLoading = "50";
                                copayemntMax = 50;
                                CoPaymentStatus = "True";
                                CoPaymentCheckBoxCheck = "True";
                                TenCheckBox.setChecked(false);
                                TwentyCheckBox.setChecked(false);
                                ThirtyCheckBox.setChecked(false);
                                fortyCheckBox.setChecked(false);
                                FiftyCheckBox.setChecked(true);
                            }else {
                                CoPaymentLoading = "10";
                                copayemntMax = 10;
                                CoPaymentStatus = "True";
                                CoPaymentCheckBoxCheck = "True";
                                TenCheckBox.setChecked(true);
                                TwentyCheckBox.setChecked(false);
                                ThirtyCheckBox.setChecked(false);
                                fortyCheckBox.setChecked(false);
                                FiftyCheckBox.setChecked(false);
                            }


                            health_quote();
                            HealthQuoteAddOn();


                        } else {
                            CoPaymentEditText.setText(strCoPaymentEditText);
                            Toast.makeText(NewCHIAddOns.this, "Select Package Five", Toast.LENGTH_SHORT).show();
                        }
                    }
                });
                singlePicker.show();
            }
        });
        ViewDetails.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Dialog alert_dialog;
                alert_dialog = new Dialog(NewCHIAddOns.this);
                alert_dialog.setCanceledOnTouchOutside(false);
                alert_dialog.setCancelable(false);
                alert_dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
                Objects.requireNonNull(alert_dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
                alert_dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;
                alert_dialog.setContentView(R.layout.viewdetailsnewchi);
                WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
                lp.copyFrom(alert_dialog.getWindow().getAttributes());
                lp.width = WindowManager.LayoutParams.MATCH_PARENT;
                lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
                lp.gravity = Gravity.CENTER;
                Button buttonClose;
                buttonClose = alert_dialog.findViewById(R.id.buttonClose);
                TextView SumInsuredTxt = alert_dialog.findViewById(R.id.SumInsuredTxt);
                TextView TotalMember = alert_dialog.findViewById(R.id.TotalMember);
                TextView TotalDiscount = alert_dialog.findViewById(R.id.TotalDiscount);
                TextView longTermDiscountTxt = alert_dialog.findViewById(R.id.longTermDiscountTxt);
                TextView DirectDiscountTxt = alert_dialog.findViewById(R.id.DirectDiscountTxt);
                TextView SubCategoryDiscount = alert_dialog.findViewById(R.id.SubCategoryDiscount);
                TextView CoPaymentDiscountTxt = alert_dialog.findViewById(R.id.CoPaymentDiscountTxt);
                TextView TreatmentDiscount = alert_dialog.findViewById(R.id.TreatmentDiscount);
                TextView OrganDiscountAmount = alert_dialog.findViewById(R.id.OrganDiscountAmount);
                TextView TotalAddOn = alert_dialog.findViewById(R.id.TotalAddOn);
                LinearLayout DailyCashViewTxt = alert_dialog.findViewById(R.id.DailyCashViewTxt);
                TextView DailyCashViewTxtAmount = alert_dialog.findViewById(R.id.DailyCashViewTxtAmount);
                LinearLayout CriticalTxt = alert_dialog.findViewById(R.id.CriticalTxt);
                TextView CriticalTxtPremium = alert_dialog.findViewById(R.id.CriticalTxtPremium);
                LinearLayout ExtensionPreTxt = alert_dialog.findViewById(R.id.ExtensionPreTxt);
                TextView ExtensionPreTxtPremium = alert_dialog.findViewById(R.id.ExtensionPreTxtPremium);
                LinearLayout ExtensionPostTxt = alert_dialog.findViewById(R.id.ExtensionPostTxt);
                TextView ExtensionPostTxtPremium = alert_dialog.findViewById(R.id.ExtensionPostTxtPremium);
                LinearLayout MaternityTxt = alert_dialog.findViewById(R.id.MaternityTxt);
                TextView MaternityTxtPremium = alert_dialog.findViewById(R.id.MaternityTxtPremium);
                LinearLayout CoverageTxt = alert_dialog.findViewById(R.id.CoverageTxt);
                TextView CoverageTxtPremium = alert_dialog.findViewById(R.id.CoverageTxtPremium);
                LinearLayout ConditionTxt = alert_dialog.findViewById(R.id.ConditionTxt);
                TextView ConditionTxtPremium = alert_dialog.findViewById(R.id.ConditionTxtPremium);
                LinearLayout PersonalCoverTxt = alert_dialog.findViewById(R.id.PersonalCoverTxt);
                TextView PersonalCoverTxtPremium = alert_dialog.findViewById(R.id.PersonalCoverTxtPremium);
                TextView PersonalBTxt = alert_dialog.findViewById(R.id.PersonalBTxt);
                TextView PersonalATxt = alert_dialog.findViewById(R.id.PersonalATxt);
                LinearLayout PreExitingTxt = alert_dialog.findViewById(R.id.PreExitingTxt);
                TextView PreExitingTxtPremium = alert_dialog.findViewById(R.id.PreExitingTxtPremium);
                LinearLayout OutpatientDentalTxt = alert_dialog.findViewById(R.id.OutpatientDentalTxt);
                TextView OutpatientDentalTxtPremium = alert_dialog.findViewById(R.id.OutpatientDentalTxtPremium);
                LinearLayout EmergencyTravellingTxt = alert_dialog.findViewById(R.id.EmergencyTravellingTxt);
                TextView EmergencyTravellingTxtPremium = alert_dialog.findViewById(R.id.EmergencyTravellingTxtPremium);
                LinearLayout SecondTxt = alert_dialog.findViewById(R.id.SecondTxt);
                TextView SecondTxtPremium = alert_dialog.findViewById(R.id.SecondTxtPremium);
                LinearLayout RestCureTxt = alert_dialog.findViewById(R.id.RestCureTxt);
                TextView RestCureTxtPremium = alert_dialog.findViewById(R.id.RestCureTxtPremium);
                LinearLayout ObesityTxt = alert_dialog.findViewById(R.id.ObesityTxt);
                TextView ObesityTxtPremium = alert_dialog.findViewById(R.id.ObesityTxtPremium);
                LinearLayout SterilityInfertilityTxt = alert_dialog.findViewById(R.id.SterilityInfertilityTxt);
                TextView SterilityInfertilityTxtPremium = alert_dialog.findViewById(R.id.SterilityInfertilityTxtPremium);
                LinearLayout EnhancedTxt = alert_dialog.findViewById(R.id.EnhancedTxt);
                TextView EnhancedTxtPremium = alert_dialog.findViewById(R.id.EnhancedTxtPremium);
                LinearLayout MedicallyTxt = alert_dialog.findViewById(R.id.MedicallyTxt);
                TextView MedicallyTxtPremium = alert_dialog.findViewById(R.id.MedicallyTxtPremium);
                LinearLayout EmergencyAssistanceTxt = alert_dialog.findViewById(R.id.EmergencyAssistanceTxt);
                TextView EmergencyAssistanceTxtPremium = alert_dialog.findViewById(R.id.EmergencyAssistanceTxtPremium);
                LinearLayout HomeCareTxt = alert_dialog.findViewById(R.id.HomeCareTxt);
                TextView HomeCareTxtPremium = alert_dialog.findViewById(R.id.HomeCareTxtPremium);
                LinearLayout WellnessBenefitTxt = alert_dialog.findViewById(R.id.WellnessBenefitTxt);
                TextView WellnessBenefitTxtPremium = alert_dialog.findViewById(R.id.WellnessBenefitTxtPremium);
                LinearLayout DiseaseManagementTxt = alert_dialog.findViewById(R.id.DiseaseManagementTxt);
                TextView DiseaseManagementTxtPremium = alert_dialog.findViewById(R.id.DiseaseManagementTxtPremium);
                LinearLayout GlobalCoverTxt = alert_dialog.findViewById(R.id.GlobalCoverTxt);
                TextView GlobalCoverTxtPremium = alert_dialog.findViewById(R.id.GlobalCoverTxtPremium);
                LinearLayout ModernTreatmentTxt = alert_dialog.findViewById(R.id.ModernTreatmentTxt);
                TextView ModernTreatmentTxtPremium = alert_dialog.findViewById(R.id.ModernTreatmentTxtPremium);
                LinearLayout PremiumWaiverTxt = alert_dialog.findViewById(R.id.PremiumWaiverTxt);
                TextView PremiumWaiverTxtPremium = alert_dialog.findViewById(R.id.PremiumWaiverTxtPremium);
                TextView TotalPremiumTxtView = alert_dialog.findViewById(R.id.TotalPremiumTxtView);
                TextView GSTTxtView = alert_dialog.findViewById(R.id.GSTTxtView);
                TextView LongTermTxt = alert_dialog.findViewById(R.id.LongTermTxt);
                TextView subLimitTxt = alert_dialog.findViewById(R.id.subLimitTxt);
                TextView CoPaymentTxt = alert_dialog.findViewById(R.id.CoPaymentTxt);
                TextView BasicPremiumTxtView = alert_dialog.findViewById(R.id.BasicPremiumTxtView);
                GSTTxtView.setText(GSt);
                SumInsuredTxt.setText(strSumInsured);
                double strTotalDiscount = Discounts + Double.parseDouble(DirectPolicyDiscountPremium);
                String newTotalDiscount = valueOf(Math.round(strTotalDiscount * 100.0) / 100.0);
                String strTotalMember = String.valueOf(FamilyTypeCounter + mCounter);
                TotalMember.setText(strTotalMember);
                TotalDiscount.setText(newTotalDiscount);
                longTermDiscountTxt.setText(String.valueOf(LongTermDiscountDiscountPremium));
                SubCategoryDiscount.setText(String.valueOf(SubCategoryDiscountPremium));
                CoPaymentDiscountTxt.setText(String.valueOf(doubleCoPaymentDiscountPremium));
                OrganDiscountAmount.setText(String.valueOf(OrganDonorDiscountPremium));
                TreatmentDiscount.setText(String.valueOf(doubleTiredTreatment));
                DirectDiscountTxt.setText(DirectPolicyDiscountPremium);
                TotalAddOn.setText(String.valueOf(addons));
                BasicPremiumTxtView.setText(strBasicPremium);
                TotalPremiumTxtView.setText(strTotalPremium);

                if (yearRadio.equals("TwoYearFirstCard") || yearRadio.equals("TwoYearSecondCard")) {
                    LongTermTxt.setText("(5%)");
                } else if (yearRadio.equals("ThreeYearFirstCard") || yearRadio.equals("ThreeYearSecondCard")) {
                    LongTermTxt.setText("(7.5%)");
                } else {
                    LongTermTxt.setText("");
                }
                if (CoPaymentStatus.equals("True")) {
                    if (CoPaymentLoading.equals("10")) {
                        CoPaymentTxt.setText("(10%)");
                    } else if (CoPaymentLoading.equals("20")) {
                        CoPaymentTxt.setText("(20%)");
                    } else if (CoPaymentLoading.equals("30")) {
                        CoPaymentTxt.setText("(30%)");
                    } else if (CoPaymentLoading.equals("40")) {
                        CoPaymentTxt.setText("(40%)");
                    } else if (CoPaymentLoading.equals("50")) {
                        CoPaymentTxt.setText("(50%)");
                    }
                } else {
                    CoPaymentTxt.setText("");
                }
                if (SubCategoryDiscountStatus.equals("True")) {
                    if (SubCategory.equals("A")) {
                        subLimitTxt.setText("(10%)");
                    } else if (SubCategory.equals("B")) {
                        subLimitTxt.setText("(7.50%)");
                    } else if (SubCategory.equals("C")) {
                        subLimitTxt.setText("(5%)");
                    }
                } else {
                    subLimitTxt.setText("");
                }
                if (DailyHospitalSatus.equals("True")) {
                    DailyCashViewTxt.setVisibility(View.VISIBLE);
                    DailyCashViewTxtAmount.setText(DailyHospitalCoverPremium);
                } else {
                    DailyCashViewTxt.setVisibility(View.GONE);
                }
                if (CriticalStatus.equals("True")) {
                    CriticalTxt.setVisibility(View.VISIBLE);
                    CriticalTxtPremium.setText(CriticalIllnessCoverPremium);
                } else {
                    CriticalTxt.setVisibility(View.GONE);
                }

                if (ExtensionPreHospitalization.equals("True")) {
                    ExtensionPreTxt.setVisibility(View.VISIBLE);
                    ExtensionPreTxtPremium.setText(ExtensionPreHospitalizationCoverPremium);
                } else {
                    ExtensionPreTxt.setVisibility(View.GONE);
                }

                if (ExtensionPr0Hospitalization.equals("True")) {
                    ExtensionPostTxt.setVisibility(View.VISIBLE);
                    ExtensionPostTxtPremium.setText(ExtensionProHospitalizationCoverPremium);
                } else {
                    ExtensionPostTxt.setVisibility(View.GONE);
                }

                if (MaternityAndChildcare.equals("True")) {
                    MaternityTxt.setVisibility(View.VISIBLE);
                    MaternityTxtPremium.setText(MaternityChildcareCoverPremium);
                } else {
                    MaternityTxt.setVisibility(View.GONE);
                }
                if (CoverageNonMedical.equals("True")) {
                    CoverageTxt.setVisibility(View.VISIBLE);
                    CoverageTxtPremium.setText(CoverageNonMedicalCoverPremium);
                } else {
                    CoverageTxt.setVisibility(View.GONE);
                }
                if (ConditionWaiverStatus.equals("True")) {
                    ConditionTxt.setVisibility(View.VISIBLE);
                    ConditionTxtPremium.setText(ConditionWaiverCoverPremium);
                } else {
                    ConditionTxt.setVisibility(View.GONE);
                }
                if (PersonalStatus.equals("True")) {
                    PersonalCoverTxt.setVisibility(View.VISIBLE);
                    PersonalCoverTxtPremium.setText(PersonalAccidentCoverPremium);
                } else {
                    PersonalCoverTxt.setVisibility(View.GONE);
                }

                if (PersonalAccidentBCoverStatus.equals("True")) {
                    PersonalBTxt.setVisibility(View.VISIBLE);
                } else {
                    PersonalBTxt.setVisibility(View.GONE);
                }
                if (PersonalAccidentACoverStatus.equals("True")) {
                    PersonalATxt.setVisibility(View.VISIBLE);
                } else {
                    PersonalATxt.setVisibility(View.GONE);
                }
                if (PreExistingDiseaseStatus.equals("True")) {
                    PreExitingTxt.setVisibility(View.VISIBLE);
                    PreExitingTxtPremium.setText(PreExistingDiseaseCoverPremium);
                } else {
                    PreExitingTxt.setVisibility(View.GONE);
                }
                if (OutpatientDentalStatus.equals("True")) {
                    OutpatientDentalTxt.setVisibility(View.VISIBLE);
                    OutpatientDentalTxtPremium.setText(OutpatientDentalCoverPremium);
                } else {
                    OutpatientDentalTxt.setVisibility(View.GONE);
                }
                if (EmergencyTravellingStatus.equals("True")) {
                    EmergencyTravellingTxt.setVisibility(View.VISIBLE);
                    EmergencyTravellingTxtPremium.setText(EmergencyTravellingCoverPremium);
                } else {
                    EmergencyTravellingTxt.setVisibility(View.GONE);
                }
                if (SecondOpinionStatus.equals("True")) {
                    SecondTxt.setVisibility(View.VISIBLE);
                    SecondTxtPremium.setText(SecondOpinionCoverPremium);
                } else {
                    SecondTxt.setVisibility(View.GONE);
                }
                if (RestCureStatus.equals("True")) {
                    RestCureTxt.setVisibility(View.VISIBLE);
                    RestCureTxtPremium.setText(RestCureCoverPremium);
                } else {
                    RestCureTxt.setVisibility(View.GONE);
                }
                if (ObesityWeightStatus.equals("True")) {
                    ObesityTxt.setVisibility(View.VISIBLE);
                    ObesityTxtPremium.setText(ObesityWeightCoverPremium);
                } else {
                    ObesityTxt.setVisibility(View.GONE);
                }
                if (SterilityInfertilityStatus.equals("True")) {
                    SterilityInfertilityTxt.setVisibility(View.VISIBLE);
                    SterilityInfertilityTxtPremium.setText(SterilityInfertilityCoverPremium);
                } else {
                    SterilityInfertilityTxt.setVisibility(View.GONE);
                }
                if (EnhancedOrganStatus.equals("True")) {
                    EnhancedTxt.setVisibility(View.VISIBLE);
                    EnhancedTxtPremium.setText(EnhancedCoverPremium);
                } else {
                    EnhancedTxt.setVisibility(View.GONE);
                }
                if (MedicallyAdvisedStatus.equals("True")) {
                    MedicallyTxt.setVisibility(View.VISIBLE);
                    MedicallyTxtPremium.setText(MedicallyAdvisedCoverPremium);
                } else {
                    MedicallyTxt.setVisibility(View.GONE);
                }
                if (EmergencyAssistanceStatus.equals("True")) {
                    EmergencyAssistanceTxt.setVisibility(View.VISIBLE);
                    EmergencyAssistanceTxtPremium.setText(EmergencyAssistanceCoverPremium);
                } else {
                    EmergencyAssistanceTxt.setVisibility(View.GONE);
                }
                if (HomeCareStatus.equals("True")) {
                    HomeCareTxt.setVisibility(View.VISIBLE);
                    HomeCareTxtPremium.setText(HomeCareCoverPremium);
                } else {
                    HomeCareTxt.setVisibility(View.GONE);
                }
                if (WellnessBenefitStatus.equals("True")) {
                    WellnessBenefitTxt.setVisibility(View.VISIBLE);
                    WellnessBenefitTxtPremium.setText(WellnessBenefitCoverPremium);
                } else {
                    WellnessBenefitTxt.setVisibility(View.GONE);
                }
                if (DiseaseManagementStatus.equals("True")) {
                    DiseaseManagementTxt.setVisibility(View.VISIBLE);
                    DiseaseManagementTxtPremium.setText(DiseaseManagementCoverPremium);
                } else {
                    DiseaseManagementTxt.setVisibility(View.GONE);
                }
                if (GlobalCoverStatus.equals("True")) {
                    GlobalCoverTxt.setVisibility(View.VISIBLE);
                    GlobalCoverTxtPremium.setText(GlobalCoverCoverPremium);
                } else {
                    GlobalCoverTxt.setVisibility(View.GONE);
                }
                if (ModernTreatmentsStatus.equals("True")) {
                    ModernTreatmentTxt.setVisibility(View.VISIBLE);
                    ModernTreatmentTxtPremium.setText(ModernTreatmentCoverPremium);
                } else {
                    ModernTreatmentTxt.setVisibility(View.GONE);
                }
                if (PremiumWaiverStatus.equals("True")) {
                    PremiumWaiverTxt.setVisibility(View.VISIBLE);
                    PremiumWaiverTxtPremium.setText(PremiumWaiverCoverPremium);
                } else {
                    PremiumWaiverTxt.setVisibility(View.GONE);
                }
                alert_dialog.show();
                buttonClose.setOnClickListener(new View.OnClickListener() {
                    @Override
                    public void onClick(View v) {
                        alert_dialog.dismiss();
                    }
                });
            }
        });
        AddOnsBack.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                backMethod();
            }
        });
    }
    private void popupEye() {
        Dialog popupEyeDialog;
        popupEyeDialog = new Dialog(NewCHIAddOns.this);
        popupEyeDialog.setCanceledOnTouchOutside(false);
        popupEyeDialog.setCancelable(false);
        popupEyeDialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
        Objects.requireNonNull(popupEyeDialog.getWindow()).setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
        popupEyeDialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;
        popupEyeDialog.setContentView(R.layout.eyepopup);
        WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
        lp.copyFrom(popupEyeDialog.getWindow().getAttributes());
        lp.width = WindowManager.LayoutParams.MATCH_PARENT;
        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
        lp.gravity = Gravity.CENTER;
        popupEyeDialog.show();
        ImageView cutImgPopup = popupEyeDialog.findViewById(R.id.cutImgPopup);
        cutImgPopup.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                popupEyeDialog.dismiss();

            }
        });
    }
    private void checkboxCheck() {
        if (DailyHospitalSatus.equals("True")) {
            CheckBoxDailyCash.setChecked(true);
        } else {
            CheckBoxDailyCash.setChecked(false);
        }

        if (CriticalStatus.equals("True")) {
            CheckBoxCriticalIllnes.setChecked(true);
        } else {
            CheckBoxCriticalIllnes.setChecked(false);
        }

        if (ExtensionPreHospitalization.equals("True")) {
            CheckBoxPreHospitalization.setChecked(true);
        } else {
            CheckBoxPreHospitalization.setChecked(false);
        }

        if (ExtensionPr0Hospitalization.equals("True")) {
            CheckBoxProHospitalization.setChecked(true);
        } else {
            CheckBoxProHospitalization.setChecked(false);
        }

        if (MaternityAndChildcare.equals("True")) {
            CheckBoxMaternityChildcare.setChecked(true);
        } else {
            CheckBoxMaternityChildcare.setChecked(false);
        }

        if (CoverageNonMedical.equals("True")) {
            CheckBoxCoverageNonMedical.setChecked(true);
        } else {
            CheckBoxCoverageNonMedical.setChecked(false);
        }
        if (ConditionWaiverStatus.equals("True")) {
            CheckBoxConditionWaiver.setChecked(true);
        } else {
            CheckBoxConditionWaiver.setChecked(false);
        }
        if (PreExistingDiseaseStatus.equals("True")) {
            CheckBoxPreExistingDisease.setChecked(true);
        } else {
            CheckBoxPreExistingDisease.setChecked(false);
        }
        if (OutpatientDentalStatus.equals("True")) {
            CheckBoxOutpatientDental.setChecked(true);
        } else {
            CheckBoxOutpatientDental.setChecked(false);
        }
        if (EmergencyTravellingStatus.equals("True")) {
            CheckBoxEmergencyTravelling.setChecked(true);
        } else {
            CheckBoxEmergencyTravelling.setChecked(false);
        }
        if (SecondOpinionStatus.equals("True")) {
            CheckBoxSecondOpinion.setChecked(true);
        } else {
            CheckBoxSecondOpinion.setChecked(false);
        }
        if (RestCureStatus.equals("True")) {
            CheckBoxRestCure.setChecked(true);
        } else {
            CheckBoxRestCure.setChecked(false);
        }
        if (ObesityWeightStatus.equals("True")) {
            CheckBoxObesityWeight.setChecked(true);
        } else {
            CheckBoxObesityWeight.setChecked(false);
        }

        if (SterilityInfertilityStatus.equals("True")) {
            CheckBoxSterilityInfertility.setChecked(true);
        } else {
            CheckBoxSterilityInfertility.setChecked(false);
        }

        if (EnhancedOrganStatus.equals("True")) {
            CheckBoxEnhancedOrgan.setChecked(true);
        } else {
            CheckBoxEnhancedOrgan.setChecked(false);
        }

        if (MedicallyAdvisedStatus.equals("True")) {
            CheckBoxMedicallyAdvised.setChecked(true);
        } else {
            CheckBoxMedicallyAdvised.setChecked(false);
        }

        if (EmergencyAssistanceStatus.equals("True")) {
            CheckBoxEmergencyAssistance.setChecked(true);
        } else {
            CheckBoxEmergencyAssistance.setChecked(false);
        }
        if (HomeCareStatus.equals("True")) {
            CheckBoxHomeCare.setChecked(true);
        } else {
            CheckBoxHomeCare.setChecked(false);
        }

        if (WellnessBenefitStatus.equals("True")) {
            CheckBoxWellnessBenefit.setChecked(true);
        } else {
            CheckBoxWellnessBenefit.setChecked(false);
        }
        if (DiseaseManagementStatus.equals("True")) {
            CheckBoxDiseaseManagement.setChecked(true);
        } else {
            CheckBoxDiseaseManagement.setChecked(false);
        }

        if (GlobalCoverStatus.equals("True")) {
            CheckBoxGlobalCover.setChecked(true);
        } else {
            CheckBoxGlobalCover.setChecked(false);
        }
        if (ModernTreatmentsStatus.equals("True")) {
            CheckBoxModernTreatments.setChecked(true);
        } else {
            CheckBoxModernTreatments.setChecked(false);
        }
        if (PremiumWaiverStatus.equals("True")) {
            CheckBoxPremiumWaiver.setChecked(true);
        } else {
            CheckBoxPremiumWaiver.setChecked(false);
        }
        if (PersonalStatus.equals("True")) {
            CheckBoxPersonalCoverA.setChecked(true);
        } else {
            CheckBoxPersonalCoverA.setChecked(false);
        }
    }
    private void packageSix() {
        BasicStatus = "True";
        PersonalStatus = "False";
        CriticalStatus = "False";
        DailyHospitalSatus = "False";
        ModernTreatmentsStatus = "False";
        ExtensionPreHospitalization = "False";
        ExtensionPr0Hospitalization = "False";
        MaternityAndChildcare = "False";
        CoverageNonMedical = "False";
        ConditionWaiverStatus = "False";
        PersonalAccidentACoverStatus = "False";
        PersonalAccidentBCoverStatus = "False";
        PreExistingDiseaseStatus = "False";
        OutpatientDentalStatus = "False";
        EmergencyTravellingStatus = "False";
        SecondOpinionStatus = "False";
        RestCureStatus = "False";
        ObesityWeightStatus = "False";
        SterilityInfertilityStatus = "False";
        EnhancedOrganStatus = "False";
        PremiumWaiverStatus = "False";
        GlobalCoverStatus = "False";
        MedicallyAdvisedStatus = "False";
        EmergencyAssistanceStatus = "False";
        HomeCareStatus = "False";
        WellnessBenefitStatus = "False";
    }
    private void discountAlert() {
        final Dialog alertDiscount = new Dialog(NewCHIAddOns.this);
        alertDiscount.setCanceledOnTouchOutside(false);
        alertDiscount.setCancelable(false);
        alertDiscount.requestWindowFeature(Window.FEATURE_NO_TITLE);
        Objects.requireNonNull(alertDiscount.getWindow()).setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));
        alertDiscount.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;
        alertDiscount.setContentView(R.layout.alert_dialog_discount);
        WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
        lp.copyFrom(alertDiscount.getWindow().getAttributes());
        lp.width = WindowManager.LayoutParams.MATCH_PARENT;
        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
        lp.gravity = Gravity.CENTER;
        TextView ok_dialog;
        ok_dialog = alertDiscount.findViewById(R.id.ok_dialog);
        ok_dialog.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                alertDiscount.dismiss();
            }
        });
        alertDiscount.show();
    }
    private void backMethod() {
        Intent intent = new Intent(NewCHIAddOns.this, PolicyTypeCHI.class);
        intent.putExtra("str_edt_name", str_edt_name);
        intent.putExtra("str_age", str_age);
        intent.putExtra("str_edt_phone", str_edt_phone);
        intent.putExtra("str_email", str_email);
        intent.putExtra("str_policyType_spinner", str_policyType_spinner);
        intent.putExtra("str_IndividualTypeEdit", str_IndividualTypeEdit);
        intent.putExtra("strSelfAgeEditText", strSelfAgeEditText);
        intent.putExtra("strGenderSpinner", strGenderSpinner);
        intent.putExtra("strCheckBoxSpouse", strCheckBoxSpouse);
        intent.putExtra("strSpouseAgeEditText", strSpouseAgeEditText);
        intent.putExtra("strCheckBoxMother", strCheckBoxMother);
        intent.putExtra("strMotherAgeEditText", strMotherAgeEditText);
        intent.putExtra("strFatherAgeEditText", strFatherAgeEditText);
        intent.putExtra("strCheckBoxFather", strCheckBoxFather);
        intent.putExtra("strCheckBoxMotherLaw", strCheckBoxMotherLaw);
        intent.putExtra("strMotherLawAgeEditText", strMotherLawAgeEditText);
        intent.putExtra("strCheckBoxFatherLaw", strCheckBoxFatherLaw);
        intent.putExtra("strFatherLawAgeEditText", strFatherLawAgeEditText);
        intent.putExtra("strFirstSonAgeEditText", strFirstSonAgeEditText);
        intent.putExtra("strSecondSonAgeEditText", strSecondSonAgeEditText);
        intent.putExtra("strThirdSonAgeEditText", strThirdSonAgeEditText);
        intent.putExtra("strFourSonAgeEditText", strFourSonAgeEditText);
        intent.putExtra("strCheckBoxSelf", strCheckBoxSelf);
        intent.putExtra("strCheckBoxSon", strCheckBoxSon);
        intent.putExtra("mCounter", mCounter);
        intent.putExtra("FamilyTypeCounter", FamilyTypeCounter);
        intent.putExtra("selectYearAdult", selectYearAdult);
        intent.putExtra("FamilyComposition", FamilyComposition);
        intent.putExtra("ParentComposition", ParentComposition);
        intent.putExtra("PersonalAccidentCategory", PersonalAccidentCategory);
        intent.putExtra("selectFirstYearChild", selectFirstYearChild);
        intent.putExtra("selectSecSonChild", selectSecSonChild);
        intent.putExtra("selectThirdSonChild", selectThirdSonChild);
        intent.putExtra("selectYearChildFour", selectYearChildFour);
        intent.putExtra("selectYearSecondAdult", selectYearSecondAdult);
        intent.putExtra("selectYearAdult", selectYearAdult);
        intent.putExtra("selectYearMotherAdult", selectYearMotherAdult);
        intent.putExtra("selectMotherLawAdult", selectMotherLawAdult);
        intent.putExtra("selectFatherLawAdult", selectFatherLawAdult);
        intent.putExtra("selectYearFatherAdult", selectYearFatherAdult);
        intent.putExtra("strProposerEdtName", strProposerEdtName);
        intent.putExtra("strEmailIDEditSelf",strEmailIDEditSelf);
        intent.putExtra("strPinCodeEdit",strPinCodeEdit);
        intent.putExtra("strCityEdit",strCityEdit);
        intent.putExtra("strStateEdit",strStateEdit);
        intent.putExtra("address1",address1);
        intent.putExtra("address2",address2);
        intent.putExtra("address3",address3);
        intent.putExtra("corresAddress1",corresAddress1);
        intent.putExtra("corresAddress2",corresAddress2);
        intent.putExtra("corresAddress3",corresAddress3);
        intent.putExtra("firstName",firstName);
        intent.putExtra("middleName",middleName);
        intent.putExtra("lastName",lastName);
        intent.putExtra("ckycNo",ckycNo);
        intent.putExtra("uniqueTransactionNumber",uniqueTransactionNumber);
        intent.putExtra("selectYearProposer",selectYearProposer);
        intent.putExtra("strDob",strDob);
        intent.putExtra("permAndCorresAddSame",permAndCorresAddSame);
        intent.putExtra("strIDTypeName",strIDTypeName);
        intent.putExtra("strFor", "1");
        startActivity(intent);
        finish();
    }
    private void alertPopup() {
        Dialog MaternityDialog;
        MaternityDialog = new Dialog(NewCHIAddOns.this);
        MaternityDialog.setCanceledOnTouchOutside(false);
        MaternityDialog.setCancelable(false);
        MaternityDialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
        Objects.requireNonNull(MaternityDialog.getWindow()).setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));
        MaternityDialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;
        MaternityDialog.setContentView(R.layout.newmaternitypopup);
        WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
        lp.copyFrom(MaternityDialog.getWindow().getAttributes());
        lp.width = WindowManager.LayoutParams.MATCH_PARENT;
        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
        lp.gravity = Gravity.CENTER;
        MaternityDialog.show();
        LinearLayout continueButtonMaterntiy = MaternityDialog.findViewById(R.id.continueButtonMaterntiy);
        ImageView cutImg = MaternityDialog.findViewById(R.id.cutImg);
        continueButtonMaterntiy.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                MaternityDialog.dismiss();
            }
        });
        cutImg.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                MaternityDialog.dismiss();

            }
        });
    //        final Dialog alert_dialog = new Dialog(NewCHIAddOns.this);
//        alert_dialog.setCanceledOnTouchOutside(false);
//        alert_dialog.setCancelable(false);
//        alert_dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
//        Objects.requireNonNull(alert_dialog.getWindow()).setBackgroundDrawable(new ColorDrawable(android.graphics.Color.TRANSPARENT));
//        alert_dialog.getWindow().getAttributes().windowAnimations = R.style.DialogAnimation;
//        alert_dialog.setContentView(R.layout.alert_dialog_maternity);
//        WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
//        lp.copyFrom(alert_dialog.getWindow().getAttributes());
//        lp.width = WindowManager.LayoutParams.MATCH_PARENT;
//        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
//        lp.gravity = Gravity.CENTER;
//        TextView ok_dialog, KnowMoreText, alert_heading;
//        KnowMoreText = alert_dialog.findViewById(R.id.KnowMoreText);
//        alert_heading = alert_dialog.findViewById(R.id.alert_heading);
//        ok_dialog = alert_dialog.findViewById(R.id.ok_dialog);
//        KnowMoreText.setOnClickListener(new View.OnClickListener() {
//            @Override
//            public void onClick(View v) {
//                alert_heading.setVisibility(View.VISIBLE);
//                KnowMoreText.setVisibility(View.GONE);
//            }
//        });
//        ok_dialog.setOnClickListener(new View.OnClickListener() {
//            @Override
//            public void onClick(View v) {
//                alert_dialog.dismiss();
//            }
//        });
//        alert_dialog.show();
    }
    private void HealthQuoteAddOn() {
        if (str_policyType_spinner.equals("Individual")) {
            if (strCheckBoxSpouse.equals("Checked")) {
                if (strGenderSpinner.equals("Female")) {
                    strGender = "M";
                }else{
                    strGender = "F";
                }
                strSelfAgeEditText = strSpouseAgeEditText;
            } else if (strCheckBoxMother.equals("Checked")) {
                strGender = "F";
                strSelfAgeEditText = strMotherAgeEditText;
            } else if (strCheckBoxFather.equals("Checked")) {
                strGender = "M";
                strSelfAgeEditText = strFatherAgeEditText;
            } else if (strCheckBoxMotherLaw.equals("Checked")) {
                strGender = "F";
                strSelfAgeEditText = strMotherLawAgeEditText;
            } else if (strCheckBoxFatherLaw.equals("Checked")) {
                strGender = "M";
                strSelfAgeEditText = strFatherLawAgeEditText;
            }
        }
        else {
            if (!(strCheckBoxSelf.equals("Checked")&& strCheckBoxSpouse.equals("Checked"))) {
                if (strCheckBoxSpouse.equals("Checked")) {
                    if (strGenderSpinner.equals("Female")) {
                        strGender = "M";
                    }else{
                        strGender = "F";
                    }
                    strSelfAgeEditText = strSpouseAgeEditText;
                }

            }
        }

        if (str_policyType_spinner.equals("Individual")) {
            if (strGenderSpinner.equals("Female")) {
                if (strCheckBoxSelf.equals("Checked")) {
                    strGender = "F";
                    if (selectYearAdult > 45) {
                        MaternityAndChildcareAddOn = "False";
                        SterilityInfertilityStatus1 = "False";
                    } else {
                        MaternityAndChildcareAddOn = "True";
                        if (PlanType.equals("Plus") || PlanType.equals("Premier") || PlanType.equals("Executive")) {
                            SterilityInfertilityStatus1 = "True";
                        } else {
                            SterilityInfertilityStatus1 = "False";
                        }
                        MaleMaternityAndChildcareAddOn = MaternityAndChildcareAddOn;
                        MaleSterilityInfertilityStatus1 = SterilityInfertilityStatus1;
                    }
                } else if (strCheckBoxSpouse.equals("Checked")) {
                    strGender = "M";
                    SterilityInfertilityStatus1 = "False";
                    MaternityAndChildcareAddOn = "False";
                    MaleMaternityAndChildcareAddOn = MaternityAndChildcareAddOn;
                    MaleSterilityInfertilityStatus1 = SterilityInfertilityStatus1;
                }
            } else {
                if (strCheckBoxSpouse.equals("Checked")) {
                    strGender = "F";
                    if (selectYearSecondAdult > 45) {
                        SterilityInfertilityStatus1 = "False";
                        MaternityAndChildcareAddOn = "False";
                    }else{
                        MaternityAndChildcareAddOn = "True";
                        if (PlanType.equals("Plus") || PlanType.equals("Premier") || PlanType.equals("Executive")) {
                            SterilityInfertilityStatus1 = "True";
                        } else {
                            SterilityInfertilityStatus1 = "False";
                        }
                    }
                }else{
                    strGender = "M";
                    SterilityInfertilityStatus1 = "False";
                    MaternityAndChildcareAddOn = "False";
                }
                MaleMaternityAndChildcareAddOn = MaternityAndChildcareAddOn;
                MaleSterilityInfertilityStatus1 = SterilityInfertilityStatus1;
            }
        }
        else {
            strGender = "M";
            if (strCheckBoxSelf.equals("Checked") && strCheckBoxSpouse.equals("Checked")) {
                if (selectYearAdult < 45 || selectYearSecondAdult < 45) {
                    if (PlanType.equals("Plus") || PlanType.equals("Premier") || PlanType.equals("Executive")) {
                        SterilityInfertilityStatus1 = "True";
                    } else {
                        SterilityInfertilityStatus1 = "False";
                    }
                    if (selectYearSecondAdult > 45) {
                        MaternityAndChildcareAddOn = "False";
                        SterilityInfertilityStatus1 = "False";
                    }else{
                        MaternityAndChildcareAddOn = "True";
                    }
                    MaleMaternityAndChildcareAddOn = "False";
                    MaleSterilityInfertilityStatus1 = "False";
                } else {
                    SterilityInfertilityStatus1 = "False";
                    MaternityAndChildcareAddOn = "False";
                    MaleMaternityAndChildcareAddOn = MaternityAndChildcareAddOn;
                    MaleSterilityInfertilityStatus1 = SterilityInfertilityStatus1;
                }

            }
            else if (strCheckBoxSelf.equals("Checked") || strCheckBoxSpouse.equals("Checked")) {
                if (strGenderSpinner.equals("Male")){
                    if (strCheckBoxSpouse.equals("Checked")){
                        strGender = "F";
                        if (selectYearSecondAdult < 45){
                            if (PlanType.equals("Plus") || PlanType.equals("Premier") || PlanType.equals("Executive")) {
                                SterilityInfertilityStatus1 = "True";
                            } else {
                                SterilityInfertilityStatus1 = "False";
                            }
                            MaternityAndChildcareAddOn = "True";

                        }else{
                            SterilityInfertilityStatus1 = "False";
                            MaternityAndChildcareAddOn = "False";
                        }
                    }else {
                        strGender = "M";
                        SterilityInfertilityStatus1 = "False";
                        MaternityAndChildcareAddOn = "False";
                    }
               }else{
                    if (strCheckBoxSpouse.equals("Checked")){
                        strGender = "M";
                        SterilityInfertilityStatus1 = "False";
                        MaternityAndChildcareAddOn = "False";
                    }else{
                        strGender = "F";
                        if (selectYearAdult < 45){
                            if (PlanType.equals("Plus") || PlanType.equals("Premier") || PlanType.equals("Executive")) {
                                SterilityInfertilityStatus1 = "True";
                            } else {
                                SterilityInfertilityStatus1 = "False";
                            }
                            MaternityAndChildcareAddOn = "True";
                        } else{
                            SterilityInfertilityStatus1 = "False";
                            MaternityAndChildcareAddOn = "False";
                        }

                    }

//                  if (selectYearAdult < 45 || selectYearSecondAdult < 45) {
//                      if (PlanType.equals("Plus") || PlanType.equals("Premier") || PlanType.equals("Executive")) {
//                        SterilityInfertilityStatus1 = "True";
//                    } else {
//                        SterilityInfertilityStatus1 = "False";
//                    }
//                    MaternityAndChildcareAddOn = "True";
//                  } else {
//                    SterilityInfertilityStatus1 = "False";
//                    MaternityAndChildcareAddOn = "False";
//                 }
                }
                MaleMaternityAndChildcareAddOn = MaternityAndChildcareAddOn;
                MaleSterilityInfertilityStatus1 = SterilityInfertilityStatus1;
            }

        }

        if (strCheckBoxSelf.equals("Checked") && strCheckBoxSpouse.equals("Checked")) {
            str_policyType_spinner1 = str_policyType_spinner;
        }
        else {
            if (strCheckBoxSelf.equals("Checked") || strCheckBoxSpouse.equals("Checked")) {
                if (strCheckBoxMother.equals("Checked") && strCheckBoxFather.equals("Checked")) {
                    str_policyType_spinner1 = "Family Floater";
                }else if(strCheckBoxMotherLaw.equals("Checked") && strCheckBoxFatherLaw.equals("Checked")){
                    str_policyType_spinner1 = "Family Floater";
                }else if (strCheckBoxMother.equals("Checked") || strCheckBoxFather.equals("Checked") || strCheckBoxMotherLaw.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                    str_policyType_spinner1 = "Individual";
                } else {
                    str_policyType_spinner1 = str_policyType_spinner;
                }
            } else {
                str_policyType_spinner1 = str_policyType_spinner;
            }
        }

        if (PlanType.equals("Essential") || PlanType.equals("Privilege")) {
            BasicStatus = "True";
            PersonalStatus1 = "True";
            CriticalStatus1 = "True";
            DailyHospitalSatus1 = "True";
            ModernTreatmentsStatus1 = "True";
            ExtensionPreHospitalization1 = "True";
            ExtensionPr0Hospitalization1 = "True";
            CoverageNonMedical1 = "True";
            ConditionWaiverStatus1 = "True";
            PersonalAccidentACoverStatus1 = "True";
            PersonalAccidentBCoverStatus1 = "True";
            PreExistingDiseaseStatus1 = "True";
            OutpatientDentalStatus1 = "True";
            EmergencyTravellingStatus1 = "True";
            SecondOpinionStatus1 = "True";
            RestCureStatus1 = "True";
            ObesityWeightStatus1 = "True";
            EnhancedOrganStatus1 = "True";
            PremiumWaiverStatus1 = "True";
            GlobalCoverStatus1 = "False";
            MedicallyAdvisedStatus1 = "True";
            EmergencyAssistanceStatus1 = "True";
            HomeCareStatus1 = "True";
            WellnessBenefitStatus1 = "True";
            DiseaseManagementStatus1 = "True";
            strPackageOne = "True";
        }
        else if (PlanType.equals("Plus") || PlanType.equals("Premier") || PlanType.equals("Executive")) {
            BasicStatus = "True";
            PersonalStatus1 = "True";
            CriticalStatus1 = "True";
            DailyHospitalSatus1 = "True";
            ModernTreatmentsStatus1 = "True";
            ExtensionPreHospitalization1 = "True";
            ExtensionPr0Hospitalization1 = "True";
            CoverageNonMedical1 = "True";
            ConditionWaiverStatus1 = "True";
            PersonalAccidentACoverStatus1 = "False";
            PersonalAccidentBCoverStatus1 = "True";
            PreExistingDiseaseStatus1 = "True";
            OutpatientDentalStatus1 = "True";
            EmergencyTravellingStatus1 = "True";
            SecondOpinionStatus1 = "True";
            RestCureStatus1 = "True";
            ObesityWeightStatus1 = "True";
            EnhancedOrganStatus1 = "True";
            PremiumWaiverStatus1 = "True";
            GlobalCoverStatus1 = "True";
            MedicallyAdvisedStatus1 = "True";
            EmergencyAssistanceStatus1 = "True";
            HomeCareStatus1 = "True";
            WellnessBenefitStatus1 = "True";
            DiseaseManagementStatus1 = "True";
            strPackageOne = "True";
        }
        else if (PlanType.equals("Digi-Pro")) {
            BasicStatus = "True";
            PersonalStatus1 = "False";
            PersonalStatusChildFour1 = "False";
            PersonalStatusChildThird1 = "False";
            PersonalStatusChildTwo1 = "False";
            PersonalStatusChildOne1 = "False";
            CriticalStatus1 = "False";
            DailyHospitalSatus1 = "False";
            MaternityAndChildcareAddOn = "False";
            ExtensionPreHospitalization1 = "False";
            ExtensionPr0Hospitalization1 = "False";
            CoverageNonMedical1 = "False";
            ConditionWaiverStatus1 = "False";
            PersonalAccidentACoverStatus1 = "False";
            PersonalAccidentBCoverStatus1 = "False";
            OutpatientDentalStatus1 = "False";
            EmergencyTravellingStatus1 = "False";
            SecondOpinionStatus1 = "False";
            RestCureStatus1 = "False";
            ObesityWeightStatus1 = "False";
            EnhancedOrganStatus1 = "False";
            PremiumWaiverStatus1 = "False";
            GlobalCoverStatus1 = "False";
            MedicallyAdvisedStatus1 = "False";
            HomeCareStatus1 = "False";
            WellnessBenefitStatus1 = "True";
            DiseaseManagementStatus1 = "True";
            EmergencyAssistanceStatus1 = "True";
            PreExistingDiseaseStatus1 = "True";
            ModernTreatmentsStatus1 = "True";

        }
        JSONObject object = new JSONObject();
        try {
            JSONObject RootObject = new JSONObject();
            //Authentication
            JSONObject AuthenticationObject = new JSONObject();
//            AuthenticationObject.put("WACode", "20000001");
//            AuthenticationObject.put("WAAppCode", "30000011");
            AuthenticationObject.put("WACode","20000149");
            AuthenticationObject.put("WAAppCode","30000149");
            AuthenticationObject.put("WAUserID", "USER01");
            AuthenticationObject.put("WAUserPwd", "pass@123");
            AuthenticationObject.put("WAType", "0");
            RootObject.put("Authentication", AuthenticationObject);
            //Customer
            JSONObject CustomerObject = new JSONObject();
            CustomerObject.put("CustomerType", "");
            CustomerObject.put("CustomerName", "");
            CustomerObject.put("DOB", "");
            CustomerObject.put("Gender", "");
            CustomerObject.put("CanBeParent", "");
            CustomerObject.put("ContactTelephoneSTD", "");
            CustomerObject.put("MobileNo", "");
            CustomerObject.put("Emailid", "");
            CustomerObject.put("PresentAddressLine1", "");
            CustomerObject.put("PresentAddressLine2", "");
            CustomerObject.put("PresentStateCode", "");
            CustomerObject.put("PresentCityDistCode", "");
            CustomerObject.put("PresentPinCode", "");
            CustomerObject.put("PermanentAddressLine1", "");
            CustomerObject.put("PermanentAddressLine2", "");
            CustomerObject.put("PermanentStateCode", "");
            CustomerObject.put("PermanentCityDistCode", "");
            CustomerObject.put("PermanentPinCode", "");
            CustomerObject.put("CustGSTNo", "NULL");
            CustomerObject.put("ProductName", "Complete HealthCare Insurance");
            CustomerObject.put("InstrumentNo", "NULL");
            CustomerObject.put("InstrumentDate", "NULL");
            CustomerObject.put("BankID", "NULL");
            CustomerObject.put("PosPolicyNo", "");
            CustomerObject.put("ProductCode", "2825");
            CustomerObject.put("WAURN", "NULL");
            CustomerObject.put("NomineeName", "");
            CustomerObject.put("NomineeRelation", "");
            CustomerObject.put("PANNo", "NULL");
            CustomerObject.put("AadhaarNo", "");
            CustomerObject.put("EIA", "NULL");
            CustomerObject.put("CKYCNo", "");
            CustomerObject.put("Ref_No_Unique_KYC", "");
            RootObject.put("Customer", CustomerObject);
            //POSAGENT
            JSONObject POSAGENTObject = new JSONObject();
            POSAGENTObject.put("Name", "NULL");
            POSAGENTObject.put("PAN", "NULL");
            POSAGENTObject.put("Aadhar", "NULL");
            POSAGENTObject.put("Email", "NULL");
            POSAGENTObject.put("MobileNo", "NULL");
//            POSAGENTObject.put("Location", "NULL");
            POSAGENTObject.put("Location", "MUMBAI CORPORATE OFFICE");
            POSAGENTObject.put("Information1", "NULL");
            POSAGENTObject.put("Information2", "NULL");
            RootObject.put("POSAGENT", POSAGENTObject);

            JSONObject ProductObject = new JSONObject();
            JSONObject GeneralProposalObject = new JSONObject();
            JSONObject GeneralProposalGroupObject = new JSONObject();
            JSONObject DistributionChannelObject = new JSONObject();
            //Branch
            JSONObject BranchDetailsObject = new JSONObject();

            BranchDetailsObject.put("IMDBranchName", "NULL");
            BranchDetailsObject.put("IMDBranchCode", "NULL");
            DistributionChannelObject.put("BranchDetails", BranchDetailsObject);
            //SpDetails
            JSONObject SPDetailsObject = new JSONObject();
            SPDetailsObject.put("SPName", "NULL");
            SPDetailsObject.put("SPCode", "NULL");
            DistributionChannelObject.put("SPDetails", SPDetailsObject);
            GeneralProposalGroupObject.put("DistributionChannel", DistributionChannelObject);

            //GeneralProposalInformation
            JSONObject GeneralProposalInformationObject = new JSONObject();
            GeneralProposalInformationObject.put("TypeOfBusiness", "");
            GeneralProposalInformationObject.put("ServiceTaxExemptionCategory", "");
            GeneralProposalInformationObject.put("BusinessType", "New");
            GeneralProposalInformationObject.put("Sector", "");
            GeneralProposalInformationObject.put("DealId", "INTR-2312-0019722");
            GeneralProposalInformationObject.put("PolicyType", str_policyType_spinner1);
            GeneralProposalInformationObject.put("FamilyComposition", FamilyComposition);
            GeneralProposalInformationObject.put("ParentComposition", ParentComposition);
            GeneralProposalInformationObject.put("PlanType", PlanType);
            GeneralProposalInformationObject.put("ProposalDate", today);
            GeneralProposalInformationObject.put("PolicyDuration", strPolicyTenure);
            GeneralProposalInformationObject.put("PolicyNumberChar", "NULL");
            //PolicyEffectiveDate
            JSONObject PolicyEffectiveDateObject = new JSONObject();
            PolicyEffectiveDateObject.put("Fromdate", today);
            PolicyEffectiveDateObject.put("Todate", nextYear);
            PolicyEffectiveDateObject.put("Fromhour", "00:01");
            PolicyEffectiveDateObject.put("Tohour", "23:59");
            GeneralProposalInformationObject.put("PolicyEffectiveDate", PolicyEffectiveDateObject);

            GeneralProposalInformationObject.put("SubCategory", "A");
            GeneralProposalInformationObject.put("EmployeeCode", "");
            GeneralProposalInformationObject.put("ExsistingPolicyNumber", strPolicyNumber);
            GeneralProposalInformationObject.put("PersonalAccidentCategory", "A");
            GeneralProposalInformationObject.put("CoPaymentLoading", "10");
            GeneralProposalInformationObject.put("RequestType", "Quotation");
            GeneralProposalGroupObject.put("GeneralProposalInformation", GeneralProposalInformationObject);
            GeneralProposalObject.put("GeneralProposalGroup", GeneralProposalGroupObject);

            //FinancierDetails
            JSONObject FinancierDetailsObject = new JSONObject();
            JSONObject FinancierDtlGrpObject = new JSONObject();
            JSONObject FinancierDtlGrpDataObject = new JSONObject();
            FinancierDtlGrpDataObject.put("FinancierCode", "NULL");
            FinancierDtlGrpDataObject.put("AgreementType", "NULL");
            FinancierDtlGrpDataObject.put("BranchName", "NULL");
            FinancierDtlGrpDataObject.put("FinancierName", "NULL");
            FinancierDtlGrpDataObject.put("SrNo", "NULL");
            FinancierDtlGrpObject.put("FinancierDtlGrpData", FinancierDtlGrpDataObject);
            FinancierDetailsObject.put("FinancierDtlGrp", FinancierDtlGrpObject);
            GeneralProposalObject.put("FinancierDetails", FinancierDetailsObject);

            //PreviousPolicyDetails
            JSONObject PreviousPolicyDetailsObject = new JSONObject();
            JSONObject PreviousPolDtlGroupObject = new JSONObject();
            JSONObject PreviousPolDtlGroupDataObject = new JSONObject();
            PreviousPolDtlGroupDataObject.put("ProductCode", "NULL");
            PreviousPolDtlGroupDataObject.put("ClaimSettled", "NULL");
            PreviousPolDtlGroupDataObject.put("ClaimPremium", "0");
            PreviousPolDtlGroupDataObject.put("ClaimAmount", "0");
            PreviousPolDtlGroupDataObject.put("DateofLoss", "NULL");
            PreviousPolDtlGroupDataObject.put("NatureofLoss", "NULL");
            PreviousPolDtlGroupDataObject.put("ClaimNo", "");
            PreviousPolDtlGroupDataObject.put("PolicyEffectiveTo", "");
            PreviousPolDtlGroupDataObject.put("PolicyEffectiveFrom", "");
            PreviousPolDtlGroupDataObject.put("PolicyPremium", "0");
            PreviousPolDtlGroupDataObject.put("PolicyNo", "NULL");
            PreviousPolDtlGroupDataObject.put("PolicyYear", "NULL");
            PreviousPolDtlGroupDataObject.put("OfficeCode", "NULL");
            PreviousPolDtlGroupDataObject.put("CorporateCustomerId", "NULL");
            PreviousPolDtlGroupDataObject.put("InsurerName", "NULL");
            PreviousPolDtlGroupDataObject.put("InsurerAddress", "NULL");
            PreviousPolDtlGroupObject.put("PreviousPolDtlGroupData", PreviousPolDtlGroupDataObject);
            PreviousPolicyDetailsObject.put("PreviousPolDtlGroup", PreviousPolDtlGroupObject);
            PreviousPolicyDetailsObject.put("PreviousPolicyType", "Package Policy");
            PreviousPolicyDetailsObject.put("OfficeAddress", "NULL");
            GeneralProposalObject.put("PreviousPolicyDetails", PreviousPolicyDetailsObject);
            ProductObject.put("GeneralProposal", GeneralProposalObject);

            //PremiumCalculation
            JSONObject PremiumCalculationObject = new JSONObject();
            PremiumCalculationObject.put("NetPremium", "0");
            PremiumCalculationObject.put("ServiceTax", "0");
            PremiumCalculationObject.put("StampDuty2", "0");
            PremiumCalculationObject.put("TotalPremium", "0");
            PremiumCalculationObject.put("CGST", "0");
            PremiumCalculationObject.put("SGST", "");
            PremiumCalculationObject.put("UGST", "0");
            PremiumCalculationObject.put("IGST", "0");
            ProductObject.put("PremiumCalculation", PremiumCalculationObject);
//            ProductObject.put("PremiumCalculation",PremiumCalculationObject);
//            ProductObject.put("PremiumCalculation",GeneralProposalObject);

            //Risks
            JSONObject RisksObject = new JSONObject();
            JSONObject RiskObject = new JSONObject();
            JSONObject RisksDataObject = new JSONObject();
            JSONObject InsuredDetailsObject = new JSONObject();
            JSONArray InsuredDetailsGroupArray = new JSONArray();
            //Self
            JSONObject InsuredDetailsObj = new JSONObject();
            InsuredDetailsObj.put("InsuredType", "Adult");
            InsuredDetailsObj.put("FirstName", "");
            InsuredDetailsObj.put("LastName", "");
            InsuredDetailsObj.put("DOB", strSelfAgeEditText);
            InsuredDetailsObj.put("Gender", strGender);
            InsuredDetailsObj.put("Relationship", "Self");
            InsuredDetailsObj.put("Occupation", "");
            InsuredDetailsObj.put("NomineeName", "");
            InsuredDetailsObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsObj = new JSONObject();
            HealthIndicatorsObj.put("PED", "N");
            HealthIndicatorsObj.put("PEDDeclared", "N");
            HealthIndicatorsObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsObj.put("CholesterolLevel", "NA");
            HealthIndicatorsObj.put("BodyMassIndex", "30");
            HealthIndicatorsObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsObj.put("CoMorbidity", "N");
            InsuredDetailsObj.put("HealthIndicators", HealthIndicatorsObj);

            JSONObject CoverDetailsObj = new JSONObject();
            JSONArray CoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversObj = new JSONObject();
            BasicInsuranceCoversObj.put("Applicable", "True");
            BasicInsuranceCoversObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversObj.put("CoverRate", "0");
            BasicInsuranceCoversObj.put("CoverPremium", "0");
            BasicInsuranceCoversObj.put("CoverGroups", "Basic Insurance Cover");
            CoversArray.put(BasicInsuranceCoversObj);

            JSONObject PersonalAccidentCoversObj = new JSONObject();
            PersonalAccidentCoversObj.put("Applicable", PersonalStatus1);
            PersonalAccidentCoversObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversObj.put("CoverRate", "0");
            PersonalAccidentCoversObj.put("CoverPremium", "0");
            PersonalAccidentCoversObj.put("CoverGroups", "Personal Accident Cover");
            CoversArray.put(PersonalAccidentCoversObj);

            JSONObject CriticalIllnessCoversObj = new JSONObject();
            CriticalIllnessCoversObj.put("Applicable", CriticalStatus1);
            CriticalIllnessCoversObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversObj.put("CoverRate", "0");
            CriticalIllnessCoversObj.put("CoverPremium", "0");
            CriticalIllnessCoversObj.put("CoverGroups", "Critical Illness Cover");
            CoversArray.put(CriticalIllnessCoversObj);


            JSONObject DailyHospitalCoversObj = new JSONObject();
            DailyHospitalCoversObj.put("Applicable", DailyHospitalSatus1);
            DailyHospitalCoversObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversObj.put("CoverRate", "0");
            DailyHospitalCoversObj.put("CoverPremium", "0");
            DailyHospitalCoversObj.put("CoverGroups", "Daily Hospital Cash Cover");
            CoversArray.put(DailyHospitalCoversObj);

            JSONObject ModernCoversObj = new JSONObject();
            ModernCoversObj.put("Applicable", ModernTreatmentsStatus1);
            ModernCoversObj.put("CoverSI", strSumInsured);
            ModernCoversObj.put("CoverRate", "0");
            ModernCoversObj.put("CoverPremium", "0");
            ModernCoversObj.put("CoverGroups", "Modern Treatments");
            CoversArray.put(ModernCoversObj);
            JSONObject ExtensionPreHospitalizationCoversObj = new JSONObject();
            ExtensionPreHospitalizationCoversObj.put("Applicable", ExtensionPreHospitalization1);
            ExtensionPreHospitalizationCoversObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            CoversArray.put(ExtensionPreHospitalizationCoversObj);

            JSONObject ExtensionPostHospitalizationCoversObj = new JSONObject();
            ExtensionPostHospitalizationCoversObj.put("Applicable", ExtensionPr0Hospitalization1);
            ExtensionPostHospitalizationCoversObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversObj.put("CoverGroups", "Extension under Post-Hospitalization");
            CoversArray.put(ExtensionPostHospitalizationCoversObj);


            JSONObject MaternityAndChildcareCoversObj = new JSONObject();
            MaternityAndChildcareCoversObj.put("Applicable", MaleMaternityAndChildcareAddOn);
            MaternityAndChildcareCoversObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversObj.put("CoverRate", "0");
            MaternityAndChildcareCoversObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            CoversArray.put(MaternityAndChildcareCoversObj);

            JSONObject CoverageForNonMedicalCoversObj = new JSONObject();
            CoverageForNonMedicalCoversObj.put("Applicable", CoverageNonMedical1);
            CoverageForNonMedicalCoversObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversObj.put("CoverGroups", "Coverage for Non-Medical Items");
            CoversArray.put(CoverageForNonMedicalCoversObj);

            JSONObject ConditionWaiverCoversObj = new JSONObject();
            ConditionWaiverCoversObj.put("Applicable", ConditionWaiverStatus1);
            ConditionWaiverCoversObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversObj.put("CoverRate", "0");
            ConditionWaiverCoversObj.put("CoverPremium", "0");
            ConditionWaiverCoversObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            CoversArray.put(ConditionWaiverCoversObj);


            JSONObject PreExistingDiseaseCoversObj = new JSONObject();
            PreExistingDiseaseCoversObj.put("Applicable", PreExistingDiseaseStatus1);
            PreExistingDiseaseCoversObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversObj.put("CoverRate", "0");
            PreExistingDiseaseCoversObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            CoversArray.put(PreExistingDiseaseCoversObj);

            JSONObject OutpatientDentalWaitingCoversObj = new JSONObject();
            OutpatientDentalWaitingCoversObj.put("Applicable", OutpatientDentalStatus1);
            OutpatientDentalWaitingCoversObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            CoversArray.put(OutpatientDentalWaitingCoversObj);

            JSONObject EmergencyTravellingAllowanceCoversObj = new JSONObject();
            EmergencyTravellingAllowanceCoversObj.put("Applicable", EmergencyTravellingStatus1);
            EmergencyTravellingAllowanceCoversObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversObj.put("CoverGroups", "Emergency Travelling Allowance");
            CoversArray.put(EmergencyTravellingAllowanceCoversObj);

            JSONObject SecondOpinionCoversObj = new JSONObject();
            SecondOpinionCoversObj.put("Applicable", SecondOpinionStatus1);
            SecondOpinionCoversObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversObj.put("CoverRate", "0");
            SecondOpinionCoversObj.put("CoverPremium", "0");
            SecondOpinionCoversObj.put("CoverGroups", "Second Opinion");
            CoversArray.put(SecondOpinionCoversObj);

            JSONObject RestCureCoversObj = new JSONObject();
            RestCureCoversObj.put("Applicable", RestCureStatus1);
            RestCureCoversObj.put("CoverSI", strSumInsured);
            RestCureCoversObj.put("CoverRate", "0");
            RestCureCoversObj.put("CoverPremium", "0");
            RestCureCoversObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            CoversArray.put(RestCureCoversObj);

            JSONObject ObesityWeightCoversObj = new JSONObject();
            ObesityWeightCoversObj.put("Applicable", ObesityWeightStatus1);
            ObesityWeightCoversObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversObj.put("CoverRate", "0");
            ObesityWeightCoversObj.put("CoverPremium", "0");
            ObesityWeightCoversObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            CoversArray.put(ObesityWeightCoversObj);

            JSONObject SterilityInfertilityCoversObj = new JSONObject();
            SterilityInfertilityCoversObj.put("Applicable", MaleSterilityInfertilityStatus1);
            SterilityInfertilityCoversObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversObj.put("CoverRate", "0");
            SterilityInfertilityCoversObj.put("CoverPremium", "0");
            SterilityInfertilityCoversObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            CoversArray.put(SterilityInfertilityCoversObj);

            JSONObject EnhancedOrganDonorCoversObj = new JSONObject();
            EnhancedOrganDonorCoversObj.put("Applicable", EnhancedOrganStatus1);
            EnhancedOrganDonorCoversObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            CoversArray.put(EnhancedOrganDonorCoversObj);

            JSONObject PremiumWaiverCoversObj = new JSONObject();
            PremiumWaiverCoversObj.put("Applicable", PremiumWaiverStatus1);
            PremiumWaiverCoversObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversObj.put("CoverRate", "0");
            PremiumWaiverCoversObj.put("CoverPremium", "0");
            PremiumWaiverCoversObj.put("CoverGroups", "Premium Waiver");
            CoversArray.put(PremiumWaiverCoversObj);

            JSONObject GlobalCoversObj = new JSONObject();
            GlobalCoversObj.put("Applicable", GlobalCoverStatus1);
            GlobalCoversObj.put("CoverSI", strSumInsured);
            GlobalCoversObj.put("CoverRate", "0");
            GlobalCoversObj.put("CoverPremium", "0");
            GlobalCoversObj.put("CoverGroups", "Global Cover");
            CoversArray.put(GlobalCoversObj);


            JSONObject MedicallyAdvisedCoversObj = new JSONObject();
            MedicallyAdvisedCoversObj.put("Applicable", MedicallyAdvisedStatus1);
            MedicallyAdvisedCoversObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversObj.put("CoverRate", "0");
            MedicallyAdvisedCoversObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversObj.put("CoverGroups", "Medically Advised Support Devices");
            CoversArray.put(MedicallyAdvisedCoversObj);

            JSONObject EmergencyCoversObj = new JSONObject();
            EmergencyCoversObj.put("Applicable", EmergencyAssistanceStatus1);
            EmergencyCoversObj.put("CoverSI", strSumInsured);
            EmergencyCoversObj.put("CoverRate", "0");
            EmergencyCoversObj.put("CoverPremium", "0");
            EmergencyCoversObj.put("CoverGroups", "Emergency Assistance Service");
            CoversArray.put(EmergencyCoversObj);

            JSONObject HomeCareTreatmentCoversObj = new JSONObject();
            HomeCareTreatmentCoversObj.put("Applicable", HomeCareStatus1);
            HomeCareTreatmentCoversObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversObj.put("CoverRate", "0");
            HomeCareTreatmentCoversObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversObj.put("CoverGroups", "Home Care Treatment");
            CoversArray.put(HomeCareTreatmentCoversObj);

            JSONObject WellnessBenefitCoversObj = new JSONObject();
            WellnessBenefitCoversObj.put("Applicable", WellnessBenefitStatus1);
            WellnessBenefitCoversObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversObj.put("CoverRate", "0");
            WellnessBenefitCoversObj.put("CoverPremium", "0");
            WellnessBenefitCoversObj.put("CoverGroups", "Wellness Benefit");
            CoversArray.put(WellnessBenefitCoversObj);

            JSONObject DiseaseManagementCoversObj = new JSONObject();
            DiseaseManagementCoversObj.put("Applicable", DiseaseManagementStatus1);
            DiseaseManagementCoversObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversObj.put("CoverRate", "0");
            DiseaseManagementCoversObj.put("CoverPremium", "0");
            DiseaseManagementCoversObj.put("CoverGroups", "Disease Management Program");
            CoversArray.put(DiseaseManagementCoversObj);
            CoverDetailsObj.put("Covers", CoversArray);
            InsuredDetailsObj.put("CoverDetails", CoverDetailsObj);

            //2nd Adult
            JSONObject SecondAdultObj = new JSONObject();
            SecondAdultObj.put("InsuredType", "Adult");
            SecondAdultObj.put("FirstName", "");
            SecondAdultObj.put("LastName", "");
            SecondAdultObj.put("DOB", strSpouseAgeEditText);
            SecondAdultObj.put("Gender", "F");
            SecondAdultObj.put("Relationship", "Spouse");
            SecondAdultObj.put("Occupation", "");
            SecondAdultObj.put("NomineeName", "");
            SecondAdultObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsSecondObj = new JSONObject();
            HealthIndicatorsSecondObj.put("PED", "N");
            HealthIndicatorsSecondObj.put("PEDDeclared", "N");
            HealthIndicatorsSecondObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsSecondObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsSecondObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsSecondObj.put("CholesterolLevel", "NA");
            HealthIndicatorsSecondObj.put("BodyMassIndex", "30");
            HealthIndicatorsSecondObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsSecondObj.put("CoMorbidity", "N");
            SecondAdultObj.put("HealthIndicators", HealthIndicatorsSecondObj);

            JSONObject CoverDetailsSecondObj = new JSONObject();
            JSONArray SecondAdultCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversAdultSecObj = new JSONObject();
            BasicInsuranceCoversAdultSecObj.put("Applicable", "True");
            BasicInsuranceCoversAdultSecObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversAdultSecObj.put("CoverRate", "0");
            BasicInsuranceCoversAdultSecObj.put("CoverPremium", "0");
            BasicInsuranceCoversAdultSecObj.put("CoverGroups", "Basic Insurance Cover");
            SecondAdultCoversArray.put(BasicInsuranceCoversAdultSecObj);

            JSONObject PersonalAccidentCoversSecondAdultObj = new JSONObject();
            PersonalAccidentCoversSecondAdultObj.put("Applicable", PersonalStatus1);
            PersonalAccidentCoversSecondAdultObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversSecondAdultObj.put("CoverRate", "0");
            PersonalAccidentCoversSecondAdultObj.put("CoverPremium", "0");
            PersonalAccidentCoversSecondAdultObj.put("CoverGroups", "Personal Accident Cover");
            SecondAdultCoversArray.put(PersonalAccidentCoversSecondAdultObj);

            JSONObject CriticalIllnessCoversSecondAdultObj = new JSONObject();
            CriticalIllnessCoversSecondAdultObj.put("Applicable", CriticalStatus1);
            CriticalIllnessCoversSecondAdultObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversSecondAdultObj.put("CoverRate", "0");
            CriticalIllnessCoversSecondAdultObj.put("CoverPremium", "0");
            CriticalIllnessCoversSecondAdultObj.put("CoverGroups", "Critical Illness Cover");
            SecondAdultCoversArray.put(CriticalIllnessCoversSecondAdultObj);


            JSONObject DailyHospitalCoversSecondAdultObj = new JSONObject();
            DailyHospitalCoversSecondAdultObj.put("Applicable", DailyHospitalSatus1);
            DailyHospitalCoversSecondAdultObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversSecondAdultObj.put("CoverRate", "0");
            DailyHospitalCoversSecondAdultObj.put("CoverPremium", "0");
            DailyHospitalCoversSecondAdultObj.put("CoverGroups", "Daily Hospital Cash Cover");
            SecondAdultCoversArray.put(DailyHospitalCoversSecondAdultObj);

            JSONObject ModernCoversSecondAdultObj = new JSONObject();
            ModernCoversSecondAdultObj.put("Applicable", ModernTreatmentsStatus1);
            ModernCoversSecondAdultObj.put("CoverSI", strSumInsured);
            ModernCoversSecondAdultObj.put("CoverRate", "0");
            ModernCoversSecondAdultObj.put("CoverPremium", "0");
            ModernCoversSecondAdultObj.put("CoverGroups", "Modern Treatments");
            SecondAdultCoversArray.put(ModernCoversSecondAdultObj);
            JSONObject ExtensionPreHospitalizationCoversSecondAdultObj = new JSONObject();
            ExtensionPreHospitalizationCoversSecondAdultObj.put("Applicable", ExtensionPreHospitalization1);
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            SecondAdultCoversArray.put(ExtensionPreHospitalizationCoversSecondAdultObj);

            JSONObject ExtensionPostHospitalizationCoversSecondAdultObj = new JSONObject();
            ExtensionPostHospitalizationCoversSecondAdultObj.put("Applicable", ExtensionPr0Hospitalization1);
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverGroups", "Extension under Post-Hospitalization");
            SecondAdultCoversArray.put(ExtensionPostHospitalizationCoversSecondAdultObj);


            JSONObject MaternityAndChildcareCoversSecAdultObj = new JSONObject();
            MaternityAndChildcareCoversSecAdultObj.put("Applicable", MaternityAndChildcareAddOn);
            MaternityAndChildcareCoversSecAdultObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversSecAdultObj.put("CoverRate", "0");
            MaternityAndChildcareCoversSecAdultObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversSecAdultObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            SecondAdultCoversArray.put(MaternityAndChildcareCoversSecAdultObj);

            JSONObject CoverageForNonMedicalCoversSecAdultObj = new JSONObject();
            CoverageForNonMedicalCoversSecAdultObj.put("Applicable", CoverageNonMedical1);
            CoverageForNonMedicalCoversSecAdultObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversSecAdultObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversSecAdultObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversSecAdultObj.put("CoverGroups", "Coverage for Non-Medical Items");
            SecondAdultCoversArray.put(CoverageForNonMedicalCoversSecAdultObj);

            JSONObject ConditionWaiverCoversSecAdultObj = new JSONObject();
            ConditionWaiverCoversSecAdultObj.put("Applicable", ConditionWaiverStatus1);
            ConditionWaiverCoversSecAdultObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversSecAdultObj.put("CoverRate", "0");
            ConditionWaiverCoversSecAdultObj.put("CoverPremium", "0");
            ConditionWaiverCoversSecAdultObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            SecondAdultCoversArray.put(ConditionWaiverCoversSecAdultObj);

            JSONObject PreExistingDiseaseCoversSecAdultObj = new JSONObject();
            PreExistingDiseaseCoversSecAdultObj.put("Applicable", PreExistingDiseaseStatus1);
            PreExistingDiseaseCoversSecAdultObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversSecAdultObj.put("CoverRate", "0");
            PreExistingDiseaseCoversSecAdultObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversSecAdultObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            SecondAdultCoversArray.put(PreExistingDiseaseCoversSecAdultObj);

            JSONObject OutpatientDentalWaitingCoversSecAdultObj = new JSONObject();
            OutpatientDentalWaitingCoversSecAdultObj.put("Applicable", OutpatientDentalStatus1);
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            SecondAdultCoversArray.put(OutpatientDentalWaitingCoversSecAdultObj);

            JSONObject EmergencyTravellingAllowanceCoversSecAdultObj = new JSONObject();
            EmergencyTravellingAllowanceCoversSecAdultObj.put("Applicable", EmergencyTravellingStatus1);
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverGroups", "Emergency Travelling Allowance");
            SecondAdultCoversArray.put(EmergencyTravellingAllowanceCoversSecAdultObj);

            JSONObject SecondOpinionCoversSecAdultObj = new JSONObject();
            SecondOpinionCoversSecAdultObj.put("Applicable", SecondOpinionStatus1);
            SecondOpinionCoversSecAdultObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversSecAdultObj.put("CoverRate", "0");
            SecondOpinionCoversSecAdultObj.put("CoverPremium", "0");
            SecondOpinionCoversSecAdultObj.put("CoverGroups", "Second Opinion");
            SecondAdultCoversArray.put(SecondOpinionCoversSecAdultObj);

            JSONObject RestCureCoversSecAdultObj = new JSONObject();
            RestCureCoversSecAdultObj.put("Applicable", RestCureStatus1);
            RestCureCoversSecAdultObj.put("CoverSI", strSumInsured);
            RestCureCoversSecAdultObj.put("CoverRate", "0");
            RestCureCoversSecAdultObj.put("CoverPremium", "0");
            RestCureCoversSecAdultObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            SecondAdultCoversArray.put(RestCureCoversSecAdultObj);

            JSONObject ObesityWeightCoversSecAdultObj = new JSONObject();
            ObesityWeightCoversSecAdultObj.put("Applicable", ObesityWeightStatus1);
            ObesityWeightCoversSecAdultObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversSecAdultObj.put("CoverRate", "0");
            ObesityWeightCoversSecAdultObj.put("CoverPremium", "0");
            ObesityWeightCoversSecAdultObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            SecondAdultCoversArray.put(ObesityWeightCoversSecAdultObj);

            JSONObject SterilityInfertilityCoversSecAdultObj = new JSONObject();
            SterilityInfertilityCoversSecAdultObj.put("Applicable", SterilityInfertilityStatus1);
            SterilityInfertilityCoversSecAdultObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversSecAdultObj.put("CoverRate", "0");
            SterilityInfertilityCoversSecAdultObj.put("CoverPremium", "0");
            SterilityInfertilityCoversSecAdultObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            SecondAdultCoversArray.put(SterilityInfertilityCoversSecAdultObj);

            JSONObject EnhancedOrganDonorCoversSecAdultObj = new JSONObject();
            EnhancedOrganDonorCoversSecAdultObj.put("Applicable", EnhancedOrganStatus1);
            EnhancedOrganDonorCoversSecAdultObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversSecAdultObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversSecAdultObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversSecAdultObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            SecondAdultCoversArray.put(EnhancedOrganDonorCoversSecAdultObj);

            JSONObject PremiumWaiverCoversSecAdultObj = new JSONObject();
            PremiumWaiverCoversSecAdultObj.put("Applicable", PremiumWaiverStatus1);
            PremiumWaiverCoversSecAdultObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversSecAdultObj.put("CoverRate", "0");
            PremiumWaiverCoversSecAdultObj.put("CoverPremium", "0");
            PremiumWaiverCoversSecAdultObj.put("CoverGroups", "Premium Waiver");
            SecondAdultCoversArray.put(PremiumWaiverCoversSecAdultObj);

            JSONObject GlobalCoversSecAdultObj = new JSONObject();
            GlobalCoversSecAdultObj.put("Applicable", GlobalCoverStatus1);
            GlobalCoversSecAdultObj.put("CoverSI", strSumInsured);
            GlobalCoversSecAdultObj.put("CoverRate", "0");
            GlobalCoversSecAdultObj.put("CoverPremium", "0");
            GlobalCoversSecAdultObj.put("CoverGroups", "Global Cover");
            SecondAdultCoversArray.put(GlobalCoversSecAdultObj);


            JSONObject MedicallyAdvisedCoversSecAdultObj = new JSONObject();
            MedicallyAdvisedCoversSecAdultObj.put("Applicable", MedicallyAdvisedStatus1);
            MedicallyAdvisedCoversSecAdultObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversSecAdultObj.put("CoverRate", "0");
            MedicallyAdvisedCoversSecAdultObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversSecAdultObj.put("CoverGroups", "Medically Advised Support Devices");
            SecondAdultCoversArray.put(MedicallyAdvisedCoversSecAdultObj);

            JSONObject EmergencyCoversSecAdultObj = new JSONObject();
            EmergencyCoversSecAdultObj.put("Applicable", EmergencyAssistanceStatus1);
            EmergencyCoversSecAdultObj.put("CoverSI", strSumInsured);
            EmergencyCoversSecAdultObj.put("CoverRate", "0");
            EmergencyCoversSecAdultObj.put("CoverPremium", "0");
            EmergencyCoversSecAdultObj.put("CoverGroups", "Emergency Assistance Service");
            SecondAdultCoversArray.put(EmergencyCoversSecAdultObj);

            JSONObject HomeCareTreatmentCoversSecAdultObj = new JSONObject();
            HomeCareTreatmentCoversSecAdultObj.put("Applicable", HomeCareStatus1);
            HomeCareTreatmentCoversSecAdultObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversSecAdultObj.put("CoverRate", "0");
            HomeCareTreatmentCoversSecAdultObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversSecAdultObj.put("CoverGroups", "Home Care Treatment");
            SecondAdultCoversArray.put(HomeCareTreatmentCoversSecAdultObj);

            JSONObject WellnessBenefitCoversSecAdultObj = new JSONObject();
            WellnessBenefitCoversSecAdultObj.put("Applicable", WellnessBenefitStatus1);
            WellnessBenefitCoversSecAdultObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversSecAdultObj.put("CoverRate", "0");
            WellnessBenefitCoversSecAdultObj.put("CoverPremium", "0");
            WellnessBenefitCoversSecAdultObj.put("CoverGroups", "Wellness Benefit");
            SecondAdultCoversArray.put(WellnessBenefitCoversSecAdultObj);

            JSONObject DiseaseManagementCoversSecAdultObj = new JSONObject();
            DiseaseManagementCoversSecAdultObj.put("Applicable", DiseaseManagementStatus1);
            DiseaseManagementCoversSecAdultObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversSecAdultObj.put("CoverRate", "0");
            DiseaseManagementCoversSecAdultObj.put("CoverPremium", "0");
            DiseaseManagementCoversSecAdultObj.put("CoverGroups", "Disease Management Program");
            SecondAdultCoversArray.put(DiseaseManagementCoversSecAdultObj);
            CoverDetailsSecondObj.put("Covers", SecondAdultCoversArray);
            SecondAdultObj.put("CoverDetails", CoverDetailsSecondObj);

            //ChildFirst
            JSONObject FirstChildObj = new JSONObject();
            FirstChildObj.put("InsuredType", "Child");
            FirstChildObj.put("FirstName", "");
            FirstChildObj.put("LastName", "");
            FirstChildObj.put("DOB", strFirstSonAgeEditText);
            FirstChildObj.put("Gender", strGender);
            FirstChildObj.put("Relationship", "");
            FirstChildObj.put("Occupation", "");
            FirstChildObj.put("NomineeName", "");
            FirstChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFirstChildObj = new JSONObject();
            HealthIndicatorsFirstChildObj.put("PED", "N");
            HealthIndicatorsFirstChildObj.put("PEDDeclared", "N");
            HealthIndicatorsFirstChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFirstChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFirstChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFirstChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFirstChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsFirstChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFirstChildObj.put("CoMorbidity", "N");
            FirstChildObj.put("HealthIndicators", HealthIndicatorsFirstChildObj);

            JSONObject CoverDetailsFirstChildObj = new JSONObject();
            JSONArray FirstChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversChildFirstObj = new JSONObject();
            BasicInsuranceCoversChildFirstObj.put("Applicable", "True");
            BasicInsuranceCoversChildFirstObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversChildFirstObj.put("CoverRate", "0");
            BasicInsuranceCoversChildFirstObj.put("CoverPremium", "0");
            BasicInsuranceCoversChildFirstObj.put("CoverGroups", "Basic Insurance Cover");
            FirstChildCoversArray.put(BasicInsuranceCoversChildFirstObj);

            JSONObject PersonalAccidentCoversFirstObj = new JSONObject();
            PersonalAccidentCoversFirstObj.put("Applicable", PersonalStatusChildOne1);
            PersonalAccidentCoversFirstObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFirstObj.put("CoverRate", "0");
            PersonalAccidentCoversFirstObj.put("CoverPremium", "0");
            PersonalAccidentCoversFirstObj.put("CoverGroups", "Personal Accident Cover");
            FirstChildCoversArray.put(PersonalAccidentCoversFirstObj);

            JSONObject CriticalIllnessCoversFirstObj = new JSONObject();
            CriticalIllnessCoversFirstObj.put("Applicable", CriticalStatus1);
            CriticalIllnessCoversFirstObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFirstObj.put("CoverRate", "0");
            CriticalIllnessCoversFirstObj.put("CoverPremium", "0");
            CriticalIllnessCoversFirstObj.put("CoverGroups", "Critical Illness Cover");
            FirstChildCoversArray.put(CriticalIllnessCoversFirstObj);


            JSONObject DailyHospitalCoversFirstObj = new JSONObject();
            DailyHospitalCoversFirstObj.put("Applicable", DailyHospitalSatus1);
            DailyHospitalCoversFirstObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFirstObj.put("CoverRate", "0");
            DailyHospitalCoversFirstObj.put("CoverPremium", "0");
            DailyHospitalCoversFirstObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FirstChildCoversArray.put(DailyHospitalCoversFirstObj);

            JSONObject ModernCoversFirstObj = new JSONObject();
            ModernCoversFirstObj.put("Applicable", ModernTreatmentsStatus1);
            ModernCoversFirstObj.put("CoverSI", strSumInsured);
            ModernCoversFirstObj.put("CoverRate", "0");
            ModernCoversFirstObj.put("CoverPremium", "0");
            ModernCoversFirstObj.put("CoverGroups", "Modern Treatments");
            FirstChildCoversArray.put(ModernCoversFirstObj);
            JSONObject ExtensionPreHospitalizationCoversFirstObj = new JSONObject();
            ExtensionPreHospitalizationCoversFirstObj.put("Applicable", ExtensionPreHospitalization1);
            ExtensionPreHospitalizationCoversFirstObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFirstObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFirstObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFirstObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FirstChildCoversArray.put(ExtensionPreHospitalizationCoversFirstObj);

            JSONObject ExtensionPostHospitalizationCoversFirstObj = new JSONObject();
            ExtensionPostHospitalizationCoversFirstObj.put("Applicable", ExtensionPr0Hospitalization1);
            ExtensionPostHospitalizationCoversFirstObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFirstObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFirstObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFirstObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FirstChildCoversArray.put(ExtensionPostHospitalizationCoversFirstObj);


            JSONObject MaternityAndChildcareCoversFirstObj = new JSONObject();
            MaternityAndChildcareCoversFirstObj.put("Applicable", "False");
            MaternityAndChildcareCoversFirstObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFirstObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFirstObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFirstObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FirstChildCoversArray.put(MaternityAndChildcareCoversFirstObj);

            JSONObject CoverageForNonMedicalCoversFirstObj = new JSONObject();
            CoverageForNonMedicalCoversFirstObj.put("Applicable", CoverageNonMedical1);
            CoverageForNonMedicalCoversFirstObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFirstObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFirstObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFirstObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FirstChildCoversArray.put(CoverageForNonMedicalCoversFirstObj);

            JSONObject ConditionWaiverCoversFirstObj = new JSONObject();
            ConditionWaiverCoversFirstObj.put("Applicable", ConditionWaiverStatus1);
            ConditionWaiverCoversFirstObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFirstObj.put("CoverRate", "0");
            ConditionWaiverCoversFirstObj.put("CoverPremium", "0");
            ConditionWaiverCoversFirstObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FirstChildCoversArray.put(ConditionWaiverCoversFirstObj);


            JSONObject PreExistingDiseaseCoversFirstObj = new JSONObject();
            PreExistingDiseaseCoversFirstObj.put("Applicable", PreExistingDiseaseStatus1);
            PreExistingDiseaseCoversFirstObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFirstObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFirstObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFirstObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FirstChildCoversArray.put(PreExistingDiseaseCoversFirstObj);

            JSONObject OutpatientDentalWaitingCoversFirstObj = new JSONObject();
            OutpatientDentalWaitingCoversFirstObj.put("Applicable", OutpatientDentalStatus1);
            OutpatientDentalWaitingCoversFirstObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFirstObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFirstObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFirstObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FirstChildCoversArray.put(OutpatientDentalWaitingCoversFirstObj);

            JSONObject EmergencyTravellingAllowanceCoversFirstObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFirstObj.put("Applicable", EmergencyTravellingStatus1);
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverGroups", "Emergency Travelling Allowance");
            FirstChildCoversArray.put(EmergencyTravellingAllowanceCoversFirstObj);

            JSONObject SecondOpinionCoversFirstObj = new JSONObject();
            SecondOpinionCoversFirstObj.put("Applicable", SecondOpinionStatus1);
            SecondOpinionCoversFirstObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFirstObj.put("CoverRate", "0");
            SecondOpinionCoversFirstObj.put("CoverPremium", "0");
            SecondOpinionCoversFirstObj.put("CoverGroups", "Second Opinion");
            FirstChildCoversArray.put(SecondOpinionCoversFirstObj);

            JSONObject RestCureCoversFirstObj = new JSONObject();
            RestCureCoversFirstObj.put("Applicable", RestCureStatus1);
            RestCureCoversFirstObj.put("CoverSI", strSumInsured);
            RestCureCoversFirstObj.put("CoverRate", "0");
            RestCureCoversFirstObj.put("CoverPremium", "0");
            RestCureCoversFirstObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FirstChildCoversArray.put(RestCureCoversFirstObj);

            JSONObject ObesityWeightCoversFirstObj = new JSONObject();
            ObesityWeightCoversFirstObj.put("Applicable", ObesityWeightStatus1);
            ObesityWeightCoversFirstObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFirstObj.put("CoverRate", "0");
            ObesityWeightCoversFirstObj.put("CoverPremium", "0");
            ObesityWeightCoversFirstObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FirstChildCoversArray.put(ObesityWeightCoversFirstObj);

            JSONObject SterilityInfertilityCoversFirstObj = new JSONObject();
            SterilityInfertilityCoversFirstObj.put("Applicable", "False");
            SterilityInfertilityCoversFirstObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFirstObj.put("CoverRate", "0");
            SterilityInfertilityCoversFirstObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFirstObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FirstChildCoversArray.put(SterilityInfertilityCoversFirstObj);

            JSONObject EnhancedOrganDonorCoversFirstObj = new JSONObject();
            EnhancedOrganDonorCoversFirstObj.put("Applicable", EnhancedOrganStatus1);
            EnhancedOrganDonorCoversFirstObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFirstObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFirstObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFirstObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FirstChildCoversArray.put(EnhancedOrganDonorCoversFirstObj);

            JSONObject PremiumWaiverCoversFirstObj = new JSONObject();
            PremiumWaiverCoversFirstObj.put("Applicable", PremiumWaiverStatus1);
            PremiumWaiverCoversFirstObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFirstObj.put("CoverRate", "0");
            PremiumWaiverCoversFirstObj.put("CoverPremium", "0");
            PremiumWaiverCoversFirstObj.put("CoverGroups", "Premium Waiver");
            FirstChildCoversArray.put(PremiumWaiverCoversFirstObj);

            JSONObject GlobalCoversFirstObj = new JSONObject();
            GlobalCoversFirstObj.put("Applicable", GlobalCoverStatus1);
            GlobalCoversFirstObj.put("CoverSI", strSumInsured);
            GlobalCoversFirstObj.put("CoverRate", "0");
            GlobalCoversFirstObj.put("CoverPremium", "0");
            GlobalCoversFirstObj.put("CoverGroups", "Global Cover");
            FirstChildCoversArray.put(GlobalCoversFirstObj);


            JSONObject MedicallyAdvisedCoversFirstObj = new JSONObject();
            MedicallyAdvisedCoversFirstObj.put("Applicable", MedicallyAdvisedStatus1);
            MedicallyAdvisedCoversFirstObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFirstObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFirstObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFirstObj.put("CoverGroups", "Medically Advised Support Devices");
            FirstChildCoversArray.put(MedicallyAdvisedCoversFirstObj);

            JSONObject EmergencyCoversFirstObj = new JSONObject();
            EmergencyCoversFirstObj.put("Applicable", EmergencyAssistanceStatus1);
            EmergencyCoversFirstObj.put("CoverSI", strSumInsured);
            EmergencyCoversFirstObj.put("CoverRate", "0");
            EmergencyCoversFirstObj.put("CoverPremium", "0");
            EmergencyCoversFirstObj.put("CoverGroups", "Emergency Assistance Service");
            FirstChildCoversArray.put(EmergencyCoversFirstObj);

            JSONObject HomeCareTreatmentCoversFirstObj = new JSONObject();
            HomeCareTreatmentCoversFirstObj.put("Applicable", HomeCareStatus1);
            HomeCareTreatmentCoversFirstObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFirstObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFirstObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFirstObj.put("CoverGroups", "Home Care Treatment");
            FirstChildCoversArray.put(HomeCareTreatmentCoversFirstObj);

            JSONObject WellnessBenefitCoversFirstObj = new JSONObject();
            WellnessBenefitCoversFirstObj.put("Applicable", WellnessBenefitStatus1);
            WellnessBenefitCoversFirstObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFirstObj.put("CoverRate", "0");
            WellnessBenefitCoversFirstObj.put("CoverPremium", "0");
            WellnessBenefitCoversFirstObj.put("CoverGroups", "Wellness Benefit");
            FirstChildCoversArray.put(WellnessBenefitCoversFirstObj);

            JSONObject DiseaseManagementCoversFirstObj = new JSONObject();
            DiseaseManagementCoversFirstObj.put("Applicable", DiseaseManagementStatus1);
            DiseaseManagementCoversFirstObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFirstObj.put("CoverRate", "0");
            DiseaseManagementCoversFirstObj.put("CoverPremium", "0");
            DiseaseManagementCoversFirstObj.put("CoverGroups", "Disease Management Program");
            FirstChildCoversArray.put(DiseaseManagementCoversFirstObj);
            CoverDetailsFirstChildObj.put("Covers", FirstChildCoversArray);
            FirstChildObj.put("CoverDetails", CoverDetailsFirstChildObj);
            //childTwo
            JSONObject SecondChildObj = new JSONObject();
            SecondChildObj.put("InsuredType", "Child");
            SecondChildObj.put("FirstName", "");
            SecondChildObj.put("LastName", "");
            SecondChildObj.put("DOB", strSecondSonAgeEditText);
            SecondChildObj.put("Gender", strGender);
            SecondChildObj.put("Relationship", "");
            SecondChildObj.put("Occupation", "");
            SecondChildObj.put("NomineeName", "");
            SecondChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsSecondChildObj = new JSONObject();
            HealthIndicatorsSecondChildObj.put("PED", "N");
            HealthIndicatorsSecondChildObj.put("PEDDeclared", "N");
            HealthIndicatorsSecondChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsSecondChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsSecondChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsSecondChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsSecondChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsSecondChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsSecondChildObj.put("CoMorbidity", "N");
            SecondChildObj.put("HealthIndicators", HealthIndicatorsSecondChildObj);

            JSONObject CoverDetailsSecondChildObj = new JSONObject();
            JSONArray SecondChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversSecChildObj = new JSONObject();
            BasicInsuranceCoversSecChildObj.put("Applicable", "True");
            BasicInsuranceCoversSecChildObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversSecChildObj.put("CoverRate", "0");
            BasicInsuranceCoversSecChildObj.put("CoverPremium", "0");
            BasicInsuranceCoversSecChildObj.put("CoverGroups", "Basic Insurance Cover");
            SecondChildCoversArray.put(BasicInsuranceCoversSecChildObj);

            JSONObject PersonalAccidentCoversSecondChildObj = new JSONObject();
            PersonalAccidentCoversSecondChildObj.put("Applicable", PersonalStatusChildTwo1);
            PersonalAccidentCoversSecondChildObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversSecondChildObj.put("CoverRate", "0");
            PersonalAccidentCoversSecondChildObj.put("CoverPremium", "0");
            PersonalAccidentCoversSecondChildObj.put("CoverGroups", "Personal Accident Cover");
            SecondChildCoversArray.put(PersonalAccidentCoversSecondChildObj);

            JSONObject CriticalIllnessCoversSecondChildObj = new JSONObject();
            CriticalIllnessCoversSecondChildObj.put("Applicable", CriticalStatus1);
            CriticalIllnessCoversSecondChildObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversSecondChildObj.put("CoverRate", "0");
            CriticalIllnessCoversSecondChildObj.put("CoverPremium", "0");
            CriticalIllnessCoversSecondChildObj.put("CoverGroups", "Critical Illness Cover");
            SecondChildCoversArray.put(CriticalIllnessCoversSecondChildObj);


            JSONObject DailyHospitalCoversSecondChildObj = new JSONObject();
            DailyHospitalCoversSecondChildObj.put("Applicable", DailyHospitalSatus1);
            DailyHospitalCoversSecondChildObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversSecondChildObj.put("CoverRate", "0");
            DailyHospitalCoversSecondChildObj.put("CoverPremium", "0");
            DailyHospitalCoversSecondChildObj.put("CoverGroups", "Daily Hospital Cash Cover");
            SecondChildCoversArray.put(DailyHospitalCoversSecondChildObj);

            JSONObject ModernCoversSecondChildObj = new JSONObject();
            ModernCoversSecondChildObj.put("Applicable", ModernTreatmentsStatus1);
            ModernCoversSecondChildObj.put("CoverSI", strSumInsured);
            ModernCoversSecondChildObj.put("CoverRate", "0");
            ModernCoversSecondChildObj.put("CoverPremium", "0");
            ModernCoversSecondChildObj.put("CoverGroups", "Modern Treatments");
            SecondChildCoversArray.put(ModernCoversSecondChildObj);
            JSONObject ExtensionPreHospitalizationCoversSecondChildObj = new JSONObject();
            ExtensionPreHospitalizationCoversSecondChildObj.put("Applicable", ExtensionPreHospitalization1);
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            SecondChildCoversArray.put(ExtensionPreHospitalizationCoversSecondChildObj);

            JSONObject ExtensionPostHospitalizationCoversSecondChildObj = new JSONObject();
            ExtensionPostHospitalizationCoversSecondChildObj.put("Applicable", ExtensionPr0Hospitalization1);
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverGroups", "Extension under Post-Hospitalization");
            SecondChildCoversArray.put(ExtensionPostHospitalizationCoversSecondChildObj);


            JSONObject MaternityAndChildcareCoversSecChildObj = new JSONObject();
            MaternityAndChildcareCoversSecChildObj.put("Applicable", "False");
            MaternityAndChildcareCoversSecChildObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversSecChildObj.put("CoverRate", "0");
            MaternityAndChildcareCoversSecChildObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversSecChildObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            SecondChildCoversArray.put(MaternityAndChildcareCoversSecChildObj);

            JSONObject CoverageForNonMedicalCoversSecChildObj = new JSONObject();
            CoverageForNonMedicalCoversSecChildObj.put("Applicable", CoverageNonMedical1);
            CoverageForNonMedicalCoversSecChildObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversSecChildObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversSecChildObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversSecChildObj.put("CoverGroups", "Coverage for Non-Medical Items");
            SecondChildCoversArray.put(CoverageForNonMedicalCoversSecChildObj);

            JSONObject ConditionWaiverCoversSecChildObj = new JSONObject();
            ConditionWaiverCoversSecChildObj.put("Applicable", ConditionWaiverStatus1);
            ConditionWaiverCoversSecChildObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversSecChildObj.put("CoverRate", "0");
            ConditionWaiverCoversSecChildObj.put("CoverPremium", "0");
            ConditionWaiverCoversSecChildObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            SecondChildCoversArray.put(ConditionWaiverCoversSecChildObj);

            JSONObject PreExistingDiseaseCoversSecChildObj = new JSONObject();
            PreExistingDiseaseCoversSecChildObj.put("Applicable", PreExistingDiseaseStatus1);
            PreExistingDiseaseCoversSecChildObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversSecChildObj.put("CoverRate", "0");
            PreExistingDiseaseCoversSecChildObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversSecChildObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            SecondChildCoversArray.put(PreExistingDiseaseCoversSecChildObj);

            JSONObject OutpatientDentalWaitingCoversSecChildObj = new JSONObject();
            OutpatientDentalWaitingCoversSecChildObj.put("Applicable", OutpatientDentalStatus1);
            OutpatientDentalWaitingCoversSecChildObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversSecChildObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversSecChildObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversSecChildObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            SecondChildCoversArray.put(OutpatientDentalWaitingCoversSecChildObj);

            JSONObject EmergencyTravellingAllowanceCoversSecChildObj = new JSONObject();
            EmergencyTravellingAllowanceCoversSecChildObj.put("Applicable", EmergencyTravellingStatus1);
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverGroups", "Emergency Travelling Allowance");
            SecondChildCoversArray.put(EmergencyTravellingAllowanceCoversSecChildObj);

            JSONObject SecondOpinionCoversSecChildObj = new JSONObject();
            SecondOpinionCoversSecChildObj.put("Applicable", SecondOpinionStatus1);
            SecondOpinionCoversSecChildObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversSecChildObj.put("CoverRate", "0");
            SecondOpinionCoversSecChildObj.put("CoverPremium", "0");
            SecondOpinionCoversSecChildObj.put("CoverGroups", "Second Opinion");
            SecondChildCoversArray.put(SecondOpinionCoversSecChildObj);

            JSONObject RestCureCoversSecChildObj = new JSONObject();
            RestCureCoversSecChildObj.put("Applicable", RestCureStatus1);
            RestCureCoversSecChildObj.put("CoverSI", strSumInsured);
            RestCureCoversSecChildObj.put("CoverRate", "0");
            RestCureCoversSecChildObj.put("CoverPremium", "0");
            RestCureCoversSecChildObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            SecondChildCoversArray.put(RestCureCoversSecChildObj);

            JSONObject ObesityWeightCoversSecChildObj = new JSONObject();
            ObesityWeightCoversSecChildObj.put("Applicable", ObesityWeightStatus1);
            ObesityWeightCoversSecChildObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversSecChildObj.put("CoverRate", "0");
            ObesityWeightCoversSecChildObj.put("CoverPremium", "0");
            ObesityWeightCoversSecChildObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            SecondChildCoversArray.put(ObesityWeightCoversSecChildObj);

            JSONObject SterilityInfertilityCoversSecChildObj = new JSONObject();
            SterilityInfertilityCoversSecChildObj.put("Applicable", "False");
            SterilityInfertilityCoversSecChildObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversSecChildObj.put("CoverRate", "0");
            SterilityInfertilityCoversSecChildObj.put("CoverPremium", "0");
            SterilityInfertilityCoversSecChildObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            SecondChildCoversArray.put(SterilityInfertilityCoversSecChildObj);

            JSONObject EnhancedOrganDonorCoversSecChildObj = new JSONObject();
            EnhancedOrganDonorCoversSecChildObj.put("Applicable", EnhancedOrganStatus1);
            EnhancedOrganDonorCoversSecChildObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversSecChildObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversSecChildObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversSecChildObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            SecondChildCoversArray.put(EnhancedOrganDonorCoversSecChildObj);

            JSONObject PremiumWaiverCoversSecChildObj = new JSONObject();
            PremiumWaiverCoversSecChildObj.put("Applicable", PremiumWaiverStatus1);
            PremiumWaiverCoversSecChildObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversSecChildObj.put("CoverRate", "0");
            PremiumWaiverCoversSecChildObj.put("CoverPremium", "0");
            PremiumWaiverCoversSecChildObj.put("CoverGroups", "Premium Waiver");
            SecondChildCoversArray.put(PremiumWaiverCoversSecChildObj);

            JSONObject GlobalCoversSecChildObj = new JSONObject();
            GlobalCoversSecChildObj.put("Applicable", GlobalCoverStatus1);
            GlobalCoversSecChildObj.put("CoverSI", strSumInsured);
            GlobalCoversSecChildObj.put("CoverRate", "0");
            GlobalCoversSecChildObj.put("CoverPremium", "0");
            GlobalCoversSecChildObj.put("CoverGroups", "Global Cover");
            SecondChildCoversArray.put(GlobalCoversSecChildObj);


            JSONObject MedicallyAdvisedCoversSecChildObj = new JSONObject();
            MedicallyAdvisedCoversSecChildObj.put("Applicable", MedicallyAdvisedStatus1);
            MedicallyAdvisedCoversSecChildObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversSecChildObj.put("CoverRate", "0");
            MedicallyAdvisedCoversSecChildObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversSecChildObj.put("CoverGroups", "Medically Advised Support Devices");
            SecondChildCoversArray.put(MedicallyAdvisedCoversSecChildObj);

            JSONObject EmergencyCoversSecChildObj = new JSONObject();
            EmergencyCoversSecChildObj.put("Applicable", EmergencyAssistanceStatus1);
            EmergencyCoversSecChildObj.put("CoverSI", strSumInsured);
            EmergencyCoversSecChildObj.put("CoverRate", "0");
            EmergencyCoversSecChildObj.put("CoverPremium", "0");
            EmergencyCoversSecChildObj.put("CoverGroups", "Emergency Assistance Service");
            SecondChildCoversArray.put(EmergencyCoversSecChildObj);

            JSONObject HomeCareTreatmentCoversSecChildObj = new JSONObject();
            HomeCareTreatmentCoversSecChildObj.put("Applicable", HomeCareStatus1);
            HomeCareTreatmentCoversSecChildObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversSecChildObj.put("CoverRate", "0");
            HomeCareTreatmentCoversSecChildObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversSecChildObj.put("CoverGroups", "Home Care Treatment");
            SecondChildCoversArray.put(HomeCareTreatmentCoversSecChildObj);

            JSONObject WellnessBenefitCoversSecChildObj = new JSONObject();
            WellnessBenefitCoversSecChildObj.put("Applicable", WellnessBenefitStatus1);
            WellnessBenefitCoversSecChildObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversSecChildObj.put("CoverRate", "0");
            WellnessBenefitCoversSecChildObj.put("CoverPremium", "0");
            WellnessBenefitCoversSecChildObj.put("CoverGroups", "Wellness Benefit");
            SecondChildCoversArray.put(WellnessBenefitCoversSecChildObj);

            JSONObject DiseaseManagementCoversSecChildObj = new JSONObject();
            DiseaseManagementCoversSecChildObj.put("Applicable", DiseaseManagementStatus1);
            DiseaseManagementCoversSecChildObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversSecChildObj.put("CoverRate", "0");
            DiseaseManagementCoversSecChildObj.put("CoverPremium", "0");
            DiseaseManagementCoversSecChildObj.put("CoverGroups", "Disease Management Program");
            SecondChildCoversArray.put(DiseaseManagementCoversSecChildObj);
            CoverDetailsSecondChildObj.put("Covers", SecondChildCoversArray);
            SecondChildObj.put("CoverDetails", CoverDetailsSecondChildObj);

            //Third child
            JSONObject ThirdChildObj = new JSONObject();
            ThirdChildObj.put("InsuredType", "Child");
            ThirdChildObj.put("FirstName", "");
            ThirdChildObj.put("LastName", "");
            ThirdChildObj.put("DOB", strThirdSonAgeEditText);
            ThirdChildObj.put("Gender", strGender);
            ThirdChildObj.put("Relationship", "");
            ThirdChildObj.put("Occupation", "");
            ThirdChildObj.put("NomineeName", "");
            ThirdChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsThirdChildObj = new JSONObject();
            HealthIndicatorsThirdChildObj.put("PED", "N");
            HealthIndicatorsThirdChildObj.put("PEDDeclared", "N");
            HealthIndicatorsThirdChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsThirdChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsThirdChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsThirdChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsThirdChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsThirdChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsThirdChildObj.put("CoMorbidity", "N");
            ThirdChildObj.put("HealthIndicators", HealthIndicatorsThirdChildObj);

            JSONObject CoverDetailsThirdChildObj = new JSONObject();
            JSONArray ThirdChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversThirdChildObj = new JSONObject();
            BasicInsuranceCoversThirdChildObj.put("Applicable", "True");
            BasicInsuranceCoversThirdChildObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversThirdChildObj.put("CoverRate", "0");
            BasicInsuranceCoversThirdChildObj.put("CoverPremium", "0");
            BasicInsuranceCoversThirdChildObj.put("CoverGroups", "Basic Insurance Cover");
            ThirdChildCoversArray.put(BasicInsuranceCoversThirdChildObj);

            JSONObject PersonalAccidentCoversThirdChildObj = new JSONObject();
            PersonalAccidentCoversThirdChildObj.put("Applicable", PersonalStatusChildThird1);
            PersonalAccidentCoversThirdChildObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversThirdChildObj.put("CoverRate", "0");
            PersonalAccidentCoversThirdChildObj.put("CoverPremium", "0");
            PersonalAccidentCoversThirdChildObj.put("CoverGroups", "Personal Accident Cover");
            ThirdChildCoversArray.put(PersonalAccidentCoversThirdChildObj);

            JSONObject CriticalIllnessCoversThirdChildObj = new JSONObject();
            CriticalIllnessCoversThirdChildObj.put("Applicable", CriticalStatus1);
            CriticalIllnessCoversThirdChildObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversThirdChildObj.put("CoverRate", "0");
            CriticalIllnessCoversThirdChildObj.put("CoverPremium", "0");
            CriticalIllnessCoversThirdChildObj.put("CoverGroups", "Critical Illness Cover");
            ThirdChildCoversArray.put(CriticalIllnessCoversThirdChildObj);


            JSONObject DailyHospitalCoversThirdChildObj = new JSONObject();
            DailyHospitalCoversThirdChildObj.put("Applicable", DailyHospitalSatus1);
            DailyHospitalCoversThirdChildObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversThirdChildObj.put("CoverRate", "0");
            DailyHospitalCoversThirdChildObj.put("CoverPremium", "0");
            DailyHospitalCoversThirdChildObj.put("CoverGroups", "Daily Hospital Cash Cover");
            ThirdChildCoversArray.put(DailyHospitalCoversThirdChildObj);

            JSONObject ModernCoversThirdChildObj = new JSONObject();
            ModernCoversThirdChildObj.put("Applicable", ModernTreatmentsStatus1);
            ModernCoversThirdChildObj.put("CoverSI", strSumInsured);
            ModernCoversThirdChildObj.put("CoverRate", "0");
            ModernCoversThirdChildObj.put("CoverPremium", "0");
            ModernCoversThirdChildObj.put("CoverGroups", "Modern Treatments");
            ThirdChildCoversArray.put(ModernCoversThirdChildObj);
            JSONObject ExtensionPreHospitalizationCoversThirdChildObj = new JSONObject();
            ExtensionPreHospitalizationCoversThirdChildObj.put("Applicable", ExtensionPreHospitalization1);
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            ThirdChildCoversArray.put(ExtensionPreHospitalizationCoversThirdChildObj);

            JSONObject ExtensionPostHospitalizationCoversThirdChildObj = new JSONObject();
            ExtensionPostHospitalizationCoversThirdChildObj.put("Applicable", ExtensionPr0Hospitalization1);
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverGroups", "Extension under Post-Hospitalization");
            ThirdChildCoversArray.put(ExtensionPostHospitalizationCoversThirdChildObj);


            JSONObject MaternityAndChildcareCoversThirdChildObj = new JSONObject();
            MaternityAndChildcareCoversThirdChildObj.put("Applicable", "False");
            MaternityAndChildcareCoversThirdChildObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversThirdChildObj.put("CoverRate", "0");
            MaternityAndChildcareCoversThirdChildObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversThirdChildObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            ThirdChildCoversArray.put(MaternityAndChildcareCoversThirdChildObj);

            JSONObject CoverageForNonMedicalCoversThirdChildObj = new JSONObject();
            CoverageForNonMedicalCoversThirdChildObj.put("Applicable", CoverageNonMedical1);
            CoverageForNonMedicalCoversThirdChildObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversThirdChildObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversThirdChildObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversThirdChildObj.put("CoverGroups", "Coverage for Non-Medical Items");
            ThirdChildCoversArray.put(CoverageForNonMedicalCoversThirdChildObj);

            JSONObject ConditionWaiverCoversThirdChildObj = new JSONObject();
            ConditionWaiverCoversThirdChildObj.put("Applicable", ConditionWaiverStatus1);
            ConditionWaiverCoversThirdChildObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversThirdChildObj.put("CoverRate", "0");
            ConditionWaiverCoversThirdChildObj.put("CoverPremium", "0");
            ConditionWaiverCoversThirdChildObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            ThirdChildCoversArray.put(ConditionWaiverCoversThirdChildObj);

            JSONObject PreExistingDiseaseCoversThirdChildObj = new JSONObject();
            PreExistingDiseaseCoversThirdChildObj.put("Applicable", PreExistingDiseaseStatus1);
            PreExistingDiseaseCoversThirdChildObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversThirdChildObj.put("CoverRate", "0");
            PreExistingDiseaseCoversThirdChildObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversThirdChildObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            ThirdChildCoversArray.put(PreExistingDiseaseCoversThirdChildObj);

            JSONObject OutpatientDentalWaitingCoversThirdChildObj = new JSONObject();
            OutpatientDentalWaitingCoversThirdChildObj.put("Applicable", OutpatientDentalStatus1);
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            ThirdChildCoversArray.put(OutpatientDentalWaitingCoversThirdChildObj);

            JSONObject EmergencyTravellingAllowanceCoversThirdChildObj = new JSONObject();
            EmergencyTravellingAllowanceCoversThirdChildObj.put("Applicable", EmergencyTravellingStatus1);
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverGroups", "Emergency Travelling Allowance");
            ThirdChildCoversArray.put(EmergencyTravellingAllowanceCoversThirdChildObj);

            JSONObject SecondOpinionCoversThirdChildObj = new JSONObject();
            SecondOpinionCoversThirdChildObj.put("Applicable", SecondOpinionStatus1);
            SecondOpinionCoversThirdChildObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversThirdChildObj.put("CoverRate", "0");
            SecondOpinionCoversThirdChildObj.put("CoverPremium", "0");
            SecondOpinionCoversThirdChildObj.put("CoverGroups", "Second Opinion");
            ThirdChildCoversArray.put(SecondOpinionCoversThirdChildObj);

            JSONObject RestCureCoversThirdChildObj = new JSONObject();
            RestCureCoversThirdChildObj.put("Applicable", RestCureStatus1);
            RestCureCoversThirdChildObj.put("CoverSI", strSumInsured);
            RestCureCoversThirdChildObj.put("CoverRate", "0");
            RestCureCoversThirdChildObj.put("CoverPremium", "0");
            RestCureCoversThirdChildObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            ThirdChildCoversArray.put(RestCureCoversThirdChildObj);

            JSONObject ObesityWeightCoversThirdChildObj = new JSONObject();
            ObesityWeightCoversThirdChildObj.put("Applicable", ObesityWeightStatus1);
            ObesityWeightCoversThirdChildObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversThirdChildObj.put("CoverRate", "0");
            ObesityWeightCoversThirdChildObj.put("CoverPremium", "0");
            ObesityWeightCoversThirdChildObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            ThirdChildCoversArray.put(ObesityWeightCoversThirdChildObj);

            JSONObject SterilityInfertilityCoversThirdChildObj = new JSONObject();
            SterilityInfertilityCoversThirdChildObj.put("Applicable", "False");
            SterilityInfertilityCoversThirdChildObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversThirdChildObj.put("CoverRate", "0");
            SterilityInfertilityCoversThirdChildObj.put("CoverPremium", "0");
            SterilityInfertilityCoversThirdChildObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            ThirdChildCoversArray.put(SterilityInfertilityCoversThirdChildObj);

            JSONObject EnhancedOrganDonorCoversThirdChildObj = new JSONObject();
            EnhancedOrganDonorCoversThirdChildObj.put("Applicable", EnhancedOrganStatus1);
            EnhancedOrganDonorCoversThirdChildObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversThirdChildObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversThirdChildObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversThirdChildObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            ThirdChildCoversArray.put(EnhancedOrganDonorCoversThirdChildObj);

            JSONObject PremiumWaiverCoversThirdChildObj = new JSONObject();
            PremiumWaiverCoversThirdChildObj.put("Applicable", PremiumWaiverStatus1);
            PremiumWaiverCoversThirdChildObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversThirdChildObj.put("CoverRate", "0");
            PremiumWaiverCoversThirdChildObj.put("CoverPremium", "0");
            PremiumWaiverCoversThirdChildObj.put("CoverGroups", "Premium Waiver");
            ThirdChildCoversArray.put(PremiumWaiverCoversThirdChildObj);

            JSONObject GlobalCoversThirdChildObj = new JSONObject();
            GlobalCoversThirdChildObj.put("Applicable", GlobalCoverStatus1);
            GlobalCoversThirdChildObj.put("CoverSI", strSumInsured);
            GlobalCoversThirdChildObj.put("CoverRate", "0");
            GlobalCoversThirdChildObj.put("CoverPremium", "0");
            GlobalCoversThirdChildObj.put("CoverGroups", "Global Cover");
            ThirdChildCoversArray.put(GlobalCoversThirdChildObj);


            JSONObject MedicallyAdvisedCoversThirdChildObj = new JSONObject();
            MedicallyAdvisedCoversThirdChildObj.put("Applicable", MedicallyAdvisedStatus1);
            MedicallyAdvisedCoversThirdChildObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversThirdChildObj.put("CoverRate", "0");
            MedicallyAdvisedCoversThirdChildObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversThirdChildObj.put("CoverGroups", "Medically Advised Support Devices");
            ThirdChildCoversArray.put(MedicallyAdvisedCoversThirdChildObj);

            JSONObject EmergencyCoversThirdChildObj = new JSONObject();
            EmergencyCoversThirdChildObj.put("Applicable", EmergencyAssistanceStatus1);
            EmergencyCoversThirdChildObj.put("CoverSI", strSumInsured);
            EmergencyCoversThirdChildObj.put("CoverRate", "0");
            EmergencyCoversThirdChildObj.put("CoverPremium", "0");
            EmergencyCoversThirdChildObj.put("CoverGroups", "Emergency Assistance Service");
            ThirdChildCoversArray.put(EmergencyCoversThirdChildObj);

            JSONObject HomeCareTreatmentCoversThirdChildObj = new JSONObject();
            HomeCareTreatmentCoversThirdChildObj.put("Applicable", HomeCareStatus1);
            HomeCareTreatmentCoversThirdChildObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversThirdChildObj.put("CoverRate", "0");
            HomeCareTreatmentCoversThirdChildObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversThirdChildObj.put("CoverGroups", "Home Care Treatment");
            ThirdChildCoversArray.put(HomeCareTreatmentCoversThirdChildObj);

            JSONObject WellnessBenefitCoversThirdChildObj = new JSONObject();
            WellnessBenefitCoversThirdChildObj.put("Applicable", WellnessBenefitStatus1);
            WellnessBenefitCoversThirdChildObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversThirdChildObj.put("CoverRate", "0");
            WellnessBenefitCoversThirdChildObj.put("CoverPremium", "0");
            WellnessBenefitCoversThirdChildObj.put("CoverGroups", "Wellness Benefit");
            ThirdChildCoversArray.put(WellnessBenefitCoversThirdChildObj);

            JSONObject DiseaseManagementCoversThirdChildObj = new JSONObject();
            DiseaseManagementCoversThirdChildObj.put("Applicable", DiseaseManagementStatus1);
            DiseaseManagementCoversThirdChildObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversThirdChildObj.put("CoverRate", "0");
            DiseaseManagementCoversThirdChildObj.put("CoverPremium", "0");
            DiseaseManagementCoversThirdChildObj.put("CoverGroups", "Disease Management Program");
            ThirdChildCoversArray.put(DiseaseManagementCoversThirdChildObj);
            CoverDetailsThirdChildObj.put("Covers", ThirdChildCoversArray);
            ThirdChildObj.put("CoverDetails", CoverDetailsThirdChildObj);


            //fourChild
            JSONObject FourthChildObj = new JSONObject();
            FourthChildObj.put("InsuredType", "Child");
            FourthChildObj.put("FirstName", "");
            FourthChildObj.put("LastName", "");
            FourthChildObj.put("DOB", strFourSonAgeEditText);
            FourthChildObj.put("Gender", strGender);
            FourthChildObj.put("Relationship", "");
            FourthChildObj.put("Occupation", "");
            FourthChildObj.put("NomineeName", "");
            FourthChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFourthChildObj = new JSONObject();
            HealthIndicatorsFourthChildObj.put("PED", "N");
            HealthIndicatorsFourthChildObj.put("PEDDeclared", "N");
            HealthIndicatorsFourthChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFourthChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFourthChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFourthChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFourthChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsFourthChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFourthChildObj.put("CoMorbidity", "N");
            FourthChildObj.put("HealthIndicators", HealthIndicatorsFourthChildObj);

            JSONObject CoverDetailsFourthChildObj = new JSONObject();
            JSONArray FourthChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversFourthChildObj = new JSONObject();
            BasicInsuranceCoversFourthChildObj.put("Applicable", "True");
            BasicInsuranceCoversFourthChildObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversFourthChildObj.put("CoverRate", "0");
            BasicInsuranceCoversFourthChildObj.put("CoverPremium", "0");
            BasicInsuranceCoversFourthChildObj.put("CoverGroups", "Basic Insurance Cover");
            FourthChildCoversArray.put(BasicInsuranceCoversFourthChildObj);

            JSONObject PersonalAccidentCoversFourthChildObj = new JSONObject();
            PersonalAccidentCoversFourthChildObj.put("Applicable", PersonalStatusChildFour1);
            PersonalAccidentCoversFourthChildObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFourthChildObj.put("CoverRate", "0");
            PersonalAccidentCoversFourthChildObj.put("CoverPremium", "0");
            PersonalAccidentCoversFourthChildObj.put("CoverGroups", "Personal Accident Cover");
            FourthChildCoversArray.put(PersonalAccidentCoversFourthChildObj);

            JSONObject CriticalIllnessCoversFourthChildObj = new JSONObject();
            CriticalIllnessCoversFourthChildObj.put("Applicable", CriticalStatus1);
            CriticalIllnessCoversFourthChildObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFourthChildObj.put("CoverRate", "0");
            CriticalIllnessCoversFourthChildObj.put("CoverPremium", "0");
            CriticalIllnessCoversFourthChildObj.put("CoverGroups", "Critical Illness Cover");
            FourthChildCoversArray.put(CriticalIllnessCoversFourthChildObj);


            JSONObject DailyHospitalCoversFourthChildObj = new JSONObject();
            DailyHospitalCoversFourthChildObj.put("Applicable", DailyHospitalSatus1);
            DailyHospitalCoversFourthChildObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFourthChildObj.put("CoverRate", "0");
            DailyHospitalCoversFourthChildObj.put("CoverPremium", "0");
            DailyHospitalCoversFourthChildObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FourthChildCoversArray.put(DailyHospitalCoversFourthChildObj);

            JSONObject ModernCoversFourthChildObj = new JSONObject();
            ModernCoversFourthChildObj.put("Applicable", ModernTreatmentsStatus1);
            ModernCoversFourthChildObj.put("CoverSI", strSumInsured);
            ModernCoversFourthChildObj.put("CoverRate", "0");
            ModernCoversFourthChildObj.put("CoverPremium", "0");
            ModernCoversFourthChildObj.put("CoverGroups", "Modern Treatments");
            FourthChildCoversArray.put(ModernCoversFourthChildObj);
            JSONObject ExtensionPreHospitalizationCoversFourthChildObj = new JSONObject();
            ExtensionPreHospitalizationCoversFourthChildObj.put("Applicable", ExtensionPreHospitalization1);
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FourthChildCoversArray.put(ExtensionPreHospitalizationCoversFourthChildObj);

            JSONObject ExtensionPostHospitalizationCoversFourthChildObj = new JSONObject();
            ExtensionPostHospitalizationCoversFourthChildObj.put("Applicable", ExtensionPr0Hospitalization1);
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FourthChildCoversArray.put(ExtensionPostHospitalizationCoversFourthChildObj);


            JSONObject MaternityAndChildcareCoversFourthChildObj = new JSONObject();
            MaternityAndChildcareCoversFourthChildObj.put("Applicable", "False");
            MaternityAndChildcareCoversFourthChildObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFourthChildObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFourthChildObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFourthChildObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FourthChildCoversArray.put(MaternityAndChildcareCoversFourthChildObj);

            JSONObject CoverageForNonMedicalCoversFourthChildObj = new JSONObject();
            CoverageForNonMedicalCoversFourthChildObj.put("Applicable", CoverageNonMedical1);
            CoverageForNonMedicalCoversFourthChildObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFourthChildObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFourthChildObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFourthChildObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FourthChildCoversArray.put(CoverageForNonMedicalCoversFourthChildObj);

            JSONObject ConditionWaiverCoversFourthChildObj = new JSONObject();
            ConditionWaiverCoversFourthChildObj.put("Applicable", ConditionWaiverStatus1);
            ConditionWaiverCoversFourthChildObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFourthChildObj.put("CoverRate", "0");
            ConditionWaiverCoversFourthChildObj.put("CoverPremium", "0");
            ConditionWaiverCoversFourthChildObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FourthChildCoversArray.put(ConditionWaiverCoversFourthChildObj);

            JSONObject PreExistingDiseaseCoversFourthChildObj = new JSONObject();
            PreExistingDiseaseCoversFourthChildObj.put("Applicable", PreExistingDiseaseStatus1);
            PreExistingDiseaseCoversFourthChildObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFourthChildObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFourthChildObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFourthChildObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FourthChildCoversArray.put(PreExistingDiseaseCoversFourthChildObj);

            JSONObject OutpatientDentalWaitingCoversFourthChildObj = new JSONObject();
            OutpatientDentalWaitingCoversFourthChildObj.put("Applicable", OutpatientDentalStatus1);
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FourthChildCoversArray.put(OutpatientDentalWaitingCoversFourthChildObj);

            JSONObject EmergencyTravellingAllowanceCoversFourthChildObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFourthChildObj.put("Applicable", EmergencyTravellingStatus1);
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverGroups", "Emergency Travelling Allowance");
            FourthChildCoversArray.put(EmergencyTravellingAllowanceCoversFourthChildObj);

            JSONObject SecondOpinionCoversFourthChildObj = new JSONObject();
            SecondOpinionCoversFourthChildObj.put("Applicable", SecondOpinionStatus1);
            SecondOpinionCoversFourthChildObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFourthChildObj.put("CoverRate", "0");
            SecondOpinionCoversFourthChildObj.put("CoverPremium", "0");
            SecondOpinionCoversFourthChildObj.put("CoverGroups", "Second Opinion");
            FourthChildCoversArray.put(SecondOpinionCoversFourthChildObj);

            JSONObject RestCureCoversFourthChildObj = new JSONObject();
            RestCureCoversFourthChildObj.put("Applicable", RestCureStatus1);
            RestCureCoversFourthChildObj.put("CoverSI", strSumInsured);
            RestCureCoversFourthChildObj.put("CoverRate", "0");
            RestCureCoversFourthChildObj.put("CoverPremium", "0");
            RestCureCoversFourthChildObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FourthChildCoversArray.put(RestCureCoversFourthChildObj);

            JSONObject ObesityWeightCoversFourthChildObj = new JSONObject();
            ObesityWeightCoversFourthChildObj.put("Applicable", ObesityWeightStatus1);
            ObesityWeightCoversFourthChildObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFourthChildObj.put("CoverRate", "0");
            ObesityWeightCoversFourthChildObj.put("CoverPremium", "0");
            ObesityWeightCoversFourthChildObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FourthChildCoversArray.put(ObesityWeightCoversFourthChildObj);

            JSONObject SterilityInfertilityCoversFourthChildObj = new JSONObject();
            SterilityInfertilityCoversFourthChildObj.put("Applicable", "False");
            SterilityInfertilityCoversFourthChildObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFourthChildObj.put("CoverRate", "0");
            SterilityInfertilityCoversFourthChildObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFourthChildObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FourthChildCoversArray.put(SterilityInfertilityCoversFourthChildObj);

            JSONObject EnhancedOrganDonorCoversFourthChildObj = new JSONObject();
            EnhancedOrganDonorCoversFourthChildObj.put("Applicable", EnhancedOrganStatus1);
            EnhancedOrganDonorCoversFourthChildObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFourthChildObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFourthChildObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFourthChildObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FourthChildCoversArray.put(EnhancedOrganDonorCoversFourthChildObj);

            JSONObject PremiumWaiverCoversFourthChildObj = new JSONObject();
            PremiumWaiverCoversFourthChildObj.put("Applicable", PremiumWaiverStatus1);
            PremiumWaiverCoversFourthChildObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFourthChildObj.put("CoverRate", "0");
            PremiumWaiverCoversFourthChildObj.put("CoverPremium", "0");
            PremiumWaiverCoversFourthChildObj.put("CoverGroups", "Premium Waiver");
            FourthChildCoversArray.put(PremiumWaiverCoversFourthChildObj);

            JSONObject GlobalCoversFourthChildObj = new JSONObject();
            GlobalCoversFourthChildObj.put("Applicable", GlobalCoverStatus1);
            GlobalCoversFourthChildObj.put("CoverSI", strSumInsured);
            GlobalCoversFourthChildObj.put("CoverRate", "0");
            GlobalCoversFourthChildObj.put("CoverPremium", "0");
            GlobalCoversFourthChildObj.put("CoverGroups", "Global Cover");
            FourthChildCoversArray.put(GlobalCoversFourthChildObj);


            JSONObject MedicallyAdvisedCoversFourthChildObj = new JSONObject();
            MedicallyAdvisedCoversFourthChildObj.put("Applicable", MedicallyAdvisedStatus1);
            MedicallyAdvisedCoversFourthChildObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFourthChildObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFourthChildObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFourthChildObj.put("CoverGroups", "Medically Advised Support Devices");
            FourthChildCoversArray.put(MedicallyAdvisedCoversFourthChildObj);

            JSONObject EmergencyCoversFourthChildObj = new JSONObject();
            EmergencyCoversFourthChildObj.put("Applicable", EmergencyAssistanceStatus1);
            EmergencyCoversFourthChildObj.put("CoverSI", strSumInsured);
            EmergencyCoversFourthChildObj.put("CoverRate", "0");
            EmergencyCoversFourthChildObj.put("CoverPremium", "0");
            EmergencyCoversFourthChildObj.put("CoverGroups", "Emergency Assistance Service");
            FourthChildCoversArray.put(EmergencyCoversFourthChildObj);

            JSONObject HomeCareTreatmentCoversFourthChildObj = new JSONObject();
            HomeCareTreatmentCoversFourthChildObj.put("Applicable", HomeCareStatus1);
            HomeCareTreatmentCoversFourthChildObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFourthChildObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFourthChildObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFourthChildObj.put("CoverGroups", "Home Care Treatment");
            FourthChildCoversArray.put(HomeCareTreatmentCoversFourthChildObj);

            JSONObject WellnessBenefitCoversFourthChildObj = new JSONObject();
            WellnessBenefitCoversFourthChildObj.put("Applicable", WellnessBenefitStatus1);
            WellnessBenefitCoversFourthChildObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFourthChildObj.put("CoverRate", "0");
            WellnessBenefitCoversFourthChildObj.put("CoverPremium", "0");
            WellnessBenefitCoversFourthChildObj.put("CoverGroups", "Wellness Benefit");
            FourthChildCoversArray.put(WellnessBenefitCoversFourthChildObj);

            JSONObject DiseaseManagementCoversFourthChildObj = new JSONObject();
            DiseaseManagementCoversFourthChildObj.put("Applicable", DiseaseManagementStatus1);
            DiseaseManagementCoversFourthChildObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFourthChildObj.put("CoverRate", "0");
            DiseaseManagementCoversFourthChildObj.put("CoverPremium", "0");
            DiseaseManagementCoversFourthChildObj.put("CoverGroups", "Disease Management Program");
            FourthChildCoversArray.put(DiseaseManagementCoversFourthChildObj);
            CoverDetailsFourthChildObj.put("Covers", FourthChildCoversArray);
            FourthChildObj.put("CoverDetails", CoverDetailsFourthChildObj);


            //Mother
            JSONObject MotherObj = new JSONObject();
            MotherObj.put("InsuredType", "Parent");
            MotherObj.put("FirstName", "");
            MotherObj.put("LastName", "");
            MotherObj.put("DOB", strMotherAgeEditText);
            MotherObj.put("Gender", "F");
            MotherObj.put("Relationship", "");
            MotherObj.put("Occupation", "");
            MotherObj.put("NomineeName", "");
            MotherObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsMotherObj = new JSONObject();
            HealthIndicatorsMotherObj.put("PED", "N");
            HealthIndicatorsMotherObj.put("PEDDeclared", "N");
            HealthIndicatorsMotherObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsMotherObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsMotherObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsMotherObj.put("CholesterolLevel", "NA");
            HealthIndicatorsMotherObj.put("BodyMassIndex", "30");
            HealthIndicatorsMotherObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsMotherObj.put("CoMorbidity", "N");
            MotherObj.put("HealthIndicators", HealthIndicatorsMotherObj);

            JSONObject CoverDetailsMotherObj = new JSONObject();
            JSONArray MotherCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversMotherObj = new JSONObject();
            BasicInsuranceCoversMotherObj.put("Applicable", "True");
            BasicInsuranceCoversMotherObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversMotherObj.put("CoverRate", "0");
            BasicInsuranceCoversMotherObj.put("CoverPremium", "0");
            BasicInsuranceCoversMotherObj.put("CoverGroups", "Basic Insurance Cover");
            MotherCoversArray.put(BasicInsuranceCoversMotherObj);

            JSONObject PersonalAccidentCoversMotherObj = new JSONObject();
            PersonalAccidentCoversMotherObj.put("Applicable", PersonalStatus1);
            PersonalAccidentCoversMotherObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversMotherObj.put("CoverRate", "0");
            PersonalAccidentCoversMotherObj.put("CoverPremium", "0");
            PersonalAccidentCoversMotherObj.put("CoverGroups", "Personal Accident Cover");
            MotherCoversArray.put(PersonalAccidentCoversMotherObj);

            JSONObject CriticalIllnessCoversMotherObj = new JSONObject();
            CriticalIllnessCoversMotherObj.put("Applicable", CriticalStatus1);
            CriticalIllnessCoversMotherObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversMotherObj.put("CoverRate", "0");
            CriticalIllnessCoversMotherObj.put("CoverPremium", "0");
            CriticalIllnessCoversMotherObj.put("CoverGroups", "Critical Illness Cover");
            MotherCoversArray.put(CriticalIllnessCoversMotherObj);


            JSONObject DailyHospitalCoversMotherObj = new JSONObject();
            DailyHospitalCoversMotherObj.put("Applicable", DailyHospitalSatus1);
            DailyHospitalCoversMotherObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversMotherObj.put("CoverRate", "0");
            DailyHospitalCoversMotherObj.put("CoverPremium", "0");
            DailyHospitalCoversMotherObj.put("CoverGroups", "Daily Hospital Cash Cover");
            MotherCoversArray.put(DailyHospitalCoversMotherObj);

            JSONObject ModernCoversMotherObj = new JSONObject();
            ModernCoversMotherObj.put("Applicable", ModernTreatmentsStatus1);
            ModernCoversMotherObj.put("CoverSI", strSumInsured);
            ModernCoversMotherObj.put("CoverRate", "0");
            ModernCoversMotherObj.put("CoverPremium", "0");
            ModernCoversMotherObj.put("CoverGroups", "Modern Treatments");
            MotherCoversArray.put(ModernCoversMotherObj);
            JSONObject ExtensionPreHospitalizationCoversMotherObj = new JSONObject();
            ExtensionPreHospitalizationCoversMotherObj.put("Applicable", ExtensionPreHospitalization1);
            ExtensionPreHospitalizationCoversMotherObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversMotherObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversMotherObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversMotherObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            MotherCoversArray.put(ExtensionPreHospitalizationCoversMotherObj);

            JSONObject ExtensionPostHospitalizationCoversMotherObj = new JSONObject();
            ExtensionPostHospitalizationCoversMotherObj.put("Applicable", ExtensionPr0Hospitalization1);
            ExtensionPostHospitalizationCoversMotherObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversMotherObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversMotherObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversMotherObj.put("CoverGroups", "Extension under Post-Hospitalization");
            MotherCoversArray.put(ExtensionPostHospitalizationCoversMotherObj);


            JSONObject MaternityAndChildcareCoversMotherObj = new JSONObject();
            MaternityAndChildcareCoversMotherObj.put("Applicable", "False");
            MaternityAndChildcareCoversMotherObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversMotherObj.put("CoverRate", "0");
            MaternityAndChildcareCoversMotherObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversMotherObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            MotherCoversArray.put(MaternityAndChildcareCoversMotherObj);

            JSONObject CoverageForNonMedicalCoversMotherObj = new JSONObject();
            CoverageForNonMedicalCoversMotherObj.put("Applicable", CoverageNonMedical1);
            CoverageForNonMedicalCoversMotherObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversMotherObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversMotherObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversMotherObj.put("CoverGroups", "Coverage for Non-Medical Items");
            MotherCoversArray.put(CoverageForNonMedicalCoversMotherObj);

            JSONObject ConditionWaiverCoversMotherObj = new JSONObject();
            ConditionWaiverCoversMotherObj.put("Applicable", ConditionWaiverStatus1);
            ConditionWaiverCoversMotherObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversMotherObj.put("CoverRate", "0");
            ConditionWaiverCoversMotherObj.put("CoverPremium", "0");
            ConditionWaiverCoversMotherObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            MotherCoversArray.put(ConditionWaiverCoversMotherObj);

            JSONObject PreExistingDiseaseCoversMotherObj = new JSONObject();
            PreExistingDiseaseCoversMotherObj.put("Applicable", PreExistingDiseaseStatus1);
            PreExistingDiseaseCoversMotherObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversMotherObj.put("CoverRate", "0");
            PreExistingDiseaseCoversMotherObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversMotherObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            MotherCoversArray.put(PreExistingDiseaseCoversMotherObj);

            JSONObject OutpatientDentalWaitingCoversMotherObj = new JSONObject();
            OutpatientDentalWaitingCoversMotherObj.put("Applicable", OutpatientDentalStatus1);
            OutpatientDentalWaitingCoversMotherObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversMotherObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversMotherObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversMotherObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            MotherCoversArray.put(OutpatientDentalWaitingCoversMotherObj);

            JSONObject EmergencyTravellingAllowanceCoversMotherObj = new JSONObject();
            EmergencyTravellingAllowanceCoversMotherObj.put("Applicable", EmergencyTravellingStatus1);
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverGroups", "Emergency Travelling Allowance");
            MotherCoversArray.put(EmergencyTravellingAllowanceCoversMotherObj);

            JSONObject SecondOpinionCoversMotherObj = new JSONObject();
            SecondOpinionCoversMotherObj.put("Applicable", SecondOpinionStatus1);
            SecondOpinionCoversMotherObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversMotherObj.put("CoverRate", "0");
            SecondOpinionCoversMotherObj.put("CoverPremium", "0");
            SecondOpinionCoversMotherObj.put("CoverGroups", "Second Opinion");
            MotherCoversArray.put(SecondOpinionCoversMotherObj);

            JSONObject RestCureCoversMotherObj = new JSONObject();
            RestCureCoversMotherObj.put("Applicable", RestCureStatus1);
            RestCureCoversMotherObj.put("CoverSI", strSumInsured);
            RestCureCoversMotherObj.put("CoverRate", "0");
            RestCureCoversMotherObj.put("CoverPremium", "0");
            RestCureCoversMotherObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            MotherCoversArray.put(RestCureCoversMotherObj);

            JSONObject ObesityWeightCoversMotherObj = new JSONObject();
            ObesityWeightCoversMotherObj.put("Applicable", ObesityWeightStatus1);
            ObesityWeightCoversMotherObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversMotherObj.put("CoverRate", "0");
            ObesityWeightCoversMotherObj.put("CoverPremium", "0");
            ObesityWeightCoversMotherObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            MotherCoversArray.put(ObesityWeightCoversMotherObj);

            JSONObject SterilityInfertilityCoversMotherObj = new JSONObject();
            SterilityInfertilityCoversMotherObj.put("Applicable", "False");
            SterilityInfertilityCoversMotherObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversMotherObj.put("CoverRate", "0");
            SterilityInfertilityCoversMotherObj.put("CoverPremium", "0");
            SterilityInfertilityCoversMotherObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            MotherCoversArray.put(SterilityInfertilityCoversMotherObj);

            JSONObject EnhancedOrganDonorCoversMotherObj = new JSONObject();
            EnhancedOrganDonorCoversMotherObj.put("Applicable", EnhancedOrganStatus1);
            EnhancedOrganDonorCoversMotherObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversMotherObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversMotherObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversMotherObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            MotherCoversArray.put(EnhancedOrganDonorCoversMotherObj);

            JSONObject PremiumWaiverCoversMotherObj = new JSONObject();
            PremiumWaiverCoversMotherObj.put("Applicable", PremiumWaiverStatus1);
            PremiumWaiverCoversMotherObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversMotherObj.put("CoverRate", "0");
            PremiumWaiverCoversMotherObj.put("CoverPremium", "0");
            PremiumWaiverCoversMotherObj.put("CoverGroups", "Premium Waiver");
            MotherCoversArray.put(PremiumWaiverCoversMotherObj);

            JSONObject GlobalCoversMotherObj = new JSONObject();
            GlobalCoversMotherObj.put("Applicable", GlobalCoverStatus1);
            GlobalCoversMotherObj.put("CoverSI", strSumInsured);
            GlobalCoversMotherObj.put("CoverRate", "0");
            GlobalCoversMotherObj.put("CoverPremium", "0");
            GlobalCoversMotherObj.put("CoverGroups", "Global Cover");
            MotherCoversArray.put(GlobalCoversMotherObj);


            JSONObject MedicallyAdvisedCoversMotherObj = new JSONObject();
            MedicallyAdvisedCoversMotherObj.put("Applicable", MedicallyAdvisedStatus1);
            MedicallyAdvisedCoversMotherObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversMotherObj.put("CoverRate", "0");
            MedicallyAdvisedCoversMotherObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversMotherObj.put("CoverGroups", "Medically Advised Support Devices");
            MotherCoversArray.put(MedicallyAdvisedCoversMotherObj);

            JSONObject EmergencyCoversMotherObj = new JSONObject();
            EmergencyCoversMotherObj.put("Applicable", EmergencyAssistanceStatus1);
            EmergencyCoversMotherObj.put("CoverSI", strSumInsured);
            EmergencyCoversMotherObj.put("CoverRate", "0");
            EmergencyCoversMotherObj.put("CoverPremium", "0");
            EmergencyCoversMotherObj.put("CoverGroups", "Emergency Assistance Service");
            MotherCoversArray.put(EmergencyCoversMotherObj);

            JSONObject HomeCareTreatmentCoversMotherObj = new JSONObject();
            HomeCareTreatmentCoversMotherObj.put("Applicable", HomeCareStatus1);
            HomeCareTreatmentCoversMotherObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversMotherObj.put("CoverRate", "0");
            HomeCareTreatmentCoversMotherObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversMotherObj.put("CoverGroups", "Home Care Treatment");
            MotherCoversArray.put(HomeCareTreatmentCoversMotherObj);

            JSONObject WellnessBenefitCoversMotherObj = new JSONObject();
            WellnessBenefitCoversMotherObj.put("Applicable", WellnessBenefitStatus1);
            WellnessBenefitCoversMotherObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversMotherObj.put("CoverRate", "0");
            WellnessBenefitCoversMotherObj.put("CoverPremium", "0");
            WellnessBenefitCoversMotherObj.put("CoverGroups", "Wellness Benefit");
            MotherCoversArray.put(WellnessBenefitCoversMotherObj);

            JSONObject DiseaseManagementCoversMotherObj = new JSONObject();
            DiseaseManagementCoversMotherObj.put("Applicable", DiseaseManagementStatus1);
            DiseaseManagementCoversMotherObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversMotherObj.put("CoverRate", "0");
            DiseaseManagementCoversMotherObj.put("CoverPremium", "0");
            DiseaseManagementCoversMotherObj.put("CoverGroups", "Disease Management Program");
            MotherCoversArray.put(DiseaseManagementCoversMotherObj);
            CoverDetailsMotherObj.put("Covers", MotherCoversArray);
            MotherObj.put("CoverDetails", CoverDetailsMotherObj);
            //father
            JSONObject FatherObj = new JSONObject();
            FatherObj.put("InsuredType", "Parent");
            FatherObj.put("FirstName", "");
            FatherObj.put("LastName", "");
            FatherObj.put("DOB", strFatherAgeEditText);
            FatherObj.put("Gender", strGender);
            FatherObj.put("Relationship", "");
            FatherObj.put("Occupation", "");
            FatherObj.put("NomineeName", "");
            FatherObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFatherObj = new JSONObject();
            HealthIndicatorsFatherObj.put("PED", "N");
            HealthIndicatorsFatherObj.put("PEDDeclared", "N");
            HealthIndicatorsFatherObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFatherObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFatherObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFatherObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFatherObj.put("BodyMassIndex", "30");
            HealthIndicatorsFatherObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFatherObj.put("CoMorbidity", "N");
            FatherObj.put("HealthIndicators", HealthIndicatorsFatherObj);

            JSONObject CoverDetailsFatherObj = new JSONObject();
            JSONArray FatherCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversFatherObj = new JSONObject();
            BasicInsuranceCoversFatherObj.put("Applicable", "True");
            BasicInsuranceCoversFatherObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversFatherObj.put("CoverRate", "0");
            BasicInsuranceCoversFatherObj.put("CoverPremium", "0");
            BasicInsuranceCoversFatherObj.put("CoverGroups", "Basic Insurance Cover");
            FatherCoversArray.put(BasicInsuranceCoversFatherObj);

            JSONObject PersonalAccidentCoversFatherObj = new JSONObject();
            PersonalAccidentCoversFatherObj.put("Applicable", PersonalStatus1);
            PersonalAccidentCoversFatherObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFatherObj.put("CoverRate", "0");
            PersonalAccidentCoversFatherObj.put("CoverPremium", "0");
            PersonalAccidentCoversFatherObj.put("CoverGroups", "Personal Accident Cover");
            FatherCoversArray.put(PersonalAccidentCoversFatherObj);

            JSONObject CriticalIllnessCoversFatherObj = new JSONObject();
            CriticalIllnessCoversFatherObj.put("Applicable", CriticalStatus1);
            CriticalIllnessCoversFatherObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFatherObj.put("CoverRate", "0");
            CriticalIllnessCoversFatherObj.put("CoverPremium", "0");
            CriticalIllnessCoversFatherObj.put("CoverGroups", "Critical Illness Cover");
            FatherCoversArray.put(CriticalIllnessCoversFatherObj);


            JSONObject DailyHospitalCoversFatherObj = new JSONObject();
            DailyHospitalCoversFatherObj.put("Applicable", DailyHospitalSatus1);
            DailyHospitalCoversFatherObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFatherObj.put("CoverRate", "0");
            DailyHospitalCoversFatherObj.put("CoverPremium", "0");
            DailyHospitalCoversFatherObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FatherCoversArray.put(DailyHospitalCoversFatherObj);

            JSONObject ModernCoversFatherObj = new JSONObject();
            ModernCoversFatherObj.put("Applicable", ModernTreatmentsStatus1);
            ModernCoversFatherObj.put("CoverSI", strSumInsured);
            ModernCoversFatherObj.put("CoverRate", "0");
            ModernCoversFatherObj.put("CoverPremium", "0");
            ModernCoversFatherObj.put("CoverGroups", "Modern Treatments");
            FatherCoversArray.put(ModernCoversFatherObj);
            JSONObject ExtensionPreHospitalizationCoversFatherObj = new JSONObject();
            ExtensionPreHospitalizationCoversFatherObj.put("Applicable", ExtensionPreHospitalization1);
            ExtensionPreHospitalizationCoversFatherObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFatherObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFatherObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFatherObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FatherCoversArray.put(ExtensionPreHospitalizationCoversFatherObj);

            JSONObject ExtensionPostHospitalizationCoversFatherObj = new JSONObject();
            ExtensionPostHospitalizationCoversFatherObj.put("Applicable", ExtensionPr0Hospitalization1);
            ExtensionPostHospitalizationCoversFatherObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFatherObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFatherObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFatherObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FatherCoversArray.put(ExtensionPostHospitalizationCoversFatherObj);


            JSONObject MaternityAndChildcareCoversFatherObj = new JSONObject();
            MaternityAndChildcareCoversFatherObj.put("Applicable", "False");
            MaternityAndChildcareCoversFatherObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFatherObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFatherObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFatherObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FatherCoversArray.put(MaternityAndChildcareCoversFatherObj);

            JSONObject CoverageForNonMedicalCoversFatherObj = new JSONObject();
            CoverageForNonMedicalCoversFatherObj.put("Applicable", CoverageNonMedical1);
            CoverageForNonMedicalCoversFatherObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFatherObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFatherObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFatherObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FatherCoversArray.put(CoverageForNonMedicalCoversFatherObj);

            JSONObject ConditionWaiverCoversFatherObj = new JSONObject();
            ConditionWaiverCoversFatherObj.put("Applicable", ConditionWaiverStatus1);
            ConditionWaiverCoversFatherObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFatherObj.put("CoverRate", "0");
            ConditionWaiverCoversFatherObj.put("CoverPremium", "0");
            ConditionWaiverCoversFatherObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FatherCoversArray.put(ConditionWaiverCoversFatherObj);

            JSONObject PreExistingDiseaseCoversFatherObj = new JSONObject();
            PreExistingDiseaseCoversFatherObj.put("Applicable", PreExistingDiseaseStatus1);
            PreExistingDiseaseCoversFatherObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFatherObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFatherObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFatherObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FatherCoversArray.put(PreExistingDiseaseCoversFatherObj);

            JSONObject OutpatientDentalWaitingCoversFatherObj = new JSONObject();
            OutpatientDentalWaitingCoversFatherObj.put("Applicable", OutpatientDentalStatus1);
            OutpatientDentalWaitingCoversFatherObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFatherObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFatherObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFatherObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FatherCoversArray.put(OutpatientDentalWaitingCoversFatherObj);

            JSONObject EmergencyTravellingAllowanceCoversFatherObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFatherObj.put("Applicable", EmergencyTravellingStatus1);
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverGroups", "Emergency Travelling Allowance");
            FatherCoversArray.put(EmergencyTravellingAllowanceCoversFatherObj);

            JSONObject SecondOpinionCoversFatherObj = new JSONObject();
            SecondOpinionCoversFatherObj.put("Applicable", SecondOpinionStatus1);
            SecondOpinionCoversFatherObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFatherObj.put("CoverRate", "0");
            SecondOpinionCoversFatherObj.put("CoverPremium", "0");
            SecondOpinionCoversFatherObj.put("CoverGroups", "Second Opinion");
            FatherCoversArray.put(SecondOpinionCoversFatherObj);

            JSONObject RestCureCoversFatherObj = new JSONObject();
            RestCureCoversFatherObj.put("Applicable", RestCureStatus1);
            RestCureCoversFatherObj.put("CoverSI", strSumInsured);
            RestCureCoversFatherObj.put("CoverRate", "0");
            RestCureCoversFatherObj.put("CoverPremium", "0");
            RestCureCoversFatherObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FatherCoversArray.put(RestCureCoversFatherObj);

            JSONObject ObesityWeightCoversFatherObj = new JSONObject();
            ObesityWeightCoversFatherObj.put("Applicable", ObesityWeightStatus1);
            ObesityWeightCoversFatherObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFatherObj.put("CoverRate", "0");
            ObesityWeightCoversFatherObj.put("CoverPremium", "0");
            ObesityWeightCoversFatherObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FatherCoversArray.put(ObesityWeightCoversFatherObj);

            JSONObject SterilityInfertilityCoversFatherObj = new JSONObject();
            SterilityInfertilityCoversFatherObj.put("Applicable", "False");
            SterilityInfertilityCoversFatherObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFatherObj.put("CoverRate", "0");
            SterilityInfertilityCoversFatherObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFatherObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FatherCoversArray.put(SterilityInfertilityCoversFatherObj);

            JSONObject EnhancedOrganDonorCoversFatherObj = new JSONObject();
            EnhancedOrganDonorCoversFatherObj.put("Applicable", EnhancedOrganStatus1);
            EnhancedOrganDonorCoversFatherObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFatherObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFatherObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFatherObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FatherCoversArray.put(EnhancedOrganDonorCoversFatherObj);

            JSONObject PremiumWaiverCoversFatherObj = new JSONObject();
            PremiumWaiverCoversFatherObj.put("Applicable", PremiumWaiverStatus1);
            PremiumWaiverCoversFatherObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFatherObj.put("CoverRate", "0");
            PremiumWaiverCoversFatherObj.put("CoverPremium", "0");
            PremiumWaiverCoversFatherObj.put("CoverGroups", "Premium Waiver");
            FatherCoversArray.put(PremiumWaiverCoversFatherObj);

            JSONObject GlobalCoversFatherObj = new JSONObject();
            GlobalCoversFatherObj.put("Applicable", GlobalCoverStatus1);
            GlobalCoversFatherObj.put("CoverSI", strSumInsured);
            GlobalCoversFatherObj.put("CoverRate", "0");
            GlobalCoversFatherObj.put("CoverPremium", "0");
            GlobalCoversFatherObj.put("CoverGroups", "Global Cover");
            FatherCoversArray.put(GlobalCoversFatherObj);


            JSONObject MedicallyAdvisedCoversFatherObj = new JSONObject();
            MedicallyAdvisedCoversFatherObj.put("Applicable", MedicallyAdvisedStatus1);
            MedicallyAdvisedCoversFatherObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFatherObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFatherObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFatherObj.put("CoverGroups", "Medically Advised Support Devices");
            FatherCoversArray.put(MedicallyAdvisedCoversFatherObj);

            JSONObject EmergencyCoversFatherObj = new JSONObject();
            EmergencyCoversFatherObj.put("Applicable", EmergencyAssistanceStatus1);
            EmergencyCoversFatherObj.put("CoverSI", strSumInsured);
            EmergencyCoversFatherObj.put("CoverRate", "0");
            EmergencyCoversFatherObj.put("CoverPremium", "0");
            EmergencyCoversFatherObj.put("CoverGroups", "Emergency Assistance Service");
            FatherCoversArray.put(EmergencyCoversFatherObj);

            JSONObject HomeCareTreatmentCoversFatherObj = new JSONObject();
            HomeCareTreatmentCoversFatherObj.put("Applicable", HomeCareStatus1);
            HomeCareTreatmentCoversFatherObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFatherObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFatherObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFatherObj.put("CoverGroups", "Home Care Treatment");
            FatherCoversArray.put(HomeCareTreatmentCoversFatherObj);

            JSONObject WellnessBenefitCoversFatherObj = new JSONObject();
            WellnessBenefitCoversFatherObj.put("Applicable", WellnessBenefitStatus1);
            WellnessBenefitCoversFatherObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFatherObj.put("CoverRate", "0");
            WellnessBenefitCoversFatherObj.put("CoverPremium", "0");
            WellnessBenefitCoversFatherObj.put("CoverGroups", "Wellness Benefit");
            FatherCoversArray.put(WellnessBenefitCoversFatherObj);

            JSONObject DiseaseManagementCoversFatherObj = new JSONObject();
            DiseaseManagementCoversFatherObj.put("Applicable", DiseaseManagementStatus1);
            DiseaseManagementCoversFatherObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFatherObj.put("CoverRate", "0");
            DiseaseManagementCoversFatherObj.put("CoverPremium", "0");
            DiseaseManagementCoversFatherObj.put("CoverGroups", "Disease Management Program");
            FatherCoversArray.put(DiseaseManagementCoversFatherObj);
            CoverDetailsFatherObj.put("Covers", FatherCoversArray);
            FatherObj.put("CoverDetails", CoverDetailsFatherObj);

            //motherLaw
            JSONObject MotherLawObj = new JSONObject();
            MotherLawObj.put("InsuredType", "Parent");
            MotherLawObj.put("FirstName", "");
            MotherLawObj.put("LastName", "");
            MotherLawObj.put("DOB", strMotherLawAgeEditText);
            MotherLawObj.put("Gender", "F");
            MotherLawObj.put("Relationship", "");
            MotherLawObj.put("Occupation", "");
            MotherLawObj.put("NomineeName", "");
            MotherLawObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsMotherLawObj = new JSONObject();
            HealthIndicatorsMotherLawObj.put("PED", "N");
            HealthIndicatorsMotherLawObj.put("PEDDeclared", "N");
            HealthIndicatorsMotherLawObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsMotherLawObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsMotherLawObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsMotherLawObj.put("CholesterolLevel", "NA");
            HealthIndicatorsMotherLawObj.put("BodyMassIndex", "30");
            HealthIndicatorsMotherLawObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsMotherLawObj.put("CoMorbidity", "N");
            MotherLawObj.put("HealthIndicators", HealthIndicatorsMotherLawObj);

            JSONObject CoverDetailsMotherLawObj = new JSONObject();
            JSONArray MotherLawCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversMotherLawObj = new JSONObject();
            BasicInsuranceCoversMotherLawObj.put("Applicable", "True");
            BasicInsuranceCoversMotherLawObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversMotherLawObj.put("CoverRate", "0");
            BasicInsuranceCoversMotherLawObj.put("CoverPremium", "0");
            BasicInsuranceCoversMotherLawObj.put("CoverGroups", "Basic Insurance Cover");
            MotherLawCoversArray.put(BasicInsuranceCoversMotherLawObj);

            JSONObject PersonalAccidentCoversMotherLawObj = new JSONObject();
            PersonalAccidentCoversMotherLawObj.put("Applicable", PersonalStatus1);
            PersonalAccidentCoversMotherLawObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversMotherLawObj.put("CoverRate", "0");
            PersonalAccidentCoversMotherLawObj.put("CoverPremium", "0");
            PersonalAccidentCoversMotherLawObj.put("CoverGroups", "Personal Accident Cover");
            MotherLawCoversArray.put(PersonalAccidentCoversMotherLawObj);

            JSONObject CriticalIllnessCoversMotherLawObj = new JSONObject();
            CriticalIllnessCoversMotherLawObj.put("Applicable", CriticalStatus1);
            CriticalIllnessCoversMotherLawObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversMotherLawObj.put("CoverRate", "0");
            CriticalIllnessCoversMotherLawObj.put("CoverPremium", "0");
            CriticalIllnessCoversMotherLawObj.put("CoverGroups", "Critical Illness Cover");
            MotherLawCoversArray.put(CriticalIllnessCoversMotherLawObj);


            JSONObject DailyHospitalCoversMotherLawObj = new JSONObject();
            DailyHospitalCoversMotherLawObj.put("Applicable", DailyHospitalSatus1);
            DailyHospitalCoversMotherLawObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversMotherLawObj.put("CoverRate", "0");
            DailyHospitalCoversMotherLawObj.put("CoverPremium", "0");
            DailyHospitalCoversMotherLawObj.put("CoverGroups", "Daily Hospital Cash Cover");
            MotherLawCoversArray.put(DailyHospitalCoversMotherLawObj);

            JSONObject ModernCoversMotherLawObj = new JSONObject();
            ModernCoversMotherLawObj.put("Applicable", ModernTreatmentsStatus1);
            ModernCoversMotherLawObj.put("CoverSI", strSumInsured);
            ModernCoversMotherLawObj.put("CoverRate", "0");
            ModernCoversMotherLawObj.put("CoverPremium", "0");
            ModernCoversMotherLawObj.put("CoverGroups", "Modern Treatments");
            MotherLawCoversArray.put(ModernCoversMotherLawObj);
            JSONObject ExtensionPreHospitalizationCoversMotherLawObj = new JSONObject();
            ExtensionPreHospitalizationCoversMotherLawObj.put("Applicable", ExtensionPreHospitalization1);
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            MotherLawCoversArray.put(ExtensionPreHospitalizationCoversMotherLawObj);

            JSONObject ExtensionPostHospitalizationCoversMotherLawObj = new JSONObject();
            ExtensionPostHospitalizationCoversMotherLawObj.put("Applicable", ExtensionPr0Hospitalization1);
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverGroups", "Extension under Post-Hospitalization");
            MotherLawCoversArray.put(ExtensionPostHospitalizationCoversMotherLawObj);


            JSONObject MaternityAndChildcareCoversMotherLawObj = new JSONObject();
            MaternityAndChildcareCoversMotherLawObj.put("Applicable", "False");
            MaternityAndChildcareCoversMotherLawObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversMotherLawObj.put("CoverRate", "0");
            MaternityAndChildcareCoversMotherLawObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversMotherLawObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            MotherLawCoversArray.put(MaternityAndChildcareCoversMotherLawObj);

            JSONObject CoverageForNonMedicalCoversMotherLawObj = new JSONObject();
            CoverageForNonMedicalCoversMotherLawObj.put("Applicable", CoverageNonMedical1);
            CoverageForNonMedicalCoversMotherLawObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversMotherLawObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversMotherLawObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversMotherLawObj.put("CoverGroups", "Coverage for Non-Medical Items");
            MotherLawCoversArray.put(CoverageForNonMedicalCoversMotherLawObj);

            JSONObject ConditionWaiverCoversMotherLawObj = new JSONObject();
            ConditionWaiverCoversMotherLawObj.put("Applicable", ConditionWaiverStatus1);
            ConditionWaiverCoversMotherLawObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversMotherLawObj.put("CoverRate", "0");
            ConditionWaiverCoversMotherLawObj.put("CoverPremium", "0");
            ConditionWaiverCoversMotherLawObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            MotherLawCoversArray.put(ConditionWaiverCoversMotherLawObj);

            JSONObject PreExistingDiseaseCoversMotherLawObj = new JSONObject();
            PreExistingDiseaseCoversMotherLawObj.put("Applicable", PreExistingDiseaseStatus1);
            PreExistingDiseaseCoversMotherLawObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversMotherLawObj.put("CoverRate", "0");
            PreExistingDiseaseCoversMotherLawObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversMotherLawObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            MotherLawCoversArray.put(PreExistingDiseaseCoversMotherLawObj);

            JSONObject OutpatientDentalWaitingCoversMotherLawObj = new JSONObject();
            OutpatientDentalWaitingCoversMotherLawObj.put("Applicable", OutpatientDentalStatus1);
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            MotherLawCoversArray.put(OutpatientDentalWaitingCoversMotherLawObj);

            JSONObject EmergencyTravellingAllowanceCoversMotherLawObj = new JSONObject();
            EmergencyTravellingAllowanceCoversMotherLawObj.put("Applicable", EmergencyTravellingStatus1);
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverGroups", "Emergency Travelling Allowance");
            MotherLawCoversArray.put(EmergencyTravellingAllowanceCoversMotherLawObj);

            JSONObject SecondOpinionCoversMotherLawObj = new JSONObject();
            SecondOpinionCoversMotherLawObj.put("Applicable", SecondOpinionStatus1);
            SecondOpinionCoversMotherLawObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversMotherLawObj.put("CoverRate", "0");
            SecondOpinionCoversMotherLawObj.put("CoverPremium", "0");
            SecondOpinionCoversMotherLawObj.put("CoverGroups", "Second Opinion");
            MotherLawCoversArray.put(SecondOpinionCoversMotherLawObj);

            JSONObject RestCureCoversMotherLawObj = new JSONObject();
            RestCureCoversMotherLawObj.put("Applicable", RestCureStatus1);
            RestCureCoversMotherLawObj.put("CoverSI", strSumInsured);
            RestCureCoversMotherLawObj.put("CoverRate", "0");
            RestCureCoversMotherLawObj.put("CoverPremium", "0");
            RestCureCoversMotherLawObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            MotherLawCoversArray.put(RestCureCoversMotherLawObj);

            JSONObject ObesityWeightCoversMotherLawObj = new JSONObject();
            ObesityWeightCoversMotherLawObj.put("Applicable", ObesityWeightStatus1);
            ObesityWeightCoversMotherLawObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversMotherLawObj.put("CoverRate", "0");
            ObesityWeightCoversMotherLawObj.put("CoverPremium", "0");
            ObesityWeightCoversMotherLawObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            MotherLawCoversArray.put(ObesityWeightCoversMotherLawObj);

            JSONObject SterilityInfertilityCoversMotherLawObj = new JSONObject();
            SterilityInfertilityCoversMotherLawObj.put("Applicable", "False");
            SterilityInfertilityCoversMotherLawObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversMotherLawObj.put("CoverRate", "0");
            SterilityInfertilityCoversMotherLawObj.put("CoverPremium", "0");
            SterilityInfertilityCoversMotherLawObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            MotherLawCoversArray.put(SterilityInfertilityCoversMotherLawObj);

            JSONObject EnhancedOrganDonorCoversMotherLawObj = new JSONObject();
            EnhancedOrganDonorCoversMotherLawObj.put("Applicable", EnhancedOrganStatus1);
            EnhancedOrganDonorCoversMotherLawObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversMotherLawObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversMotherLawObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversMotherLawObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            MotherLawCoversArray.put(EnhancedOrganDonorCoversMotherLawObj);

            JSONObject PremiumWaiverCoversMotherLawObj = new JSONObject();
            PremiumWaiverCoversMotherLawObj.put("Applicable", PremiumWaiverStatus1);
            PremiumWaiverCoversMotherLawObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversMotherLawObj.put("CoverRate", "0");
            PremiumWaiverCoversMotherLawObj.put("CoverPremium", "0");
            PremiumWaiverCoversMotherLawObj.put("CoverGroups", "Premium Waiver");
            MotherLawCoversArray.put(PremiumWaiverCoversMotherLawObj);

            JSONObject GlobalCoversMotherLawObj = new JSONObject();
            GlobalCoversMotherLawObj.put("Applicable", GlobalCoverStatus1);
            GlobalCoversMotherLawObj.put("CoverSI", strSumInsured);
            GlobalCoversMotherLawObj.put("CoverRate", "0");
            GlobalCoversMotherLawObj.put("CoverPremium", "0");
            GlobalCoversMotherLawObj.put("CoverGroups", "Global Cover");
            MotherLawCoversArray.put(GlobalCoversMotherLawObj);


            JSONObject MedicallyAdvisedCoversMotherLawObj = new JSONObject();
            MedicallyAdvisedCoversMotherLawObj.put("Applicable", MedicallyAdvisedStatus1);
            MedicallyAdvisedCoversMotherLawObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversMotherLawObj.put("CoverRate", "0");
            MedicallyAdvisedCoversMotherLawObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversMotherLawObj.put("CoverGroups", "Medically Advised Support Devices");
            MotherLawCoversArray.put(MedicallyAdvisedCoversMotherLawObj);

            JSONObject EmergencyCoversMotherLawObj = new JSONObject();
            EmergencyCoversMotherLawObj.put("Applicable", EmergencyAssistanceStatus1);
            EmergencyCoversMotherLawObj.put("CoverSI", strSumInsured);
            EmergencyCoversMotherLawObj.put("CoverRate", "0");
            EmergencyCoversMotherLawObj.put("CoverPremium", "0");
            EmergencyCoversMotherLawObj.put("CoverGroups", "Emergency Assistance Service");
            MotherLawCoversArray.put(EmergencyCoversMotherLawObj);

            JSONObject HomeCareTreatmentCoversMotherLawObj = new JSONObject();
            HomeCareTreatmentCoversMotherLawObj.put("Applicable", HomeCareStatus1);
            HomeCareTreatmentCoversMotherLawObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversMotherLawObj.put("CoverRate", "0");
            HomeCareTreatmentCoversMotherLawObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversMotherLawObj.put("CoverGroups", "Home Care Treatment");
            MotherLawCoversArray.put(HomeCareTreatmentCoversMotherLawObj);

            JSONObject WellnessBenefitCoversMotherLawObj = new JSONObject();
            WellnessBenefitCoversMotherLawObj.put("Applicable", WellnessBenefitStatus1);
            WellnessBenefitCoversMotherLawObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversMotherLawObj.put("CoverRate", "0");
            WellnessBenefitCoversMotherLawObj.put("CoverPremium", "0");
            WellnessBenefitCoversMotherLawObj.put("CoverGroups", "Wellness Benefit");
            MotherLawCoversArray.put(WellnessBenefitCoversMotherLawObj);

            JSONObject DiseaseManagementCoversMotherLawObj = new JSONObject();
            DiseaseManagementCoversMotherLawObj.put("Applicable", DiseaseManagementStatus1);
            DiseaseManagementCoversMotherLawObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversMotherLawObj.put("CoverRate", "0");
            DiseaseManagementCoversMotherLawObj.put("CoverPremium", "0");
            DiseaseManagementCoversMotherLawObj.put("CoverGroups", "Disease Management Program");
            MotherLawCoversArray.put(DiseaseManagementCoversMotherLawObj);
            CoverDetailsMotherLawObj.put("Covers", MotherLawCoversArray);
            MotherLawObj.put("CoverDetails", CoverDetailsMotherLawObj);


            //FatherLaw
            JSONObject FatherLawObj = new JSONObject();
            FatherLawObj.put("InsuredType", "Parent");
            FatherLawObj.put("FirstName", "");
            FatherLawObj.put("LastName", "");
            FatherLawObj.put("DOB", strFatherLawAgeEditText);
            FatherLawObj.put("Gender", strGender);
            FatherLawObj.put("Relationship", "");
            FatherLawObj.put("Occupation", "");
            FatherLawObj.put("NomineeName", "");
            FatherLawObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFatherLawObj = new JSONObject();
            HealthIndicatorsFatherLawObj.put("PED", "N");
            HealthIndicatorsFatherLawObj.put("PEDDeclared", "N");
            HealthIndicatorsFatherLawObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFatherLawObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFatherLawObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFatherLawObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFatherLawObj.put("BodyMassIndex", "30");
            HealthIndicatorsFatherLawObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFatherLawObj.put("CoMorbidity", "N");
            FatherLawObj.put("HealthIndicators", HealthIndicatorsFatherLawObj);

            JSONObject CoverDetailsFatherLawObj = new JSONObject();
            JSONArray FatherLawCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversFatherLawObj = new JSONObject();
            BasicInsuranceCoversFatherLawObj.put("Applicable", "True");
            BasicInsuranceCoversFatherLawObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversFatherLawObj.put("CoverRate", "0");
            BasicInsuranceCoversFatherLawObj.put("CoverPremium", "0");
            BasicInsuranceCoversFatherLawObj.put("CoverGroups", "Basic Insurance Cover");
            FatherLawCoversArray.put(BasicInsuranceCoversFatherLawObj);

            JSONObject PersonalAccidentCoversFatherLawObj = new JSONObject();
            PersonalAccidentCoversFatherLawObj.put("Applicable", PersonalStatus1);
            PersonalAccidentCoversFatherLawObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFatherLawObj.put("CoverRate", "0");
            PersonalAccidentCoversFatherLawObj.put("CoverPremium", "0");
            PersonalAccidentCoversFatherLawObj.put("CoverGroups", "Personal Accident Cover");
            FatherLawCoversArray.put(PersonalAccidentCoversFatherLawObj);

            JSONObject CriticalIllnessCoversFatherLawObj = new JSONObject();
            CriticalIllnessCoversFatherLawObj.put("Applicable", CriticalStatus1);
            CriticalIllnessCoversFatherLawObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFatherLawObj.put("CoverRate", "0");
            CriticalIllnessCoversFatherLawObj.put("CoverPremium", "0");
            CriticalIllnessCoversFatherLawObj.put("CoverGroups", "Critical Illness Cover");
            FatherLawCoversArray.put(CriticalIllnessCoversFatherLawObj);


            JSONObject DailyHospitalCoversFatherLawObj = new JSONObject();
            DailyHospitalCoversFatherLawObj.put("Applicable", DailyHospitalSatus1);
            DailyHospitalCoversFatherLawObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFatherLawObj.put("CoverRate", "0");
            DailyHospitalCoversFatherLawObj.put("CoverPremium", "0");
            DailyHospitalCoversFatherLawObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FatherLawCoversArray.put(DailyHospitalCoversFatherLawObj);

            JSONObject ModernCoversFatherLawObj = new JSONObject();
            ModernCoversFatherLawObj.put("Applicable", ModernTreatmentsStatus1);
            ModernCoversFatherLawObj.put("CoverSI", strSumInsured);
            ModernCoversFatherLawObj.put("CoverRate", "0");
            ModernCoversFatherLawObj.put("CoverPremium", "0");
            ModernCoversFatherLawObj.put("CoverGroups", "Modern Treatments");
            FatherLawCoversArray.put(ModernCoversFatherLawObj);
            JSONObject ExtensionPreHospitalizationCoversFatherLawObj = new JSONObject();
            ExtensionPreHospitalizationCoversFatherLawObj.put("Applicable", ExtensionPreHospitalization1);
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FatherLawCoversArray.put(ExtensionPreHospitalizationCoversFatherLawObj);

            JSONObject ExtensionPostHospitalizationCoversFatherLawObj = new JSONObject();
            ExtensionPostHospitalizationCoversFatherLawObj.put("Applicable", ExtensionPr0Hospitalization1);
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FatherLawCoversArray.put(ExtensionPostHospitalizationCoversFatherLawObj);


            JSONObject MaternityAndChildcareCoversFatherLawObj = new JSONObject();
            MaternityAndChildcareCoversFatherLawObj.put("Applicable", "False");
            MaternityAndChildcareCoversFatherLawObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFatherLawObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFatherLawObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFatherLawObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FatherLawCoversArray.put(MaternityAndChildcareCoversFatherLawObj);

            JSONObject CoverageForNonMedicalCoversFatherLawObj = new JSONObject();
            CoverageForNonMedicalCoversFatherLawObj.put("Applicable", CoverageNonMedical1);
            CoverageForNonMedicalCoversFatherLawObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFatherLawObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFatherLawObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFatherLawObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FatherLawCoversArray.put(CoverageForNonMedicalCoversFatherLawObj);

            JSONObject ConditionWaiverCoversFatherLawObj = new JSONObject();
            ConditionWaiverCoversFatherLawObj.put("Applicable", ConditionWaiverStatus1);
            ConditionWaiverCoversFatherLawObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFatherLawObj.put("CoverRate", "0");
            ConditionWaiverCoversFatherLawObj.put("CoverPremium", "0");
            ConditionWaiverCoversFatherLawObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FatherLawCoversArray.put(ConditionWaiverCoversFatherLawObj);

            JSONObject PreExistingDiseaseCoversFatherLawObj = new JSONObject();
            PreExistingDiseaseCoversFatherLawObj.put("Applicable", PreExistingDiseaseStatus1);
            PreExistingDiseaseCoversFatherLawObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFatherLawObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFatherLawObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFatherLawObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FatherLawCoversArray.put(PreExistingDiseaseCoversFatherLawObj);

            JSONObject OutpatientDentalWaitingCoversFatherLawObj = new JSONObject();
            OutpatientDentalWaitingCoversFatherLawObj.put("Applicable", OutpatientDentalStatus1);
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FatherLawCoversArray.put(OutpatientDentalWaitingCoversFatherLawObj);

            JSONObject EmergencyTravellingAllowanceCoversFatherLawObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFatherLawObj.put("Applicable", EmergencyTravellingStatus1);
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverGroups", "Emergency Travelling Allowance");
            FatherLawCoversArray.put(EmergencyTravellingAllowanceCoversFatherLawObj);

            JSONObject SecondOpinionCoversFatherLawObj = new JSONObject();
            SecondOpinionCoversFatherLawObj.put("Applicable", SecondOpinionStatus1);
            SecondOpinionCoversFatherLawObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFatherLawObj.put("CoverRate", "0");
            SecondOpinionCoversFatherLawObj.put("CoverPremium", "0");
            SecondOpinionCoversFatherLawObj.put("CoverGroups", "Second Opinion");
            FatherLawCoversArray.put(SecondOpinionCoversFatherLawObj);

            JSONObject RestCureCoversFatherLawObj = new JSONObject();
            RestCureCoversFatherLawObj.put("Applicable", RestCureStatus1);
            RestCureCoversFatherLawObj.put("CoverSI", strSumInsured);
            RestCureCoversFatherLawObj.put("CoverRate", "0");
            RestCureCoversFatherLawObj.put("CoverPremium", "0");
            RestCureCoversFatherLawObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FatherLawCoversArray.put(RestCureCoversFatherLawObj);

            JSONObject ObesityWeightCoversFatherLawObj = new JSONObject();
            ObesityWeightCoversFatherLawObj.put("Applicable", ObesityWeightStatus1);
            ObesityWeightCoversFatherLawObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFatherLawObj.put("CoverRate", "0");
            ObesityWeightCoversFatherLawObj.put("CoverPremium", "0");
            ObesityWeightCoversFatherLawObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FatherLawCoversArray.put(ObesityWeightCoversFatherLawObj);

            JSONObject SterilityInfertilityCoversFatherLawObj = new JSONObject();
            SterilityInfertilityCoversFatherLawObj.put("Applicable", "False");
            SterilityInfertilityCoversFatherLawObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFatherLawObj.put("CoverRate", "0");
            SterilityInfertilityCoversFatherLawObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFatherLawObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FatherLawCoversArray.put(SterilityInfertilityCoversFatherLawObj);

            JSONObject EnhancedOrganDonorCoversFatherLawObj = new JSONObject();
            EnhancedOrganDonorCoversFatherLawObj.put("Applicable", EnhancedOrganStatus1);
            EnhancedOrganDonorCoversFatherLawObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFatherLawObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFatherLawObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFatherLawObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FatherLawCoversArray.put(EnhancedOrganDonorCoversFatherLawObj);

            JSONObject PremiumWaiverCoversFatherLawObj = new JSONObject();
            PremiumWaiverCoversFatherLawObj.put("Applicable", PremiumWaiverStatus1);
            PremiumWaiverCoversFatherLawObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFatherLawObj.put("CoverRate", "0");
            PremiumWaiverCoversFatherLawObj.put("CoverPremium", "0");
            PremiumWaiverCoversFatherLawObj.put("CoverGroups", "Premium Waiver");
            FatherLawCoversArray.put(PremiumWaiverCoversFatherLawObj);

            JSONObject GlobalCoversFatherLawObj = new JSONObject();
            GlobalCoversFatherLawObj.put("Applicable", GlobalCoverStatus1);
            GlobalCoversFatherLawObj.put("CoverSI", strSumInsured);
            GlobalCoversFatherLawObj.put("CoverRate", "0");
            GlobalCoversFatherLawObj.put("CoverPremium", "0");
            GlobalCoversFatherLawObj.put("CoverGroups", "Global Cover");
            FatherLawCoversArray.put(GlobalCoversFatherLawObj);


            JSONObject MedicallyAdvisedCoversFatherLawObj = new JSONObject();
            MedicallyAdvisedCoversFatherLawObj.put("Applicable", MedicallyAdvisedStatus1);
            MedicallyAdvisedCoversFatherLawObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFatherLawObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFatherLawObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFatherLawObj.put("CoverGroups", "Medically Advised Support Devices");
            FatherLawCoversArray.put(MedicallyAdvisedCoversFatherLawObj);

            JSONObject EmergencyCoversFatherLawObj = new JSONObject();
            EmergencyCoversFatherLawObj.put("Applicable", EmergencyAssistanceStatus1);
            EmergencyCoversFatherLawObj.put("CoverSI", strSumInsured);
            EmergencyCoversFatherLawObj.put("CoverRate", "0");
            EmergencyCoversFatherLawObj.put("CoverPremium", "0");
            EmergencyCoversFatherLawObj.put("CoverGroups", "Emergency Assistance Service");
            FatherLawCoversArray.put(EmergencyCoversFatherLawObj);

            JSONObject HomeCareTreatmentCoversFatherLawObj = new JSONObject();
            HomeCareTreatmentCoversFatherLawObj.put("Applicable", HomeCareStatus1);
            HomeCareTreatmentCoversFatherLawObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFatherLawObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFatherLawObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFatherLawObj.put("CoverGroups", "Home Care Treatment");
            FatherLawCoversArray.put(HomeCareTreatmentCoversFatherLawObj);

            JSONObject WellnessBenefitCoversFatherLawObj = new JSONObject();
            WellnessBenefitCoversFatherLawObj.put("Applicable", WellnessBenefitStatus1);
            WellnessBenefitCoversFatherLawObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFatherLawObj.put("CoverRate", "0");
            WellnessBenefitCoversFatherLawObj.put("CoverPremium", "0");
            WellnessBenefitCoversFatherLawObj.put("CoverGroups", "Wellness Benefit");
            FatherLawCoversArray.put(WellnessBenefitCoversFatherLawObj);

            JSONObject DiseaseManagementCoversFatherLawObj = new JSONObject();
            DiseaseManagementCoversFatherLawObj.put("Applicable", DiseaseManagementStatus1);
            DiseaseManagementCoversFatherLawObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFatherLawObj.put("CoverRate", "0");
            DiseaseManagementCoversFatherLawObj.put("CoverPremium", "0");
            DiseaseManagementCoversFatherLawObj.put("CoverGroups", "Disease Management Program");
            FatherLawCoversArray.put(DiseaseManagementCoversFatherLawObj);
            CoverDetailsFatherLawObj.put("Covers", FatherLawCoversArray);
            FatherLawObj.put("CoverDetails", CoverDetailsFatherLawObj);

            if (str_policyType_spinner.equals("Individual")) {
                if (strCheckBoxSelf.equals("Checked") || strCheckBoxSpouse.equals("Checked") || strCheckBoxMother.equals("Checked") || strCheckBoxFather.equals("Checked") || strCheckBoxMotherLaw.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                    InsuredDetailsGroupArray.put(InsuredDetailsObj);
                }
            } else {
                if (strCheckBoxSelf.equals("Checked")) {
                    InsuredDetailsGroupArray.put(InsuredDetailsObj);
                }
                if (strCheckBoxSpouse.equals("Checked")) {
                    InsuredDetailsGroupArray.put(SecondAdultObj);
                }
                if (mCounter == 1) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                }
                if (mCounter == 2) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                    InsuredDetailsGroupArray.put(SecondChildObj);
                }
                if (mCounter == 3) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                    InsuredDetailsGroupArray.put(SecondChildObj);
                    InsuredDetailsGroupArray.put(ThirdChildObj);
                }
                if (mCounter == 4) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                    InsuredDetailsGroupArray.put(SecondChildObj);
                    InsuredDetailsGroupArray.put(ThirdChildObj);
                    InsuredDetailsGroupArray.put(FourthChildObj);
                }
                if (strCheckBoxMother.equals("Checked")) {
                    InsuredDetailsGroupArray.put(MotherObj);
                }
                if (strCheckBoxFather.equals("Checked")) {
                    InsuredDetailsGroupArray.put(FatherObj);
                }
                if (strCheckBoxMotherLaw.equals("Checked")) {
                    InsuredDetailsGroupArray.put(MotherLawObj);
                }
                if (strCheckBoxFatherLaw.equals("Checked")) {
                    InsuredDetailsGroupArray.put(FatherLawObj);
                }
            }

            InsuredDetailsObject.put("InsuredDetailsGroup", InsuredDetailsGroupArray);
            RisksDataObject.put("InsuredDetails", InsuredDetailsObject);

            //otherLoading
            JSONObject OtherLoadingsObject = new JSONObject();
            JSONObject OtherLoadingGroupObject = new JSONObject();
            JSONObject OtherLoadingGroupDataObject = new JSONObject();
            OtherLoadingGroupDataObject.put("LoadingAmount", "0");
            OtherLoadingGroupDataObject.put("LoadingRate", "0");
            OtherLoadingGroupDataObject.put("SumInsured", "0");
            OtherLoadingGroupDataObject.put("Rate", "0");
            OtherLoadingGroupDataObject.put("Premium", "0");
            OtherLoadingGroupDataObject.put("Applicable", "False");
            OtherLoadingGroupDataObject.put("Description", "NULL");
            OtherLoadingGroupObject.put("OtherLoadingGroupData", OtherLoadingGroupDataObject);
            OtherLoadingsObject.put("OtherLoadingGroup", OtherLoadingGroupObject);

            RisksDataObject.put("OtherLoadings", OtherLoadingsObject);
//            RiskObject.put("RisksData",RisksDataObject);
//            RisksObject.put("Risks",RiskObject);
            //OtherDiscounts
            JSONObject OtherDiscountsObject = new JSONObject();
            JSONArray OtherDiscountGroupArray = new JSONArray();
            JSONObject TreatmentObject = new JSONObject();
            TreatmentObject.put("DiscountAmount", "0");
            TreatmentObject.put("DiscountRate", "0");
            TreatmentObject.put("SumInsured", strSumInsured);
            TreatmentObject.put("Rate", "0");
            TreatmentObject.put("Premium", "0");
            TreatmentObject.put("Applicable", "True");
            TreatmentObject.put("Description", "Treatment only in tiered network");
            OtherDiscountGroupArray.put(TreatmentObject);

            JSONObject CoPaymentObject = new JSONObject();
            CoPaymentObject.put("DiscountAmount", "0");
            CoPaymentObject.put("DiscountRate", "0");
            CoPaymentObject.put("SumInsured", strSumInsured);
            CoPaymentObject.put("Rate", "0");
            CoPaymentObject.put("Premium", "0");
            CoPaymentObject.put("Applicable", "True");
            CoPaymentObject.put("Description", "Co-payment");
            OtherDiscountGroupArray.put(CoPaymentObject);


            JSONObject LongObject = new JSONObject();
            LongObject.put("DiscountAmount", "0");
            LongObject.put("DiscountRate", "0");
            LongObject.put("SumInsured", strSumInsured);
            LongObject.put("Rate", "0");
            LongObject.put("Premium", "0");
            LongObject.put("Applicable", LongTermDiscountStatus);
            LongObject.put("Description", "Long term discount");
            OtherDiscountGroupArray.put(LongObject);

            JSONObject FamilyDiscountObject = new JSONObject();
            FamilyDiscountObject.put("DiscountAmount", "0");
            FamilyDiscountObject.put("DiscountRate", "0");
            FamilyDiscountObject.put("SumInsured", strSumInsured);
            FamilyDiscountObject.put("Rate", "0");
            FamilyDiscountObject.put("Premium", "0");
            FamilyDiscountObject.put("Applicable", "False");
            FamilyDiscountObject.put("Description", "Family Discount");
            OtherDiscountGroupArray.put(FamilyDiscountObject);

            JSONObject SubCategoryObject = new JSONObject();
            SubCategoryObject.put("DiscountAmount", "0");
            SubCategoryObject.put("DiscountRate", "0");
            SubCategoryObject.put("SumInsured", strSumInsured);
            SubCategoryObject.put("Rate", "0");
            SubCategoryObject.put("Premium", "0");
            SubCategoryObject.put("Applicable", "True");
            SubCategoryObject.put("Description", "Sub Category Discount");
            OtherDiscountGroupArray.put(SubCategoryObject);


            JSONObject DirectPolicyObject = new JSONObject();
            DirectPolicyObject.put("DiscountAmount", "0");
            DirectPolicyObject.put("DiscountRate", "0");
            DirectPolicyObject.put("SumInsured", strSumInsured);
            DirectPolicyObject.put("Rate", "0");
            DirectPolicyObject.put("Premium", "0");
            DirectPolicyObject.put("Applicable", "True");
            DirectPolicyObject.put("Description", "Direct Policy Discount");
            OtherDiscountGroupArray.put(DirectPolicyObject);

            JSONObject LoyaltyDiscountObject = new JSONObject();
            LoyaltyDiscountObject.put("DiscountAmount", "0");
            LoyaltyDiscountObject.put("DiscountRate", "0");
            LoyaltyDiscountObject.put("SumInsured", strSumInsured);
            LoyaltyDiscountObject.put("Rate", "0");
            LoyaltyDiscountObject.put("Premium", "0");
            LoyaltyDiscountObject.put("Applicable", LoyaltyDiscountStatus);
            LoyaltyDiscountObject.put("Description", "Loyalty Discount");
            OtherDiscountGroupArray.put(LoyaltyDiscountObject);

            JSONObject EmployeeDiscountObject = new JSONObject();
            EmployeeDiscountObject.put("DiscountAmount", "0");
            EmployeeDiscountObject.put("DiscountRate", "0");
            EmployeeDiscountObject.put("SumInsured", strSumInsured);
            EmployeeDiscountObject.put("Rate", "0");
            EmployeeDiscountObject.put("Premium", "0");
            EmployeeDiscountObject.put("Applicable", "False");
            EmployeeDiscountObject.put("Description", "Employee Discount");
            OtherDiscountGroupArray.put(EmployeeDiscountObject);

            JSONObject OrganDonorDiscountObject = new JSONObject();
            OrganDonorDiscountObject.put("DiscountAmount", "0");
            OrganDonorDiscountObject.put("DiscountRate", "0");
            OrganDonorDiscountObject.put("SumInsured", strSumInsured);
            OrganDonorDiscountObject.put("Rate", "0");
            OrganDonorDiscountObject.put("Premium", "0");
            OrganDonorDiscountObject.put("Applicable", "False");
            OrganDonorDiscountObject.put("Description", "Organ Donor Discount");
            OtherDiscountGroupArray.put(OrganDonorDiscountObject);

            OtherDiscountsObject.put("OtherDiscountGroup", OtherDiscountGroupArray);
            RisksDataObject.put("OtherDiscounts", OtherDiscountsObject);
            RiskObject.put("RisksData", RisksDataObject);
            RisksObject.put("Risk", RiskObject);
            ProductObject.put("Risks", RisksObject);

            RootObject.put("Product", ProductObject);
            //PaymentDetails
            JSONObject PaymentDetailsObj = new JSONObject();
            JSONObject PaymentEntryObj = new JSONObject();
            PaymentEntryObj.put("PaymentId", "NULL");
            PaymentEntryObj.put("MICRCheque", "NULL");
            PaymentEntryObj.put("InstrumentDate", "NULL");
            PaymentEntryObj.put("DraweeBankName", "NULL");
            PaymentEntryObj.put("HOUSEBANKNAME", "NULL");
            PaymentEntryObj.put("AmountPaid", "NULL");
            PaymentEntryObj.put("PaymentType", "NULL");
            PaymentEntryObj.put("PaymentMode", "NULL");
            PaymentEntryObj.put("InstrumentNo", "NULL");
            PaymentEntryObj.put("Status", "NULL");
            PaymentEntryObj.put("DepositSlipNo", "NULL");
            PaymentEntryObj.put("PayerType", "NULL");
            PaymentDetailsObj.put("PaymentEntry", PaymentEntryObj);
            RootObject.put("PaymentDetails", PaymentDetailsObj);
            //Error
            JSONObject ErrorsObj = new JSONObject();
            ErrorsObj.put("ErrorCode", "0");
            ErrorsObj.put("ErrDescription", "NULL");
            RootObject.put("Errors", ErrorsObj);

            //mainObject
            object.put("Root", RootObject);
        }
        catch (Exception e) {
            e.printStackTrace();
        }
        ProjectVolleyRequest req = new ProjectVolleyRequest(NewCHIAddOns.this, object, UrlHealthConstants.revisedCHIURL, new ResponseListener() {
            @Override
            public void onSuccess(JSONObject object, int Tag) {
                try {
                    JSONObject RootJsonObject = object.getJSONObject("Root");
                    JSONObject ErrorsJsonObject = RootJsonObject.getJSONObject("Errors");
                    String ErrDescription = ErrorsJsonObject.getString("ErrDescription");
                    if (ErrDescription.equals("")) {
                        if (Tag == RequestHealthConstants.RevisedCHIQuotation) {
                            try {
                                JSONObject CustomerJsonObject = RootJsonObject.getJSONObject("Customer");
                                Log.e("CustomerJsonObject", CustomerJsonObject.toString());
                                JSONObject ProductJsonObject = RootJsonObject.getJSONObject("Product");
                                Log.e("ProductJsonObject", ProductJsonObject.toString());
                                JSONObject PremiumCalculationJsonObject = ProductJsonObject.getJSONObject("PremiumCalculation");
                                JSONObject RisksJsonObject = ProductJsonObject.getJSONObject("Risks");
                                Log.e("RisksJsonObject", RisksJsonObject.toString());
                                JSONObject newRisksJsonObject = RisksJsonObject.getJSONObject("Risk");
                                Log.e("newRisksJsonObject", newRisksJsonObject.toString());
                                JSONObject RisksDataJsonObject = newRisksJsonObject.getJSONObject("RisksData");
                                Log.e("RisksDataJsonObject", RisksDataJsonObject.toString());
                                JSONObject InsuredDetailsJsonObject = RisksDataJsonObject.getJSONObject("InsuredDetails");
                                Log.e("InsuredDetailsJsonObject", InsuredDetailsJsonObject.toString());
                                InsuredDetailsGroupArray = InsuredDetailsJsonObject.getJSONArray("InsuredDetailsGroup");
                                Log.e("InsuredDetailsGroupArray", String.valueOf(InsuredDetailsGroupArray));
                                JSONObject OtherDiscountsJsonObject = RisksDataJsonObject.getJSONObject("OtherDiscounts");
                                JSONArray OtherDiscountsJsonArray1 = OtherDiscountsJsonObject.getJSONArray("OtherDiscountGroup");
                                for (int j = 0; j < OtherDiscountsJsonArray1.length(); j++) {
                                    JSONObject OtherDiscountsObject = OtherDiscountsJsonArray1.getJSONObject(j);
                                    String DescriptionName = OtherDiscountsObject.getString("Description");
                                    if (DescriptionName.equals("Co-payment")) {
                                        CoPaymentDiscountPremium2 = OtherDiscountsObject.getString("Premium");
                                    } else if (DescriptionName.equals("Sub Category Discount")) {
                                        SubCategoryDiscountPremium2 = OtherDiscountsObject.getString("Premium");
                                    } else if (DescriptionName.equals("Treatment only in tiered network")) {
                                        TreatmentPremium2 = OtherDiscountsObject.getString("Premium");
                                    }

                                }
                                for (int k = 0; k < InsuredDetailsGroupArray.length(); k++) {
                                    if (str_policyType_spinner.equals("Individual")) {
                                        JSONObject CoverDetailsJsonObject = InsuredDetailsGroupArray.getJSONObject(0).getJSONObject("CoverDetails");
                                        Log.e("CoverDetailsJsonObject", CoverDetailsJsonObject.toString());
                                        JSONArray CoversArray = CoverDetailsJsonObject.getJSONArray("Covers");
                                        Log.e("CoversArray", String.valueOf(CoversArray));
                                        for (int l = 0; l < CoversArray.length(); l++) {
                                            JSONObject JsonObjectCover = CoversArray.getJSONObject(l);
                                            String CoverName = JsonObjectCover.getString("CoverGroups");
                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                BasicInsuranceCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                PersonalAccidentCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                CriticalIllnessCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                DailyHospitalCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Modern Treatments")) {
                                                ModernTreatmentCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                ExtensionPreHospitalizationCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                ExtensionProHospitalizationCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                MaternityChildcareCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                MaternityChildcareCoverPremium = JsonObjectCover.getString("CoverPremium");
                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                CoverageNonMedicalCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                ConditionWaiverCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                PreExistingDiseaseCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                OutpatientDentalCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                EmergencyTravellingCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Second Opinion")) {
                                                SecondOpinionCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                RestCureCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                ObesityWeightCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                SterilityInfertilityCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                SterilityInfertilityCoverPremium = JsonObjectCover.getString("CoverPremium");
                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                EnhancedCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Premium Waiver")) {
                                                PremiumWaiverCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Global Cover")) {
                                                GlobalCoverCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                GlobalCoverCoverPremium = JsonObjectCover.getString("CoverPremium");
                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                MedicallyAdvisedCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                EmergencyAssistanceCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                HomeCareCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                WellnessBenefitCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            } else if (CoverName.equals("Disease Management Program")) {
                                                DiseaseManagementCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                            }

                                        }
                                    } else {
                                        if (strCheckBoxSelf.equals("Checked") && strCheckBoxSpouse.equals("Checked")) {
                                            FirstAdultTrue();
                                            SecondAdultTrue();
                                            if (mCounter == 1) {
                                                ChildOneTwoAdultTrue();
                                                if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray.getJSONObject(3).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayM.length(); l++) {
                                                        JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        }

                                                    }
                                                    if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(4).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }
                                                    }
                                                } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(3).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayF.length(); l++) {
                                                        JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        }

                                                    }

                                                }
                                            } else if (mCounter == 2) {
                                                ChildOneTwoAdultTrue();
                                                childTwoAdultTrue();
                                                if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray.getJSONObject(4).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayM.length(); l++) {
                                                        JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        }

                                                    }
                                                    if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(5).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }
                                                    }
                                                } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(4).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayF.length(); l++) {
                                                        JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        }

                                                    }

                                                }
                                            } else if (mCounter == 3) {
                                                ChildOneTwoAdultTrue();
                                                childTwoAdultTrue();
                                                childThreeAdultTrue();
                                                if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray.getJSONObject(5).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayM.length(); l++) {
                                                        JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        }

                                                    }
                                                } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(5).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayF.length(); l++) {
                                                        JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        }

                                                    }

                                                }
                                            } else if (mCounter == 4) {
                                                ChildOneTwoAdultTrue();
                                                childTwoAdultTrue();
                                                childThreeAdultTrue();
                                                childFourAdultTrue();
                                            } else {
                                                if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray.getJSONObject(2).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayM.length(); l++) {
                                                        JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        }

                                                    }
                                                    if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(3).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }
                                                    }
                                                } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(2).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayF.length(); l++) {
                                                        JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        }

                                                    }

                                                }
                                            }
                                        } else {
                                            if (strCheckBoxSelf.equals("Checked") || strCheckBoxSpouse.equals("Checked")) {
                                                FirstAdultTrue();
                                                if (mCounter == 1) {
                                                    childOneTrue();
                                                    if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray.getJSONObject(2).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayM.length(); l++) {
                                                            JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            }

                                                        }
                                                        if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                            JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(3).getJSONObject("CoverDetails");
                                                            JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                            for (int l = 0; l < CoversArrayF.length(); l++) {
                                                                JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                                String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                                if (CoverName.equals("Basic Insurance Cover")) {
                                                                    BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Personal Accident Cover")) {
                                                                    PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Critical Illness Cover")) {
                                                                    CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                    DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Modern Treatments")) {
                                                                    ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                    ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                    ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                    MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                    CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                    ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                    PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                    OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                    EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Second Opinion")) {
                                                                    SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                    RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                    ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                    SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                    EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Premium Waiver")) {
                                                                    PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Global Cover")) {
                                                                    GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                    MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                    EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Home Care Treatment")) {
                                                                    HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Wellness Benefit")) {
                                                                    WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Disease Management Program")) {
                                                                    DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                }

                                                            }
                                                        }
                                                    } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(2).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }

                                                    }
                                                } else if (mCounter == 2) {
                                                    childOneTrue();
                                                    childTwoTrue();
                                                    if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray.getJSONObject(3).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayM.length(); l++) {
                                                            JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            }

                                                        }
                                                        if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                            JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(4).getJSONObject("CoverDetails");
                                                            JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                            for (int l = 0; l < CoversArrayF.length(); l++) {
                                                                JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                                String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                                if (CoverName.equals("Basic Insurance Cover")) {
                                                                    BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Personal Accident Cover")) {
                                                                    PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Critical Illness Cover")) {
                                                                    CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                    DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Modern Treatments")) {
                                                                    ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                    ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                    ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                    MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                    CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                    ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                    PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                    OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                    EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Second Opinion")) {
                                                                    SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                    RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                    ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                    SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                    EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Premium Waiver")) {
                                                                    PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Global Cover")) {
                                                                    GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                    MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                    EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Home Care Treatment")) {
                                                                    HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Wellness Benefit")) {
                                                                    WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Disease Management Program")) {
                                                                    DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                }

                                                            }
                                                        }
                                                    } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(3).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }

                                                    }
                                                } else if (mCounter == 3) {
                                                    childOneTrue();
                                                    childTwoTrue();
                                                    childThreeTrue();
                                                    if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray.getJSONObject(4).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayM.length(); l++) {
                                                            JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            }

                                                        }
                                                        if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                            JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(5).getJSONObject("CoverDetails");
                                                            JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                            for (int l = 0; l < CoversArrayF.length(); l++) {
                                                                JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                                String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                                if (CoverName.equals("Basic Insurance Cover")) {
                                                                    BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Personal Accident Cover")) {
                                                                    PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Critical Illness Cover")) {
                                                                    CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                    DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Modern Treatments")) {
                                                                    ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                    ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                    ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                    MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                    CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                    ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                    PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                    OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                    EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Second Opinion")) {
                                                                    SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                    RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                    ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                    SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                    EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Premium Waiver")) {
                                                                    PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Global Cover")) {
                                                                    GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                    MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                    EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Home Care Treatment")) {
                                                                    HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Wellness Benefit")) {
                                                                    WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Disease Management Program")) {
                                                                    DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                }

                                                            }
                                                        }
                                                    } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(4).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }

                                                    }
                                                } else if (mCounter == 4) {
                                                    childOneTrue();
                                                    childTwoTrue();
                                                    childThreeTrue();
                                                    childFourTrue();
                                                    if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray.getJSONObject(5).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayM.length(); l++) {
                                                            JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            }

                                                        }
                                                    } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(5).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }

                                                    }
                                                } else {
                                                    if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray.getJSONObject(1).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayM.length(); l++) {
                                                            JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            }

                                                        }
                                                        if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                            JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(2).getJSONObject("CoverDetails");
                                                            JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                            for (int l = 0; l < CoversArrayF.length(); l++) {
                                                                JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                                String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                                if (CoverName.equals("Basic Insurance Cover")) {
                                                                    BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Personal Accident Cover")) {
                                                                    PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Critical Illness Cover")) {
                                                                    CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                    DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Modern Treatments")) {
                                                                    ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                    ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                    ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                    MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                    CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                    ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                    PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                    OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                    EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Second Opinion")) {
                                                                    SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                    RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                    ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                    SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                    EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Premium Waiver")) {
                                                                    PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Global Cover")) {
                                                                    GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                    MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                    EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Home Care Treatment")) {
                                                                    HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Wellness Benefit")) {
                                                                    WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Disease Management Program")) {
                                                                    DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                }

                                                            }
                                                        }
                                                    } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray.getJSONObject(1).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }

                                                    }
                                                }
                                            }
                                        }
                                    }
                                    conditionAdd1 = ConditionWaiverCoverPremiumAd1 + ConditionWaiverCoverPremiumAd2 + ConditionWaiverCoverPremiumCh1 + ConditionWaiverCoverPremiumCh2 + ConditionWaiverCoverPremiumCh3 + ConditionWaiverCoverPremiumCh4 + ConditionWaiverCoverPremiumM + ConditionWaiverCoverPremiumF;
                                    ExtensionPreAdd1 = ExtensionPreHospitalizationCoverPremiumAd1 + ExtensionPreHospitalizationCoverPremiumAd2 + ExtensionPreHospitalizationCoverPremiumCh1 + ExtensionPreHospitalizationCoverPremiumCh2 + ExtensionPreHospitalizationCoverPremiumCh3 + ExtensionPreHospitalizationCoverPremiumCh4 + ExtensionPreHospitalizationCoverPremiumM + ExtensionPreHospitalizationCoverPremiumF;
                                    ExtensionProAdd1 = ExtensionProHospitalizationCoverPremiumAd1 + ExtensionProHospitalizationCoverPremiumAd2 + ExtensionProHospitalizationCoverPremiumCh1 + ExtensionProHospitalizationCoverPremiumCh2 + ExtensionProHospitalizationCoverPremiumCh3 + ExtensionProHospitalizationCoverPremiumCh4 + ExtensionProHospitalizationCoverPremiumM + ExtensionProHospitalizationCoverPremiumF;
                                    EmergencyAdd1 = EmergencyAssistanceCoverPremiumAd1 + EmergencyAssistanceCoverPremiumAd2 + EmergencyAssistanceCoverPremiumCh1 + EmergencyAssistanceCoverPremiumCh2 + EmergencyAssistanceCoverPremiumCh3 + EmergencyAssistanceCoverPremiumCh4 + EmergencyAssistanceCoverPremiumM + EmergencyAssistanceCoverPremiumF;
                                    PersonalAccidentAdd1 = PersonalAccidentCoverPremiumAd1 + PersonalAccidentCoverPremiumAd2 + PersonalAccidentCoverPremiumCh1 + PersonalAccidentCoverPremiumCh2 + PersonalAccidentCoverPremiumCh3 + PersonalAccidentCoverPremiumCh4 + PersonalAccidentCoverPremiumM + PersonalAccidentCoverPremiumF;
                                    WellnessAdd1 = WellnessBenefitCoverPremiumAd1 + WellnessBenefitCoverPremiumAd2 + WellnessBenefitCoverPremiumCh1 + WellnessBenefitCoverPremiumCh2 + WellnessBenefitCoverPremiumCh3 + WellnessBenefitCoverPremiumCh4 + WellnessBenefitCoverPremiumM + WellnessBenefitCoverPremiumF;

                                    PewmiumWaiverAdd1 = PremiumWaiverCoverPremiumAd1 + PremiumWaiverCoverPremiumAd2 + PremiumWaiverCoverPremiumCh1 + PremiumWaiverCoverPremiumCh2 + PremiumWaiverCoverPremiumCh3 + PremiumWaiverCoverPremiumCh4 + PremiumWaiverCoverPremiumM + PremiumWaiverCoverPremiumF;
                                    SecondOpinionAdd1 = SecondOpinionCoverPremiumAd1 + SecondOpinionCoverPremiumAd2 + SecondOpinionCoverPremiumCh1 + SecondOpinionCoverPremiumCh2 + SecondOpinionCoverPremiumCh3 + SecondOpinionCoverPremiumCh4 + SecondOpinionCoverPremiumM + SecondOpinionCoverPremiumF;
                                    ModernTreatAdd1 = ModernTreatmentCoverPremiumAd1 + ModernTreatmentCoverPremiumAd2 + ModernTreatmentCoverPremiumCh1 + ModernTreatmentCoverPremiumCh2 + ModernTreatmentCoverPremiumCh3 + ModernTreatmentCoverPremiumCh4 + ModernTreatmentCoverPremiumM + ModernTreatmentCoverPremiumF;

                                    CoverageNonAdd1 = CoverageNonMedicalCoverPremiumAd1 + CoverageNonMedicalCoverPremiumAd2 + CoverageNonMedicalCoverPremiumCh1 + CoverageNonMedicalCoverPremiumCh2 + CoverageNonMedicalCoverPremiumCh3 + CoverageNonMedicalCoverPremiumCh4 + CoverageNonMedicalCoverPremiumM + CoverageNonMedicalCoverPremiumF;
                                    MedicallyAdvisedAdd1 = MedicallyAdvisedCoverPremiumAd1 + MedicallyAdvisedCoverPremiumAd2 + MedicallyAdvisedCoverPremiumCh1 + MedicallyAdvisedCoverPremiumCh2 + MedicallyAdvisedCoverPremiumCh3 + MedicallyAdvisedCoverPremiumCh4 + MedicallyAdvisedCoverPremiumM + MedicallyAdvisedCoverPremiumF;
                                    EnhancedAdd1 = EnhancedCoverPremiumAd1 + EnhancedCoverPremiumAd2 + EnhancedCoverPremiumCh1 + EnhancedCoverPremiumCh2 + EnhancedCoverPremiumCh3 + EnhancedCoverPremiumCh4 + EnhancedCoverPremiumM + EnhancedCoverPremiumF;
                                    HomeCareAdd1 = HomeCareCoverPremiumAd1 + HomeCareCoverPremiumAd2 + HomeCareCoverPremiumCh1 + HomeCareCoverPremiumCh2 + HomeCareCoverPremiumCh3 + HomeCareCoverPremiumCh4 + HomeCareCoverPremiumM + HomeCareCoverPremiumF;

                                    CriticalAdd1 = CriticalIllnessCoverPremiumAd1 + CriticalIllnessCoverPremiumAd2 + CriticalIllnessCoverPremiumCh1 + CriticalIllnessCoverPremiumCh2 + CriticalIllnessCoverPremiumCh3 + CriticalIllnessCoverPremiumCh4 + CriticalIllnessCoverPremiumM + CriticalIllnessCoverPremiumF;
                                    DailyCashAdd1 = DailyHospitalCoverPremiumAd1 + DailyHospitalCoverPremiumAd2 + DailyHospitalCoverPremiumCh1 + DailyHospitalCoverPremiumCh2 + DailyHospitalCoverPremiumCh3 + DailyHospitalCoverPremiumCh4 + DailyHospitalCoverPremiumM + DailyHospitalCoverPremiumF;

                                    OutpatientDentalAdd1 = OutpatientDentalCoverPremiumAd1 + OutpatientDentalCoverPremiumAd2 + OutpatientDentalCoverPremiumCh1 + OutpatientDentalCoverPremiumCh2 + OutpatientDentalCoverPremiumCh3 + OutpatientDentalCoverPremiumCh4 + OutpatientDentalCoverPremiumM + OutpatientDentalCoverPremiumF;
                                    EmergencyTravellingAdd1 = EmergencyTravellingCoverPremiumAd1 + EmergencyTravellingCoverPremiumAd2 + EmergencyTravellingCoverPremiumCh1 + EmergencyTravellingCoverPremiumCh2 + EmergencyTravellingCoverPremiumCh3 + EmergencyTravellingCoverPremiumCh4 + EmergencyTravellingCoverPremiumM + EmergencyTravellingCoverPremiumF;
                                    PreExistingAdd1 = PreExistingDiseaseCoverPremiumAd1 + PreExistingDiseaseCoverPremiumAd2 + PreExistingDiseaseCoverPremiumCh1 + PreExistingDiseaseCoverPremiumCh2 + PreExistingDiseaseCoverPremiumCh3 + PreExistingDiseaseCoverPremiumCh4 + PreExistingDiseaseCoverPremiumM + PreExistingDiseaseCoverPremiumF;
                                    MaternityAdd1 = MaternityChildcareCoverPremiumAd1 + MaternityChildcareCoverPremiumAd2 + MaternityChildcareCoverPremiumCh1 + MaternityChildcareCoverPremiumCh2 + MaternityChildcareCoverPremiumCh3 + MaternityChildcareCoverPremiumCh4 + MaternityChildcareCoverPremiumM + MaternityChildcareCoverPremiumF;
                                    RestCureAdd1 = RestCureCoverPremiumAd1 + RestCureCoverPremiumAd2 + RestCureCoverPremiumCh1 + RestCureCoverPremiumCh2 + RestCureCoverPremiumCh3 + RestCureCoverPremiumCh4 + RestCureCoverPremiumM + RestCureCoverPremiumF;
                                    SterilityAdd1 = SterilityInfertilityCoverPremiumAd1 + SterilityInfertilityCoverPremiumAd2 + SterilityInfertilityCoverPremiumCh1 + SterilityInfertilityCoverPremiumCh2 + SterilityInfertilityCoverPremiumCh3 + SterilityInfertilityCoverPremiumCh4 + SterilityInfertilityCoverPremiumM + SterilityInfertilityCoverPremiumF;
                                    GlobalAdd1 = GlobalCoverCoverPremiumAd1 + GlobalCoverCoverPremiumAd2 + GlobalCoverCoverPremiumCh1 + GlobalCoverCoverPremiumCh2 + GlobalCoverCoverPremiumCh3 + GlobalCoverCoverPremiumCh4 + GlobalCoverCoverPremiumM + GlobalCoverCoverPremiumF;
                                    ObesityWeightAdd1 = ObesityWeightCoverPremiumAd1 + ObesityWeightCoverPremiumAd2 + ObesityWeightCoverPremiumCh1 + ObesityWeightCoverPremiumCh2 + ObesityWeightCoverPremiumCh3 + ObesityWeightCoverPremiumCh4 + ObesityWeightCoverPremiumM + ObesityWeightCoverPremiumF;
                                    DiseaseManagementAdd1 = DiseaseManagementCoverPremiumAd1 + DiseaseManagementCoverPremiumAd2 + DiseaseManagementCoverPremiumCh1 + DiseaseManagementCoverPremiumCh2 + DiseaseManagementCoverPremiumCh3 + DiseaseManagementCoverPremiumCh4 + DiseaseManagementCoverPremiumM + DiseaseManagementCoverPremiumF;
                                }
                                ConditionWaiverCoverPremium2 = String.valueOf(conditionAdd1);
                                PremiumWaiverCoverPremium2 = String.valueOf(PewmiumWaiverAdd1);
                                SecondOpinionCoverPremium2 = String.valueOf(SecondOpinionAdd1);
                                EmergencyAssistanceCoverPremium2 = String.valueOf(EmergencyAdd1);
                                PersonalAccidentCoverPremium2 = String.valueOf(PersonalAccidentAdd1);
                                ModernTreatmentCoverPremium2 = String.valueOf(ModernTreatAdd1);
                                ExtensionPreHospitalizationCoverPremium2 = String.valueOf(ExtensionPreAdd1);
                                ExtensionProHospitalizationCoverPremium2 = String.valueOf(ExtensionProAdd1);
                                CoverageNonMedicalCoverPremium2 = String.valueOf(CoverageNonAdd1);
                                MedicallyAdvisedCoverPremium2 = String.valueOf(MedicallyAdvisedAdd1);
                                EnhancedCoverPremium2 = String.valueOf(EnhancedAdd1);
                                HomeCareCoverPremium2 = String.valueOf(HomeCareAdd1);
                                CriticalIllnessCoverPremium2 = String.valueOf(CriticalAdd1);
                                DailyHospitalCoverPremium2 = String.valueOf(DailyCashAdd1);
                                WellnessBenefitCoverPremium2 = String.valueOf(WellnessAdd1);
                                OutpatientDentalCoverPremium = String.valueOf(OutpatientDentalAdd1);
                                EmergencyTravellingCoverPremium = String.valueOf(EmergencyTravellingAdd1);
                                PreExistingDiseaseCoverPremium = String.valueOf(PreExistingAdd1);
                                MaternityChildcareCoverPremium = String.valueOf(MaternityAdd1);
                                RestCureCoverPremium = String.valueOf(RestCureAdd1);
                                SterilityInfertilityCoverPremium = String.valueOf(SterilityAdd1);
                                GlobalCoverCoverPremium = String.valueOf(GlobalAdd1);
                                ObesityWeightCoverPremium = String.valueOf(ObesityWeightAdd1);
                                DiseaseManagementCoverPremium = String.valueOf(DiseaseManagementAdd1);

                                if (checkPackage.equals("PackageOne")) {
                                    //PackageTwo
                                    ConditionWaiverPackageTwo.setText(ConditionWaiverCoverPremium2);
                                    PremiumWaiverPackageTwo.setText(PremiumWaiverCoverPremium2);
                                    SecondOpinionPackageTwo.setText(SecondOpinionCoverPremium2);
                                    PersonalAccidentPackageTwo.setText(PersonalAccidentCoverPremium2);
                                    EmergencyAssistancePackageTwo.setText(EmergencyAssistanceCoverPremium2);
                                    ModernTreatments.setText(ModernTreatmentCoverPremium2);
                                    double doubleTotalPremiumTwo = conditionAdd1 + PewmiumWaiverAdd1 + SecondOpinionAdd1 + EmergencyAdd1 + PersonalAccidentAdd1 + ModernTreatAdd1;
                                    sumPremiumPackageTwo = String.format("%.2f", doubleTotalPremiumTwo);
                                    SumPremiumPackageTwo.setText(sumPremiumPackageTwo);

                                    //PackageThree
                                    ConditionWaiverPackageThree.setText(ConditionWaiverCoverPremium2);
                                    NonMedicalPackageThree.setText(CoverageNonMedicalCoverPremium2);
                                    MedicallyAdvisedPackageThree.setText(MedicallyAdvisedCoverPremium2);
                                    EnhancedOrganPackageThree.setText(EnhancedCoverPremium2);
                                    PersonalAccidentPackageThree.setText(PersonalAccidentCoverPremium2);
                                    HomeCarePackageThree.setText(HomeCareCoverPremium2);

                                    double doubleTotalPremiumThree = conditionAdd1 + CoverageNonAdd1 + MedicallyAdvisedAdd1 + EnhancedAdd1 + PersonalAccidentAdd1 + HomeCareAdd1;
                                    sumPremiumPackageThree = String.format("%.2f", doubleTotalPremiumThree);
                                    SumPremiumPackageThree.setText(sumPremiumPackageThree);

                                    //PackageFour
                                    ConditionWaiverPackageFour.setText(ConditionWaiverCoverPremium2);
                                    PersonalAccidentPackageFour.setText(PersonalAccidentCoverPremium2);
                                    CriticalIllnessPackageFour.setText(CriticalIllnessCoverPremium2);
                                    ModernTreatmentPackageFour.setText(ModernTreatmentCoverPremium2);
                                    HospitalDailyCashPackageFour.setText(DailyHospitalCoverPremium2);
                                    double doubleTotalPremiumFour = conditionAdd1 + PersonalAccidentAdd1 + CriticalAdd1 + ModernTreatAdd1 + DailyCashAdd1;
                                    sumPremiumPackageFour = String.format("%.2f", doubleTotalPremiumFour);
                                    SumPremiumPackageFour.setText(sumPremiumPackageFour);

                                    //PackageFive
                                    TreatmentTiredNetworkPackageFive.setText(TreatmentPremium2);
                                    SubLimitPackageFive.setText(SubCategoryDiscountPremium2);
                                    CoPaymentPackageFive.setText(CoPaymentDiscountPremium2);
                                    WellnessBenefitPackageFive.setText(WellnessBenefitCoverPremium2);
                                    double doubleTotalPremiumFive = Double.parseDouble(TreatmentPremium2) + Double.parseDouble(SubCategoryDiscountPremium2) + Double.parseDouble(CoPaymentDiscountPremium2) + WellnessAdd1;
                                    sumPremiumPackageFive = String.format("%.2f", doubleTotalPremiumFive);
                                    SumPremiumPackageFive.setText(sumPremiumPackageFive);

                                } else if (checkPackage.equals("PackageTwo")) {
                                    //PackageOne
                                    ConditionWaiverPackageOne.setText(ConditionWaiverCoverPremium2);
                                    ExtensionPreHospitalizationPackageOne.setText(ExtensionPreHospitalizationCoverPremium2);
                                    ExtensionProHospitalizationPackageOne.setText(ExtensionProHospitalizationCoverPremium2);
                                    EmergencyAssistancePackageOe.setText(EmergencyAssistanceCoverPremium2);
                                    PersonalAccidentPackageOne.setText(PersonalAccidentCoverPremium2);
                                    WellnessBenefitPackageOne.setText(WellnessBenefitCoverPremium2);
                                    double doubleTotalPremium = conditionAdd1 + ExtensionPreAdd1 + ExtensionProAdd1 + EmergencyAdd1 + PersonalAccidentAdd1 + WellnessAdd1;
                                    sumPremiumPackageOne = String.format("%.2f", doubleTotalPremium);
                                    TotalPremiumPackageOne.setText(sumPremiumPackageOne);


                                    //PackageThree
                                    ConditionWaiverPackageThree.setText(ConditionWaiverCoverPremium2);
                                    NonMedicalPackageThree.setText(CoverageNonMedicalCoverPremium2);
                                    MedicallyAdvisedPackageThree.setText(MedicallyAdvisedCoverPremium2);
                                    EnhancedOrganPackageThree.setText(EnhancedCoverPremium2);
                                    PersonalAccidentPackageThree.setText(PersonalAccidentCoverPremium2);
                                    HomeCarePackageThree.setText(HomeCareCoverPremium2);

                                    double doubleTotalPremiumThree = conditionAdd1 + CoverageNonAdd1 + MedicallyAdvisedAdd1 + EnhancedAdd1 + PersonalAccidentAdd1 + HomeCareAdd1;
                                    sumPremiumPackageThree = String.format("%.2f", doubleTotalPremiumThree);
                                    SumPremiumPackageThree.setText(sumPremiumPackageThree);

                                    //PackageFour
                                    ConditionWaiverPackageFour.setText(ConditionWaiverCoverPremium2);
                                    PersonalAccidentPackageFour.setText(PersonalAccidentCoverPremium2);
                                    CriticalIllnessPackageFour.setText(CriticalIllnessCoverPremium2);
                                    ModernTreatmentPackageFour.setText(ModernTreatmentCoverPremium2);
                                    HospitalDailyCashPackageFour.setText(DailyHospitalCoverPremium2);
                                    double doubleTotalPremiumFour = conditionAdd1 + PersonalAccidentAdd1 + CriticalAdd1 + ModernTreatAdd1 + DailyCashAdd1;
                                    sumPremiumPackageFour = String.format("%.2f", doubleTotalPremiumFour);
                                    SumPremiumPackageFour.setText(sumPremiumPackageFour);

                                    //PackageFive
                                    TreatmentTiredNetworkPackageFive.setText(TreatmentPremium2);
                                    SubLimitPackageFive.setText(SubCategoryDiscountPremium2);
                                    CoPaymentPackageFive.setText(CoPaymentDiscountPremium2);
                                    WellnessBenefitPackageFive.setText(WellnessBenefitCoverPremium2);
                                    double doubleTotalPremiumFive = Double.parseDouble(TreatmentPremium2) + Double.parseDouble(SubCategoryDiscountPremium2) + Double.parseDouble(CoPaymentDiscountPremium2) + WellnessAdd1;
                                    sumPremiumPackageFive = String.format("%.2f", doubleTotalPremiumFive);
                                    SumPremiumPackageFive.setText(sumPremiumPackageFive);
                                } else if (checkPackage.equals("PackageThree")) {
                                    //PackageOne
                                    ConditionWaiverPackageOne.setText(ConditionWaiverCoverPremium2);
                                    ExtensionPreHospitalizationPackageOne.setText(ExtensionPreHospitalizationCoverPremium2);
                                    ExtensionProHospitalizationPackageOne.setText(ExtensionProHospitalizationCoverPremium2);
                                    EmergencyAssistancePackageOe.setText(EmergencyAssistanceCoverPremium2);
                                    PersonalAccidentPackageOne.setText(PersonalAccidentCoverPremium2);
                                    WellnessBenefitPackageOne.setText(WellnessBenefitCoverPremium2);
                                    double doubleTotalPremium = conditionAdd1 + ExtensionPreAdd1 + ExtensionProAdd1 + EmergencyAdd1 + PersonalAccidentAdd1 + WellnessAdd1;
                                    sumPremiumPackageOne = String.format("%.2f", doubleTotalPremium);
                                    TotalPremiumPackageOne.setText(sumPremiumPackageOne);
                                    //PackageTwo
                                    ConditionWaiverPackageTwo.setText(ConditionWaiverCoverPremium2);
                                    PremiumWaiverPackageTwo.setText(PremiumWaiverCoverPremium2);
                                    SecondOpinionPackageTwo.setText(SecondOpinionCoverPremium2);
                                    PersonalAccidentPackageTwo.setText(PersonalAccidentCoverPremium2);
                                    EmergencyAssistancePackageTwo.setText(EmergencyAssistanceCoverPremium2);
                                    ModernTreatments.setText(ModernTreatmentCoverPremium2);
                                    double doubleTotalPremiumTwo = conditionAdd1 + PewmiumWaiverAdd1 + SecondOpinionAdd1 + EmergencyAdd1 + PersonalAccidentAdd1 + ModernTreatAdd1;
                                    sumPremiumPackageTwo = String.format("%.2f", doubleTotalPremiumTwo);
                                    SumPremiumPackageTwo.setText(sumPremiumPackageTwo);

                                    //PackageFour
                                    ConditionWaiverPackageFour.setText(ConditionWaiverCoverPremium2);
                                    PersonalAccidentPackageFour.setText(PersonalAccidentCoverPremium2);
                                    CriticalIllnessPackageFour.setText(CriticalIllnessCoverPremium2);
                                    ModernTreatmentPackageFour.setText(ModernTreatmentCoverPremium2);
                                    HospitalDailyCashPackageFour.setText(DailyHospitalCoverPremium2);
                                    double doubleTotalPremiumFour = conditionAdd1 + PersonalAccidentAdd1 + CriticalAdd1 + ModernTreatAdd1 + DailyCashAdd1;
                                    sumPremiumPackageFour = String.format("%.2f", doubleTotalPremiumFour);
                                    SumPremiumPackageFour.setText(sumPremiumPackageFour);

                                    //PackageFive
                                    TreatmentTiredNetworkPackageFive.setText(TreatmentPremium2);
                                    SubLimitPackageFive.setText(SubCategoryDiscountPremium2);
                                    CoPaymentPackageFive.setText(CoPaymentDiscountPremium2);
                                    WellnessBenefitPackageFive.setText(WellnessBenefitCoverPremium2);
                                    double doubleTotalPremiumFive = Double.parseDouble(TreatmentPremium2) + Double.parseDouble(SubCategoryDiscountPremium2) + Double.parseDouble(CoPaymentDiscountPremium2) + WellnessAdd1;
                                    sumPremiumPackageFive = String.format("%.2f", doubleTotalPremiumFive);
                                    SumPremiumPackageFive.setText(sumPremiumPackageFive);
                                } else if (checkPackage.equals("PackageFour")) {
                                    //PackageOne
                                    ConditionWaiverPackageOne.setText(ConditionWaiverCoverPremium2);
                                    ExtensionPreHospitalizationPackageOne.setText(ExtensionPreHospitalizationCoverPremium2);
                                    ExtensionProHospitalizationPackageOne.setText(ExtensionProHospitalizationCoverPremium2);
                                    EmergencyAssistancePackageOe.setText(EmergencyAssistanceCoverPremium2);
                                    PersonalAccidentPackageOne.setText(PersonalAccidentCoverPremium2);
                                    WellnessBenefitPackageOne.setText(WellnessBenefitCoverPremium2);
                                    double doubleTotalPremium = conditionAdd1 + ExtensionPreAdd1 + ExtensionProAdd1 + EmergencyAdd1 + PersonalAccidentAdd1 + WellnessAdd1;
                                    sumPremiumPackageOne = String.format("%.2f", doubleTotalPremium);
                                    TotalPremiumPackageOne.setText(sumPremiumPackageOne);
                                    //PackageTwo
                                    ConditionWaiverPackageTwo.setText(ConditionWaiverCoverPremium2);
                                    PremiumWaiverPackageTwo.setText(PremiumWaiverCoverPremium2);
                                    SecondOpinionPackageTwo.setText(SecondOpinionCoverPremium2);
                                    PersonalAccidentPackageTwo.setText(PersonalAccidentCoverPremium2);
                                    EmergencyAssistancePackageTwo.setText(EmergencyAssistanceCoverPremium2);
                                    ModernTreatments.setText(ModernTreatmentCoverPremium2);
                                    double doubleTotalPremiumTwo = conditionAdd1 + PewmiumWaiverAdd1 + SecondOpinionAdd1 + EmergencyAdd1 + PersonalAccidentAdd1 + ModernTreatAdd1;
                                    sumPremiumPackageTwo = String.format("%.2f", doubleTotalPremiumTwo);
                                    SumPremiumPackageTwo.setText(sumPremiumPackageTwo);
                                    //PackageThree
                                    ConditionWaiverPackageThree.setText(ConditionWaiverCoverPremium2);
                                    NonMedicalPackageThree.setText(CoverageNonMedicalCoverPremium2);
                                    MedicallyAdvisedPackageThree.setText(MedicallyAdvisedCoverPremium2);
                                    EnhancedOrganPackageThree.setText(EnhancedCoverPremium2);
                                    PersonalAccidentPackageThree.setText(PersonalAccidentCoverPremium2);
                                    HomeCarePackageThree.setText(HomeCareCoverPremium2);

                                    double doubleTotalPremiumThree = conditionAdd1 + CoverageNonAdd1 + MedicallyAdvisedAdd1 + EnhancedAdd1 + PersonalAccidentAdd1 + HomeCareAdd1;
                                    sumPremiumPackageThree = String.format("%.2f", doubleTotalPremiumThree);
                                    SumPremiumPackageThree.setText(sumPremiumPackageThree);


                                    //PackageFive
                                    TreatmentTiredNetworkPackageFive.setText(TreatmentPremium2);
                                    SubLimitPackageFive.setText(SubCategoryDiscountPremium2);
                                    CoPaymentPackageFive.setText(CoPaymentDiscountPremium2);
                                    WellnessBenefitPackageFive.setText(WellnessBenefitCoverPremium2);
                                    double doubleTotalPremiumFive = Double.parseDouble(TreatmentPremium2) + Double.parseDouble(SubCategoryDiscountPremium2) + Double.parseDouble(CoPaymentDiscountPremium2) + WellnessAdd1;
                                    sumPremiumPackageFive = String.format("%.2f", doubleTotalPremiumFive);
                                    SumPremiumPackageFive.setText(sumPremiumPackageFive);
                                } else if (checkPackage.equals("PackageFive")) {
                                    //PackageOne
                                    ConditionWaiverPackageOne.setText(ConditionWaiverCoverPremium2);
                                    ExtensionPreHospitalizationPackageOne.setText(ExtensionPreHospitalizationCoverPremium2);
                                    ExtensionProHospitalizationPackageOne.setText(ExtensionProHospitalizationCoverPremium2);
                                    EmergencyAssistancePackageOe.setText(EmergencyAssistanceCoverPremium2);
                                    PersonalAccidentPackageOne.setText(PersonalAccidentCoverPremium2);
                                    WellnessBenefitPackageOne.setText(WellnessBenefitCoverPremium2);
                                    double doubleTotalPremium = conditionAdd1 + ExtensionPreAdd1 + ExtensionProAdd1 + EmergencyAdd1 + PersonalAccidentAdd1 + WellnessAdd1;
                                    sumPremiumPackageOne = String.format("%.2f", doubleTotalPremium);
                                    TotalPremiumPackageOne.setText(sumPremiumPackageOne);
                                    //PackageTwo
                                    ConditionWaiverPackageTwo.setText(ConditionWaiverCoverPremium2);
                                    PremiumWaiverPackageTwo.setText(PremiumWaiverCoverPremium2);
                                    SecondOpinionPackageTwo.setText(SecondOpinionCoverPremium2);
                                    PersonalAccidentPackageTwo.setText(PersonalAccidentCoverPremium2);
                                    EmergencyAssistancePackageTwo.setText(EmergencyAssistanceCoverPremium2);
                                    ModernTreatments.setText(ModernTreatmentCoverPremium2);
                                    double doubleTotalPremiumTwo = conditionAdd1 + PewmiumWaiverAdd1 + SecondOpinionAdd1 + EmergencyAdd1 + PersonalAccidentAdd1 + ModernTreatAdd1;
                                    sumPremiumPackageTwo = String.format("%.2f", doubleTotalPremiumTwo);
                                    SumPremiumPackageTwo.setText(sumPremiumPackageTwo);
                                    //PackageThree
                                    ConditionWaiverPackageThree.setText(ConditionWaiverCoverPremium2);
                                    NonMedicalPackageThree.setText(CoverageNonMedicalCoverPremium2);
                                    MedicallyAdvisedPackageThree.setText(MedicallyAdvisedCoverPremium2);
                                    EnhancedOrganPackageThree.setText(EnhancedCoverPremium2);
                                    PersonalAccidentPackageThree.setText(PersonalAccidentCoverPremium2);
                                    HomeCarePackageThree.setText(HomeCareCoverPremium2);

                                    double doubleTotalPremiumThree = conditionAdd1 + CoverageNonAdd1 + MedicallyAdvisedAdd1 + EnhancedAdd1 + PersonalAccidentAdd1 + HomeCareAdd1;
                                    sumPremiumPackageThree = String.format("%.2f", doubleTotalPremiumThree);
                                    SumPremiumPackageThree.setText(sumPremiumPackageThree);

                                    //PackageFour
                                    ConditionWaiverPackageFour.setText(ConditionWaiverCoverPremium2);
                                    PersonalAccidentPackageFour.setText(PersonalAccidentCoverPremium2);
                                    CriticalIllnessPackageFour.setText(CriticalIllnessCoverPremium2);
                                    ModernTreatmentPackageFour.setText(ModernTreatmentCoverPremium2);
                                    HospitalDailyCashPackageFour.setText(DailyHospitalCoverPremium2);
                                    double doubleTotalPremiumFour = conditionAdd1 + PersonalAccidentAdd1 + CriticalAdd1 + ModernTreatAdd1 + DailyCashAdd1;
                                    sumPremiumPackageFour = String.format("%.2f", doubleTotalPremiumFour);
                                    SumPremiumPackageFour.setText(sumPremiumPackageFour);

                                } else {
                                    //PackageOne
                                    ConditionWaiverPackageOne.setText(ConditionWaiverCoverPremium2);
                                    ExtensionPreHospitalizationPackageOne.setText(ExtensionPreHospitalizationCoverPremium2);
                                    ExtensionProHospitalizationPackageOne.setText(ExtensionProHospitalizationCoverPremium2);
                                    EmergencyAssistancePackageOe.setText(EmergencyAssistanceCoverPremium2);
                                    PersonalAccidentPackageOne.setText(PersonalAccidentCoverPremium2);
                                    WellnessBenefitPackageOne.setText(WellnessBenefitCoverPremium2);
                                    double doubleTotalPremium = conditionAdd1 + ExtensionPreAdd1 + ExtensionProAdd1 + EmergencyAdd1 + PersonalAccidentAdd1 + WellnessAdd1;
                                    sumPremiumPackageOne = String.format("%.2f", doubleTotalPremium);
                                    TotalPremiumPackageOne.setText(sumPremiumPackageOne);
                                    //PackageTwo
                                    ConditionWaiverPackageTwo.setText(ConditionWaiverCoverPremium2);
                                    PremiumWaiverPackageTwo.setText(PremiumWaiverCoverPremium2);
                                    SecondOpinionPackageTwo.setText(SecondOpinionCoverPremium2);
                                    PersonalAccidentPackageTwo.setText(PersonalAccidentCoverPremium2);
                                    EmergencyAssistancePackageTwo.setText(EmergencyAssistanceCoverPremium2);
                                    ModernTreatments.setText(ModernTreatmentCoverPremium2);
                                    double doubleTotalPremiumTwo = conditionAdd1 + PewmiumWaiverAdd1 + SecondOpinionAdd1 + EmergencyAdd1 + PersonalAccidentAdd1 + ModernTreatAdd1;
                                    sumPremiumPackageTwo = String.format("%.2f", doubleTotalPremiumTwo);
                                    SumPremiumPackageTwo.setText(sumPremiumPackageTwo);
                                    //PackageThree
                                    ConditionWaiverPackageThree.setText(ConditionWaiverCoverPremium2);
                                    NonMedicalPackageThree.setText(CoverageNonMedicalCoverPremium2);
                                    MedicallyAdvisedPackageThree.setText(MedicallyAdvisedCoverPremium2);
                                    EnhancedOrganPackageThree.setText(EnhancedCoverPremium2);
                                    PersonalAccidentPackageThree.setText(PersonalAccidentCoverPremium2);
                                    HomeCarePackageThree.setText(HomeCareCoverPremium2);

                                    double doubleTotalPremiumThree = conditionAdd1 + CoverageNonAdd1 + MedicallyAdvisedAdd1 + EnhancedAdd1 + PersonalAccidentAdd1 + HomeCareAdd1;
                                    sumPremiumPackageThree = String.format("%.2f", doubleTotalPremiumThree);
                                    SumPremiumPackageThree.setText(sumPremiumPackageThree);

                                    //PackageFour
                                    ConditionWaiverPackageFour.setText(ConditionWaiverCoverPremium2);
                                    PersonalAccidentPackageFour.setText(PersonalAccidentCoverPremium2);
                                    CriticalIllnessPackageFour.setText(CriticalIllnessCoverPremium2);
                                    ModernTreatmentPackageFour.setText(ModernTreatmentCoverPremium2);
                                    HospitalDailyCashPackageFour.setText(DailyHospitalCoverPremium2);
                                    double doubleTotalPremiumFour = conditionAdd1 + PersonalAccidentAdd1 + CriticalAdd1 + ModernTreatAdd1 + DailyCashAdd1;
                                    sumPremiumPackageFour = String.format("%.2f", doubleTotalPremiumFour);
                                    SumPremiumPackageFour.setText(sumPremiumPackageFour);

                                    //PackageFive
                                    TreatmentTiredNetworkPackageFive.setText(TreatmentPremium2);
                                    SubLimitPackageFive.setText(SubCategoryDiscountPremium2);
                                    CoPaymentPackageFive.setText(CoPaymentDiscountPremium2);
                                    WellnessBenefitPackageFive.setText(WellnessBenefitCoverPremium2);
                                    double doubleTotalPremiumFive = Double.parseDouble(TreatmentPremium2) + Double.parseDouble(SubCategoryDiscountPremium2) + Double.parseDouble(CoPaymentDiscountPremium2) + WellnessAdd1;
                                    sumPremiumPackageFive = String.format("%.2f", doubleTotalPremiumFive);
                                    SumPremiumPackageFive.setText(sumPremiumPackageFive);
                                }
                            } catch (JSONException e) {
                                e.printStackTrace();
                            }
                        }
                    } else {
                        Toast.makeText(getApplication(), "" + ErrDescription, Toast.LENGTH_SHORT).show();
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }

            @Override
            public void onError(VolleyError error, int Tag) {

            }
        }, RequestHealthConstants.RevisedCHIQuotation);

        req.execute();

    }
    private void health_quote() {
//        customprogress.showProgressBar();
        if (strGenderSpinner.equals("Female")) {
            strGender = "F";
        } else {
            strGender = "M";
        }
        if (str_policyType_spinner.equals("Individual")) {
            if (strCheckBoxSpouse.equals("Checked")) {
                strGender = "F";
                strSelfAgeEditText = strSpouseAgeEditText;
            } else if (strCheckBoxMother.equals("Checked")) {
                strGender = "F";
                strSelfAgeEditText = strMotherAgeEditText;
            } else if (strCheckBoxFather.equals("Checked")) {
                strGender = "M";
                strSelfAgeEditText = strFatherAgeEditText;
            } else if (strCheckBoxMotherLaw.equals("Checked")) {
                strGender = "F";
                strSelfAgeEditText = strMotherLawAgeEditText;
            } else if (strCheckBoxFatherLaw.equals("Checked")) {
                strGender = "M";
                strSelfAgeEditText = strFatherLawAgeEditText;
            }
        }
        if (checkPackage.equals("PackageOne")) {
            TreatmentStatus1 = "False";
            TreatmentStatus = TreatmentStatus1;
            if (CoPaymentCheckBoxCheck.equals("True")) {
                CoPaymentStatus = "True";
            } else {
                CoPaymentStatus1 = "False";
                CoPaymentStatus = CoPaymentStatus1;
                CoPaymentLoading = strCoPaymentEditText;
            }
            if (SubCategoryDiscountStatusCheck.equals("True")) {
                SubCategoryDiscountStatus = "True";
            } else {
                SubCategoryDiscountStatus1 = "False";
                SubCategoryDiscountStatus = SubCategoryDiscountStatus1;
                SubCategory = strSubLimitEditText;
            }
            if (TreatmentCheckBoxCheck.equals("True")) {
                TreatmentStatus = "True";
            } else {
                TreatmentStatus1 = "False";
                TreatmentStatus = TreatmentStatus1;
            }
        }
        else if (checkPackage.equals("PackageTwo")) {
            TreatmentStatus1 = "False";
            TreatmentStatus = TreatmentStatus1;

            if (CoPaymentCheckBoxCheck.equals("True")) {
                CoPaymentStatus = "True";
            } else {
                CoPaymentStatus1 = "False";
                CoPaymentStatus = CoPaymentStatus1;
                CoPaymentLoading = strCoPaymentEditText;
            }
            if (SubCategoryDiscountStatusCheck.equals("True")) {
                SubCategoryDiscountStatus = "True";
            } else {
                SubCategoryDiscountStatus1 = "False";
                SubCategoryDiscountStatus = SubCategoryDiscountStatus1;
                SubCategory = strSubLimitEditText;
            }
            if (TreatmentCheckBoxCheck.equals("True")) {
                TreatmentStatus = "True";
            } else {
                TreatmentStatus1 = "False";
                TreatmentStatus = TreatmentStatus1;
            }
        }
        else if (checkPackage.equals("PackageThree")) {
            TreatmentStatus1 = "False";
            TreatmentStatus = TreatmentStatus1;
            if (CoPaymentCheckBoxCheck.equals("True")) {
                CoPaymentStatus = "True";
            } else {
                CoPaymentStatus1 = "False";
                CoPaymentStatus = CoPaymentStatus1;
                CoPaymentLoading = strCoPaymentEditText;
            }
            if (SubCategoryDiscountStatusCheck.equals("True")) {
                SubCategoryDiscountStatus = "True";
            } else {
                SubCategoryDiscountStatus1 = "False";
                SubCategoryDiscountStatus = SubCategoryDiscountStatus1;
                SubCategory = strSubLimitEditText;
            }
            if (TreatmentCheckBoxCheck.equals("True")) {
                TreatmentStatus = "True";
            } else {
                TreatmentStatus1 = "False";
                TreatmentStatus = TreatmentStatus1;
            }
        }
        else if (checkPackage.equals("PackageFour")) {
            TreatmentStatus1 = "False";
            TreatmentStatus = TreatmentStatus1;
            if (CoPaymentCheckBoxCheck.equals("True")) {
                CoPaymentStatus = "True";
            } else {
                CoPaymentStatus1 = "False";
                CoPaymentStatus = CoPaymentStatus1;
                CoPaymentLoading = strCoPaymentEditText;
            }
            if (SubCategoryDiscountStatusCheck.equals("True")) {
                SubCategoryDiscountStatus = "True";
            } else {
                SubCategoryDiscountStatus1 = "False";
                SubCategoryDiscountStatus = SubCategoryDiscountStatus1;
                SubCategory = strSubLimitEditText;
            }
            if (TreatmentCheckBoxCheck.equals("True")) {
                TreatmentStatus = "True";
            } else {
                TreatmentStatus1 = "False";
                TreatmentStatus = TreatmentStatus1;
            }
        }
        else if (checkPackage.equals("PackageFive")) {
            CoPaymentStatus1 = "True";
            TreatmentStatus1 = "True";
            SubCategoryDiscountStatus1 = "True";
            CoPaymentStatus = CoPaymentStatus1;
            TreatmentStatus = TreatmentStatus1;
            SubCategoryDiscountStatus = SubCategoryDiscountStatus1;
            SubCategory = strSubLimitEditText;
            CoPaymentLoading = strCoPaymentEditText;
        }
        if (CoPaymentCheckBoxCheck.equals("True")) {
            CoPaymentStatus = "True";
        }
        if (SubCategoryDiscountStatusCheck.equals("True")) {
            SubCategoryDiscountStatus = "True";
        }
        if (TreatmentCheckBoxCheck.equals("True")) {
            TreatmentStatus = "True";
        }

        if (strCheckBoxSelf.equals("Checked") && strCheckBoxSpouse.equals("Checked")) {
            str_policyType_spinner1 = str_policyType_spinner;
            MaternityAndChildcareMale="False";
            SterilityInfertilityMale="False";
        }
        else {
            if (strCheckBoxSelf.equals("Checked") || strCheckBoxSpouse.equals("Checked")) {
                if (strCheckBoxMother.equals("Checked") && strCheckBoxFather.equals("Checked")) {
                    str_policyType_spinner1 = "Family Floater";
                }else if(strCheckBoxMotherLaw.equals("Checked") && strCheckBoxFatherLaw.equals("Checked")){
                    str_policyType_spinner1 = "Family Floater";
                }else if (strCheckBoxMother.equals("Checked") || strCheckBoxFather.equals("Checked") || strCheckBoxMotherLaw.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                    str_policyType_spinner1 = "Individual";
                } else {
                    MaternityAndChildcareMale=MaternityAndChildcare;
                    SterilityInfertilityMale=SterilityInfertilityStatus;
                    str_policyType_spinner1 = str_policyType_spinner;
                }
                if (strCheckBoxSpouse.equals("Checked")){
                       if (selectYearSecondAdult > 45) {
                           MaternityAndChildcare = "False";
                           SterilityInfertilityMale = "False";
                       }
                   }
            } else {
                MaternityAndChildcareMale=MaternityAndChildcare;
                SterilityInfertilityMale=SterilityInfertilityStatus;
                str_policyType_spinner1 = str_policyType_spinner;
            }
        }
        if (PlanType.equals("Digi-Pro")) {
            PersonalStatus = "False";
            PersonalStatusChildOne = "False";
            PersonalStatusChildTwo = "False";
            PersonalStatusChildThird = "False";
            PersonalStatusChildFour = "False";
        }

        JSONObject object = new JSONObject();
        try {
            JSONObject RootObject = new JSONObject();
            //Authentication
            JSONObject AuthenticationObject = new JSONObject();
//            AuthenticationObject.put("WACode", "20000001");
//            AuthenticationObject.put("WAAppCode", "30000011");
            AuthenticationObject.put("WACode","20000149");
            AuthenticationObject.put("WAAppCode","30000149");
            AuthenticationObject.put("WAUserID", "USER01");
            AuthenticationObject.put("WAUserPwd", "pass@123");
            AuthenticationObject.put("WAType", "0");
            RootObject.put("Authentication", AuthenticationObject);
            //Customer
            JSONObject CustomerObject = new JSONObject();
            CustomerObject.put("CustomerType", "");
            CustomerObject.put("CustomerName", "");
            CustomerObject.put("DOB", "");
            CustomerObject.put("Gender", "");
            CustomerObject.put("CanBeParent", "");
            CustomerObject.put("ContactTelephoneSTD", "");
            CustomerObject.put("MobileNo", "");
            CustomerObject.put("Emailid", "");
            CustomerObject.put("PresentAddressLine1", "");
            CustomerObject.put("PresentAddressLine2", "");
            CustomerObject.put("PresentStateCode", "");
            CustomerObject.put("PresentCityDistCode", "");
            CustomerObject.put("PresentPinCode", "");
            CustomerObject.put("PermanentAddressLine1", "");
            CustomerObject.put("PermanentAddressLine2", "");
            CustomerObject.put("PermanentStateCode", "");
            CustomerObject.put("PermanentCityDistCode", "");
            CustomerObject.put("PermanentPinCode", "");
            CustomerObject.put("CustGSTNo", "NULL");
            CustomerObject.put("ProductName", "Complete HealthCare Insurance");
            CustomerObject.put("InstrumentNo", "NULL");
            CustomerObject.put("InstrumentDate", "NULL");
            CustomerObject.put("BankID", "NULL");
            CustomerObject.put("PosPolicyNo", "");
            CustomerObject.put("ProductCode", "2825");
            CustomerObject.put("WAURN", "NULL");
            CustomerObject.put("NomineeName", "");
            CustomerObject.put("NomineeRelation", "");
            CustomerObject.put("PANNo", "NULL");
            CustomerObject.put("AadhaarNo", "");
            CustomerObject.put("EIA", "NULL");
            CustomerObject.put("CKYCNo", "");
            CustomerObject.put("Ref_No_Unique_KYC", "");
            RootObject.put("Customer", CustomerObject);
            //POSAGENT
            JSONObject POSAGENTObject = new JSONObject();
            POSAGENTObject.put("Name", "NULL");
            POSAGENTObject.put("PAN", "NULL");
            POSAGENTObject.put("Aadhar", "NULL");
            POSAGENTObject.put("Email", "NULL");
            POSAGENTObject.put("MobileNo", "NULL");
//            POSAGENTObject.put("Location", "NULL");
            POSAGENTObject.put("Location", "MUMBAI CORPORATE OFFICE");
            POSAGENTObject.put("Information1", "NULL");
            POSAGENTObject.put("Information2", "NULL");
            RootObject.put("POSAGENT", POSAGENTObject);

            JSONObject ProductObject = new JSONObject();
            JSONObject GeneralProposalObject = new JSONObject();
            JSONObject GeneralProposalGroupObject = new JSONObject();
            JSONObject DistributionChannelObject = new JSONObject();
            //Branch
            JSONObject BranchDetailsObject = new JSONObject();

            BranchDetailsObject.put("IMDBranchName", "NULL");
            BranchDetailsObject.put("IMDBranchCode", "NULL");
            DistributionChannelObject.put("BranchDetails", BranchDetailsObject);
            //SpDetails
            JSONObject SPDetailsObject = new JSONObject();
            SPDetailsObject.put("SPName", "NULL");
            SPDetailsObject.put("SPCode", "NULL");
            DistributionChannelObject.put("SPDetails", SPDetailsObject);
            GeneralProposalGroupObject.put("DistributionChannel", DistributionChannelObject);

            //GeneralProposalInformation
            JSONObject GeneralProposalInformationObject = new JSONObject();
            GeneralProposalInformationObject.put("TypeOfBusiness", "");
            GeneralProposalInformationObject.put("ServiceTaxExemptionCategory", "");
            GeneralProposalInformationObject.put("BusinessType", "New");
            GeneralProposalInformationObject.put("Sector", "");
            GeneralProposalInformationObject.put("DealId", "INTR-2312-0019722");
            GeneralProposalInformationObject.put("PolicyType", str_policyType_spinner1);
            GeneralProposalInformationObject.put("FamilyComposition", FamilyComposition);
            GeneralProposalInformationObject.put("ParentComposition", ParentComposition);
            GeneralProposalInformationObject.put("PlanType", PlanType);
            GeneralProposalInformationObject.put("ProposalDate", today);
            GeneralProposalInformationObject.put("PolicyDuration", strPolicyTenure);
            GeneralProposalInformationObject.put("PolicyNumberChar", "NULL");
            //PolicyEffectiveDate
            JSONObject PolicyEffectiveDateObject = new JSONObject();
            PolicyEffectiveDateObject.put("Fromdate", today);
            PolicyEffectiveDateObject.put("Todate", nextYear);
            PolicyEffectiveDateObject.put("Fromhour", "00:01");
            PolicyEffectiveDateObject.put("Tohour", "23:59");
            GeneralProposalInformationObject.put("PolicyEffectiveDate", PolicyEffectiveDateObject);

            GeneralProposalInformationObject.put("SubCategory", SubCategory);
            GeneralProposalInformationObject.put("EmployeeCode", "");
            GeneralProposalInformationObject.put("ExsistingPolicyNumber", strPolicyNumber);
            GeneralProposalInformationObject.put("PersonalAccidentCategory", PersonalAccidentCategory);
            GeneralProposalInformationObject.put("CoPaymentLoading", CoPaymentLoading);
            GeneralProposalInformationObject.put("RequestType", "Quotation");
            GeneralProposalGroupObject.put("GeneralProposalInformation", GeneralProposalInformationObject);
            GeneralProposalObject.put("GeneralProposalGroup", GeneralProposalGroupObject);

            //FinancierDetails
            JSONObject FinancierDetailsObject = new JSONObject();
            JSONObject FinancierDtlGrpObject = new JSONObject();
            JSONObject FinancierDtlGrpDataObject = new JSONObject();
            FinancierDtlGrpDataObject.put("FinancierCode", "NULL");
            FinancierDtlGrpDataObject.put("AgreementType", "NULL");
            FinancierDtlGrpDataObject.put("BranchName", "NULL");
            FinancierDtlGrpDataObject.put("FinancierName", "NULL");
            FinancierDtlGrpDataObject.put("SrNo", "NULL");
            FinancierDtlGrpObject.put("FinancierDtlGrpData", FinancierDtlGrpDataObject);
            FinancierDetailsObject.put("FinancierDtlGrp", FinancierDtlGrpObject);
            GeneralProposalObject.put("FinancierDetails", FinancierDetailsObject);

            //PreviousPolicyDetails
            JSONObject PreviousPolicyDetailsObject = new JSONObject();
            JSONObject PreviousPolDtlGroupObject = new JSONObject();
            JSONObject PreviousPolDtlGroupDataObject = new JSONObject();
            PreviousPolDtlGroupDataObject.put("ProductCode", "NULL");
            PreviousPolDtlGroupDataObject.put("ClaimSettled", "NULL");
            PreviousPolDtlGroupDataObject.put("ClaimPremium", "0");
            PreviousPolDtlGroupDataObject.put("ClaimAmount", "0");
            PreviousPolDtlGroupDataObject.put("DateofLoss", "NULL");
            PreviousPolDtlGroupDataObject.put("NatureofLoss", "NULL");
            PreviousPolDtlGroupDataObject.put("ClaimNo", "");
            PreviousPolDtlGroupDataObject.put("PolicyEffectiveTo", "");
            PreviousPolDtlGroupDataObject.put("PolicyEffectiveFrom", "");
            PreviousPolDtlGroupDataObject.put("PolicyPremium", "0");
            PreviousPolDtlGroupDataObject.put("PolicyNo", "NULL");
            PreviousPolDtlGroupDataObject.put("PolicyYear", "NULL");
            PreviousPolDtlGroupDataObject.put("OfficeCode", "NULL");
            PreviousPolDtlGroupDataObject.put("CorporateCustomerId", "NULL");
            PreviousPolDtlGroupDataObject.put("InsurerName", "NULL");
            PreviousPolDtlGroupDataObject.put("InsurerAddress", "NULL");
            PreviousPolDtlGroupObject.put("PreviousPolDtlGroupData", PreviousPolDtlGroupDataObject);
            PreviousPolicyDetailsObject.put("PreviousPolDtlGroup", PreviousPolDtlGroupObject);
            PreviousPolicyDetailsObject.put("PreviousPolicyType", "Package Policy");
            PreviousPolicyDetailsObject.put("OfficeAddress", "NULL");
            GeneralProposalObject.put("PreviousPolicyDetails", PreviousPolicyDetailsObject);
            ProductObject.put("GeneralProposal", GeneralProposalObject);

            //PremiumCalculation
            JSONObject PremiumCalculationObject = new JSONObject();
            PremiumCalculationObject.put("NetPremium", "0");
            PremiumCalculationObject.put("ServiceTax", "0");
            PremiumCalculationObject.put("StampDuty2", "0");
            PremiumCalculationObject.put("TotalPremium", "0");
            PremiumCalculationObject.put("CGST", "0");
            PremiumCalculationObject.put("SGST", "");
            PremiumCalculationObject.put("UGST", "0");
            PremiumCalculationObject.put("IGST", "0");
            ProductObject.put("PremiumCalculation", PremiumCalculationObject);
//            ProductObject.put("PremiumCalculation",PremiumCalculationObject);
//            ProductObject.put("PremiumCalculation",GeneralProposalObject);

            //Risks
            JSONObject RisksObject = new JSONObject();
            JSONObject RiskObject = new JSONObject();
            JSONObject RisksDataObject = new JSONObject();
            JSONObject InsuredDetailsObject = new JSONObject();
            JSONArray InsuredDetailsGroupArray = new JSONArray();

            JSONObject InsuredDetailsObj = new JSONObject();
            InsuredDetailsObj.put("InsuredType", "Adult");
            InsuredDetailsObj.put("FirstName", "");
            InsuredDetailsObj.put("LastName", "");
            InsuredDetailsObj.put("DOB", strSelfAgeEditText);
            InsuredDetailsObj.put("Gender", strGender);
            InsuredDetailsObj.put("Relationship", "Self");
            InsuredDetailsObj.put("Occupation", "");
            InsuredDetailsObj.put("NomineeName", "");
            InsuredDetailsObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsObj = new JSONObject();
            HealthIndicatorsObj.put("PED", "N");
            HealthIndicatorsObj.put("PEDDeclared", "N");
            HealthIndicatorsObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsObj.put("CholesterolLevel", "NA");
            HealthIndicatorsObj.put("BodyMassIndex", "30");
            HealthIndicatorsObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsObj.put("CoMorbidity", "N");
            InsuredDetailsObj.put("HealthIndicators", HealthIndicatorsObj);

            JSONObject CoverDetailsObj = new JSONObject();
            JSONArray CoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversObj = new JSONObject();
            BasicInsuranceCoversObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversObj.put("CoverRate", "0");
            BasicInsuranceCoversObj.put("CoverPremium", "0");
            BasicInsuranceCoversObj.put("CoverGroups", "Basic Insurance Cover");
            CoversArray.put(BasicInsuranceCoversObj);

            JSONObject PersonalAccidentCoversObj = new JSONObject();
            PersonalAccidentCoversObj.put("Applicable", PersonalStatus);
            PersonalAccidentCoversObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversObj.put("CoverRate", "0");
            PersonalAccidentCoversObj.put("CoverPremium", "0");
            PersonalAccidentCoversObj.put("CoverGroups", "Personal Accident Cover");
            CoversArray.put(PersonalAccidentCoversObj);

            JSONObject CriticalIllnessCoversObj = new JSONObject();
            CriticalIllnessCoversObj.put("Applicable", CriticalStatus);
            CriticalIllnessCoversObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversObj.put("CoverRate", "0");
            CriticalIllnessCoversObj.put("CoverPremium", "0");
            CriticalIllnessCoversObj.put("CoverGroups", "Critical Illness Cover");
            CoversArray.put(CriticalIllnessCoversObj);


            JSONObject DailyHospitalCoversObj = new JSONObject();
            DailyHospitalCoversObj.put("Applicable", DailyHospitalSatus);
            DailyHospitalCoversObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversObj.put("CoverRate", "0");
            DailyHospitalCoversObj.put("CoverPremium", "0");
            DailyHospitalCoversObj.put("CoverGroups", "Daily Hospital Cash Cover");
            CoversArray.put(DailyHospitalCoversObj);

            JSONObject ModernCoversObj = new JSONObject();
            ModernCoversObj.put("Applicable", ModernTreatmentsStatus);
            ModernCoversObj.put("CoverSI", strSumInsured);
            ModernCoversObj.put("CoverRate", "0");
            ModernCoversObj.put("CoverPremium", "0");
            ModernCoversObj.put("CoverGroups", "Modern Treatments");
            CoversArray.put(ModernCoversObj);
            JSONObject ExtensionPreHospitalizationCoversObj = new JSONObject();
            ExtensionPreHospitalizationCoversObj.put("Applicable", ExtensionPreHospitalization);
            ExtensionPreHospitalizationCoversObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            CoversArray.put(ExtensionPreHospitalizationCoversObj);

            JSONObject ExtensionPostHospitalizationCoversObj = new JSONObject();
            ExtensionPostHospitalizationCoversObj.put("Applicable", ExtensionPr0Hospitalization);
            ExtensionPostHospitalizationCoversObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversObj.put("CoverGroups", "Extension under Post-Hospitalization");
            CoversArray.put(ExtensionPostHospitalizationCoversObj);


            JSONObject MaternityAndChildcareCoversObj = new JSONObject();
            MaternityAndChildcareCoversObj.put("Applicable", MaternityAndChildcareMale);
            MaternityAndChildcareCoversObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversObj.put("CoverRate", "0");
            MaternityAndChildcareCoversObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            CoversArray.put(MaternityAndChildcareCoversObj);

            JSONObject CoverageForNonMedicalCoversObj = new JSONObject();
            CoverageForNonMedicalCoversObj.put("Applicable", CoverageNonMedical);
            CoverageForNonMedicalCoversObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversObj.put("CoverGroups", "Coverage for Non-Medical Items");
            CoversArray.put(CoverageForNonMedicalCoversObj);

            JSONObject ConditionWaiverCoversObj = new JSONObject();
            ConditionWaiverCoversObj.put("Applicable", ConditionWaiverStatus);
            ConditionWaiverCoversObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversObj.put("CoverRate", "0");
            ConditionWaiverCoversObj.put("CoverPremium", "0");
            ConditionWaiverCoversObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            CoversArray.put(ConditionWaiverCoversObj);

            JSONObject PreExistingDiseaseCoversObj = new JSONObject();
            PreExistingDiseaseCoversObj.put("Applicable", PreExistingDiseaseStatus);
            PreExistingDiseaseCoversObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversObj.put("CoverRate", "0");
            PreExistingDiseaseCoversObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            CoversArray.put(PreExistingDiseaseCoversObj);

            JSONObject OutpatientDentalWaitingCoversObj = new JSONObject();
            OutpatientDentalWaitingCoversObj.put("Applicable", OutpatientDentalStatus);
            OutpatientDentalWaitingCoversObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            CoversArray.put(OutpatientDentalWaitingCoversObj);

            JSONObject EmergencyTravellingAllowanceCoversObj = new JSONObject();
            EmergencyTravellingAllowanceCoversObj.put("Applicable", EmergencyTravellingStatus);
            EmergencyTravellingAllowanceCoversObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversObj.put("CoverGroups", "Emergency Travelling Allowance");
            CoversArray.put(EmergencyTravellingAllowanceCoversObj);

            JSONObject SecondOpinionCoversObj = new JSONObject();
            SecondOpinionCoversObj.put("Applicable", SecondOpinionStatus);
            SecondOpinionCoversObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversObj.put("CoverRate", "0");
            SecondOpinionCoversObj.put("CoverPremium", "0");
            SecondOpinionCoversObj.put("CoverGroups", "Second Opinion");
            CoversArray.put(SecondOpinionCoversObj);

            JSONObject RestCureCoversObj = new JSONObject();
            RestCureCoversObj.put("Applicable", RestCureStatus);
            RestCureCoversObj.put("CoverSI", strSumInsured);
            RestCureCoversObj.put("CoverRate", "0");
            RestCureCoversObj.put("CoverPremium", "0");
            RestCureCoversObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            CoversArray.put(RestCureCoversObj);

            JSONObject ObesityWeightCoversObj = new JSONObject();
            ObesityWeightCoversObj.put("Applicable", ObesityWeightStatus);
            ObesityWeightCoversObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversObj.put("CoverRate", "0");
            ObesityWeightCoversObj.put("CoverPremium", "0");
            ObesityWeightCoversObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            CoversArray.put(ObesityWeightCoversObj);

            JSONObject SterilityInfertilityCoversObj = new JSONObject();
            SterilityInfertilityCoversObj.put("Applicable", SterilityInfertilityMale);
            SterilityInfertilityCoversObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversObj.put("CoverRate", "0");
            SterilityInfertilityCoversObj.put("CoverPremium", "0");
            SterilityInfertilityCoversObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            CoversArray.put(SterilityInfertilityCoversObj);

            JSONObject EnhancedOrganDonorCoversObj = new JSONObject();
            EnhancedOrganDonorCoversObj.put("Applicable", EnhancedOrganStatus);
            EnhancedOrganDonorCoversObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            CoversArray.put(EnhancedOrganDonorCoversObj);

            JSONObject PremiumWaiverCoversObj = new JSONObject();
            PremiumWaiverCoversObj.put("Applicable", PremiumWaiverStatus);
            PremiumWaiverCoversObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversObj.put("CoverRate", "0");
            PremiumWaiverCoversObj.put("CoverPremium", "0");
            PremiumWaiverCoversObj.put("CoverGroups", "Premium Waiver");
            CoversArray.put(PremiumWaiverCoversObj);

            JSONObject GlobalCoversObj = new JSONObject();
            GlobalCoversObj.put("Applicable", GlobalCoverStatus);
            GlobalCoversObj.put("CoverSI", strSumInsured);
            GlobalCoversObj.put("CoverRate", "0");
            GlobalCoversObj.put("CoverPremium", "0");
            GlobalCoversObj.put("CoverGroups", "Global Cover");
            CoversArray.put(GlobalCoversObj);


            JSONObject MedicallyAdvisedCoversObj = new JSONObject();
            MedicallyAdvisedCoversObj.put("Applicable", MedicallyAdvisedStatus);
            MedicallyAdvisedCoversObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversObj.put("CoverRate", "0");
            MedicallyAdvisedCoversObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversObj.put("CoverGroups", "Medically Advised Support Devices");
            CoversArray.put(MedicallyAdvisedCoversObj);

            JSONObject EmergencyCoversObj = new JSONObject();
            EmergencyCoversObj.put("Applicable", EmergencyAssistanceStatus);
            EmergencyCoversObj.put("CoverSI", strSumInsured);
            EmergencyCoversObj.put("CoverRate", "0");
            EmergencyCoversObj.put("CoverPremium", "0");
            EmergencyCoversObj.put("CoverGroups", "Emergency Assistance Service");
            CoversArray.put(EmergencyCoversObj);

            JSONObject HomeCareTreatmentCoversObj = new JSONObject();
            HomeCareTreatmentCoversObj.put("Applicable", HomeCareStatus);
            HomeCareTreatmentCoversObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversObj.put("CoverRate", "0");
            HomeCareTreatmentCoversObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversObj.put("CoverGroups", "Home Care Treatment");
            CoversArray.put(HomeCareTreatmentCoversObj);

            JSONObject WellnessBenefitCoversObj = new JSONObject();
            WellnessBenefitCoversObj.put("Applicable", WellnessBenefitStatus);
            WellnessBenefitCoversObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversObj.put("CoverRate", "0");
            WellnessBenefitCoversObj.put("CoverPremium", "0");
            WellnessBenefitCoversObj.put("CoverGroups", "Wellness Benefit");
            CoversArray.put(WellnessBenefitCoversObj);

            JSONObject DiseaseManagementCoversObj = new JSONObject();
            DiseaseManagementCoversObj.put("Applicable", DiseaseManagementStatus);
            DiseaseManagementCoversObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversObj.put("CoverRate", "0");
            DiseaseManagementCoversObj.put("CoverPremium", "0");
            DiseaseManagementCoversObj.put("CoverGroups", "Disease Management Program");
            CoversArray.put(DiseaseManagementCoversObj);
            CoverDetailsObj.put("Covers", CoversArray);
            InsuredDetailsObj.put("CoverDetails", CoverDetailsObj);

            //2nd Adult
            JSONObject SecondAdultObj = new JSONObject();
            SecondAdultObj.put("InsuredType", "Adult");
            SecondAdultObj.put("FirstName", "");
            SecondAdultObj.put("LastName", "");
            SecondAdultObj.put("DOB", strSpouseAgeEditText);
            SecondAdultObj.put("Gender", "F");
            SecondAdultObj.put("Relationship", "Spouse");
            SecondAdultObj.put("Occupation", "");
            SecondAdultObj.put("NomineeName", "");
            SecondAdultObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsSecondObj = new JSONObject();
            HealthIndicatorsSecondObj.put("PED", "N");
            HealthIndicatorsSecondObj.put("PEDDeclared", "N");
            HealthIndicatorsSecondObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsSecondObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsSecondObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsSecondObj.put("CholesterolLevel", "NA");
            HealthIndicatorsSecondObj.put("BodyMassIndex", "30");
            HealthIndicatorsSecondObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsSecondObj.put("CoMorbidity", "N");
            SecondAdultObj.put("HealthIndicators", HealthIndicatorsSecondObj);

            JSONObject CoverDetailsSecondObj = new JSONObject();
            JSONArray SecondAdultCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversAdultSecObj = new JSONObject();
            BasicInsuranceCoversAdultSecObj.put("Applicable", "True");
            BasicInsuranceCoversAdultSecObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversAdultSecObj.put("CoverRate", "0");
            BasicInsuranceCoversAdultSecObj.put("CoverPremium", "0");
            BasicInsuranceCoversAdultSecObj.put("CoverGroups", "Basic Insurance Cover");
            SecondAdultCoversArray.put(BasicInsuranceCoversAdultSecObj);

            JSONObject PersonalAccidentCoversSecondAdultObj = new JSONObject();
            PersonalAccidentCoversSecondAdultObj.put("Applicable", PersonalStatus);
            PersonalAccidentCoversSecondAdultObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversSecondAdultObj.put("CoverRate", "0");
            PersonalAccidentCoversSecondAdultObj.put("CoverPremium", "0");
            PersonalAccidentCoversSecondAdultObj.put("CoverGroups", "Personal Accident Cover");
            SecondAdultCoversArray.put(PersonalAccidentCoversSecondAdultObj);

            JSONObject CriticalIllnessCoversSecondAdultObj = new JSONObject();
            CriticalIllnessCoversSecondAdultObj.put("Applicable", CriticalStatus);
            CriticalIllnessCoversSecondAdultObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversSecondAdultObj.put("CoverRate", "0");
            CriticalIllnessCoversSecondAdultObj.put("CoverPremium", "0");
            CriticalIllnessCoversSecondAdultObj.put("CoverGroups", "Critical Illness Cover");
            SecondAdultCoversArray.put(CriticalIllnessCoversSecondAdultObj);


            JSONObject DailyHospitalCoversSecondAdultObj = new JSONObject();
            DailyHospitalCoversSecondAdultObj.put("Applicable", DailyHospitalSatus);
            DailyHospitalCoversSecondAdultObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversSecondAdultObj.put("CoverRate", "0");
            DailyHospitalCoversSecondAdultObj.put("CoverPremium", "0");
            DailyHospitalCoversSecondAdultObj.put("CoverGroups", "Daily Hospital Cash Cover");
            SecondAdultCoversArray.put(DailyHospitalCoversSecondAdultObj);

            JSONObject ModernCoversSecondAdultObj = new JSONObject();
            ModernCoversSecondAdultObj.put("Applicable", ModernTreatmentsStatus);
            ModernCoversSecondAdultObj.put("CoverSI", strSumInsured);
            ModernCoversSecondAdultObj.put("CoverRate", "0");
            ModernCoversSecondAdultObj.put("CoverPremium", "0");
            ModernCoversSecondAdultObj.put("CoverGroups", "Modern Treatments");
            SecondAdultCoversArray.put(ModernCoversSecondAdultObj);
            JSONObject ExtensionPreHospitalizationCoversSecondAdultObj = new JSONObject();
            ExtensionPreHospitalizationCoversSecondAdultObj.put("Applicable", ExtensionPreHospitalization);
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            SecondAdultCoversArray.put(ExtensionPreHospitalizationCoversSecondAdultObj);

            JSONObject ExtensionPostHospitalizationCoversSecondAdultObj = new JSONObject();
            ExtensionPostHospitalizationCoversSecondAdultObj.put("Applicable", ExtensionPr0Hospitalization);
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverGroups", "Extension under Post-Hospitalization");
            SecondAdultCoversArray.put(ExtensionPostHospitalizationCoversSecondAdultObj);


            JSONObject MaternityAndChildcareCoversSecAdultObj = new JSONObject();
            MaternityAndChildcareCoversSecAdultObj.put("Applicable", MaternityAndChildcare);
            MaternityAndChildcareCoversSecAdultObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversSecAdultObj.put("CoverRate", "0");
            MaternityAndChildcareCoversSecAdultObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversSecAdultObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            SecondAdultCoversArray.put(MaternityAndChildcareCoversSecAdultObj);

            JSONObject CoverageForNonMedicalCoversSecAdultObj = new JSONObject();
            CoverageForNonMedicalCoversSecAdultObj.put("Applicable", CoverageNonMedical);
            CoverageForNonMedicalCoversSecAdultObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversSecAdultObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversSecAdultObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversSecAdultObj.put("CoverGroups", "Coverage for Non-Medical Items");
            SecondAdultCoversArray.put(CoverageForNonMedicalCoversSecAdultObj);

            JSONObject ConditionWaiverCoversSecAdultObj = new JSONObject();
            ConditionWaiverCoversSecAdultObj.put("Applicable", ConditionWaiverStatus);
            ConditionWaiverCoversSecAdultObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversSecAdultObj.put("CoverRate", "0");
            ConditionWaiverCoversSecAdultObj.put("CoverPremium", "0");
            ConditionWaiverCoversSecAdultObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            SecondAdultCoversArray.put(ConditionWaiverCoversSecAdultObj);

            JSONObject PreExistingDiseaseCoversSecAdultObj = new JSONObject();
            PreExistingDiseaseCoversSecAdultObj.put("Applicable", PreExistingDiseaseStatus);
            PreExistingDiseaseCoversSecAdultObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversSecAdultObj.put("CoverRate", "0");
            PreExistingDiseaseCoversSecAdultObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversSecAdultObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            SecondAdultCoversArray.put(PreExistingDiseaseCoversSecAdultObj);

            JSONObject OutpatientDentalWaitingCoversSecAdultObj = new JSONObject();
            OutpatientDentalWaitingCoversSecAdultObj.put("Applicable", OutpatientDentalStatus);
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            SecondAdultCoversArray.put(OutpatientDentalWaitingCoversSecAdultObj);

            JSONObject EmergencyTravellingAllowanceCoversSecAdultObj = new JSONObject();
            EmergencyTravellingAllowanceCoversSecAdultObj.put("Applicable", EmergencyTravellingStatus);
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverGroups", "Emergency Travelling Allowance");
            SecondAdultCoversArray.put(EmergencyTravellingAllowanceCoversSecAdultObj);

            JSONObject SecondOpinionCoversSecAdultObj = new JSONObject();
            SecondOpinionCoversSecAdultObj.put("Applicable", SecondOpinionStatus);
            SecondOpinionCoversSecAdultObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversSecAdultObj.put("CoverRate", "0");
            SecondOpinionCoversSecAdultObj.put("CoverPremium", "0");
            SecondOpinionCoversSecAdultObj.put("CoverGroups", "Second Opinion");
            SecondAdultCoversArray.put(SecondOpinionCoversSecAdultObj);

            JSONObject RestCureCoversSecAdultObj = new JSONObject();
            RestCureCoversSecAdultObj.put("Applicable", RestCureStatus);
            RestCureCoversSecAdultObj.put("CoverSI", strSumInsured);
            RestCureCoversSecAdultObj.put("CoverRate", "0");
            RestCureCoversSecAdultObj.put("CoverPremium", "0");
            RestCureCoversSecAdultObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            SecondAdultCoversArray.put(RestCureCoversSecAdultObj);

            JSONObject ObesityWeightCoversSecAdultObj = new JSONObject();
            ObesityWeightCoversSecAdultObj.put("Applicable", ObesityWeightStatus);
            ObesityWeightCoversSecAdultObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversSecAdultObj.put("CoverRate", "0");
            ObesityWeightCoversSecAdultObj.put("CoverPremium", "0");
            ObesityWeightCoversSecAdultObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            SecondAdultCoversArray.put(ObesityWeightCoversSecAdultObj);

            JSONObject SterilityInfertilityCoversSecAdultObj = new JSONObject();
            SterilityInfertilityCoversSecAdultObj.put("Applicable", SterilityInfertilityStatus);
            SterilityInfertilityCoversSecAdultObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversSecAdultObj.put("CoverRate", "0");
            SterilityInfertilityCoversSecAdultObj.put("CoverPremium", "0");
            SterilityInfertilityCoversSecAdultObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            SecondAdultCoversArray.put(SterilityInfertilityCoversSecAdultObj);

            JSONObject EnhancedOrganDonorCoversSecAdultObj = new JSONObject();
            EnhancedOrganDonorCoversSecAdultObj.put("Applicable", EnhancedOrganStatus);
            EnhancedOrganDonorCoversSecAdultObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversSecAdultObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversSecAdultObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversSecAdultObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            SecondAdultCoversArray.put(EnhancedOrganDonorCoversSecAdultObj);

            JSONObject PremiumWaiverCoversSecAdultObj = new JSONObject();
            PremiumWaiverCoversSecAdultObj.put("Applicable", PremiumWaiverStatus);
            PremiumWaiverCoversSecAdultObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversSecAdultObj.put("CoverRate", "0");
            PremiumWaiverCoversSecAdultObj.put("CoverPremium", "0");
            PremiumWaiverCoversSecAdultObj.put("CoverGroups", "Premium Waiver");
            SecondAdultCoversArray.put(PremiumWaiverCoversSecAdultObj);

            JSONObject GlobalCoversSecAdultObj = new JSONObject();
            GlobalCoversSecAdultObj.put("Applicable", GlobalCoverStatus);
            GlobalCoversSecAdultObj.put("CoverSI", strSumInsured);
            GlobalCoversSecAdultObj.put("CoverRate", "0");
            GlobalCoversSecAdultObj.put("CoverPremium", "0");
            GlobalCoversSecAdultObj.put("CoverGroups", "Global Cover");
            SecondAdultCoversArray.put(GlobalCoversSecAdultObj);


            JSONObject MedicallyAdvisedCoversSecAdultObj = new JSONObject();
            MedicallyAdvisedCoversSecAdultObj.put("Applicable", MedicallyAdvisedStatus);
            MedicallyAdvisedCoversSecAdultObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversSecAdultObj.put("CoverRate", "0");
            MedicallyAdvisedCoversSecAdultObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversSecAdultObj.put("CoverGroups", "Medically Advised Support Devices");
            SecondAdultCoversArray.put(MedicallyAdvisedCoversSecAdultObj);

            JSONObject EmergencyCoversSecAdultObj = new JSONObject();
            EmergencyCoversSecAdultObj.put("Applicable", EmergencyAssistanceStatus);
            EmergencyCoversSecAdultObj.put("CoverSI", strSumInsured);
            EmergencyCoversSecAdultObj.put("CoverRate", "0");
            EmergencyCoversSecAdultObj.put("CoverPremium", "0");
            EmergencyCoversSecAdultObj.put("CoverGroups", "Emergency Assistance Service");
            SecondAdultCoversArray.put(EmergencyCoversSecAdultObj);

            JSONObject HomeCareTreatmentCoversSecAdultObj = new JSONObject();
            HomeCareTreatmentCoversSecAdultObj.put("Applicable", HomeCareStatus);
            HomeCareTreatmentCoversSecAdultObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversSecAdultObj.put("CoverRate", "0");
            HomeCareTreatmentCoversSecAdultObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversSecAdultObj.put("CoverGroups", "Home Care Treatment");
            SecondAdultCoversArray.put(HomeCareTreatmentCoversSecAdultObj);

            JSONObject WellnessBenefitCoversSecAdultObj = new JSONObject();
            WellnessBenefitCoversSecAdultObj.put("Applicable", WellnessBenefitStatus);
            WellnessBenefitCoversSecAdultObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversSecAdultObj.put("CoverRate", "0");
            WellnessBenefitCoversSecAdultObj.put("CoverPremium", "0");
            WellnessBenefitCoversSecAdultObj.put("CoverGroups", "Wellness Benefit");
            SecondAdultCoversArray.put(WellnessBenefitCoversSecAdultObj);

            JSONObject DiseaseManagementCoversSecAdultObj = new JSONObject();
            DiseaseManagementCoversSecAdultObj.put("Applicable", DiseaseManagementStatus);
            DiseaseManagementCoversSecAdultObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversSecAdultObj.put("CoverRate", "0");
            DiseaseManagementCoversSecAdultObj.put("CoverPremium", "0");
            DiseaseManagementCoversSecAdultObj.put("CoverGroups", "Disease Management Program");
            SecondAdultCoversArray.put(DiseaseManagementCoversSecAdultObj);
            CoverDetailsSecondObj.put("Covers", SecondAdultCoversArray);
            SecondAdultObj.put("CoverDetails", CoverDetailsSecondObj);

            //ChildFirst
            JSONObject FirstChildObj = new JSONObject();
            FirstChildObj.put("InsuredType", "Child");
            FirstChildObj.put("FirstName", "");
            FirstChildObj.put("LastName", "");
            FirstChildObj.put("DOB", strFirstSonAgeEditText);
            FirstChildObj.put("Gender", "M");
            FirstChildObj.put("Relationship", "");
            FirstChildObj.put("Occupation", "");
            FirstChildObj.put("NomineeName", "");
            FirstChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFirstChildObj = new JSONObject();
            HealthIndicatorsFirstChildObj.put("PED", "N");
            HealthIndicatorsFirstChildObj.put("PEDDeclared", "N");
            HealthIndicatorsFirstChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFirstChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFirstChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFirstChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFirstChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsFirstChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFirstChildObj.put("CoMorbidity", "N");
            FirstChildObj.put("HealthIndicators", HealthIndicatorsFirstChildObj);

            JSONObject CoverDetailsFirstChildObj = new JSONObject();
            JSONArray FirstChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversChildFirstObj = new JSONObject();
            BasicInsuranceCoversChildFirstObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversChildFirstObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversChildFirstObj.put("CoverRate", "0");
            BasicInsuranceCoversChildFirstObj.put("CoverPremium", "0");
            BasicInsuranceCoversChildFirstObj.put("CoverGroups", "Basic Insurance Cover");
            FirstChildCoversArray.put(BasicInsuranceCoversChildFirstObj);

            JSONObject PersonalAccidentCoversFirstObj = new JSONObject();
            PersonalAccidentCoversFirstObj.put("Applicable", PersonalStatusChildOne);
            PersonalAccidentCoversFirstObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFirstObj.put("CoverRate", "0");
            PersonalAccidentCoversFirstObj.put("CoverPremium", "0");
            PersonalAccidentCoversFirstObj.put("CoverGroups", "Personal Accident Cover");
            FirstChildCoversArray.put(PersonalAccidentCoversFirstObj);

            JSONObject CriticalIllnessCoversFirstObj = new JSONObject();
            CriticalIllnessCoversFirstObj.put("Applicable", CriticalStatus);
            CriticalIllnessCoversFirstObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFirstObj.put("CoverRate", "0");
            CriticalIllnessCoversFirstObj.put("CoverPremium", "0");
            CriticalIllnessCoversFirstObj.put("CoverGroups", "Critical Illness Cover");
            FirstChildCoversArray.put(CriticalIllnessCoversFirstObj);


            JSONObject DailyHospitalCoversFirstObj = new JSONObject();
            DailyHospitalCoversFirstObj.put("Applicable", DailyHospitalSatus);
            DailyHospitalCoversFirstObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFirstObj.put("CoverRate", "0");
            DailyHospitalCoversFirstObj.put("CoverPremium", "0");
            DailyHospitalCoversFirstObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FirstChildCoversArray.put(DailyHospitalCoversFirstObj);

            JSONObject ModernCoversFirstObj = new JSONObject();
            ModernCoversFirstObj.put("Applicable", ModernTreatmentsStatus);
            ModernCoversFirstObj.put("CoverSI", strSumInsured);
            ModernCoversFirstObj.put("CoverRate", "0");
            ModernCoversFirstObj.put("CoverPremium", "0");
            ModernCoversFirstObj.put("CoverGroups", "Modern Treatments");
            FirstChildCoversArray.put(ModernCoversFirstObj);
            JSONObject ExtensionPreHospitalizationCoversFirstObj = new JSONObject();
            ExtensionPreHospitalizationCoversFirstObj.put("Applicable", ExtensionPreHospitalization);
            ExtensionPreHospitalizationCoversFirstObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFirstObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFirstObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFirstObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FirstChildCoversArray.put(ExtensionPreHospitalizationCoversFirstObj);

            JSONObject ExtensionPostHospitalizationCoversFirstObj = new JSONObject();
            ExtensionPostHospitalizationCoversFirstObj.put("Applicable", ExtensionPr0Hospitalization);
            ExtensionPostHospitalizationCoversFirstObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFirstObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFirstObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFirstObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FirstChildCoversArray.put(ExtensionPostHospitalizationCoversFirstObj);


            JSONObject MaternityAndChildcareCoversFirstObj = new JSONObject();
            MaternityAndChildcareCoversFirstObj.put("Applicable", "False");
            MaternityAndChildcareCoversFirstObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFirstObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFirstObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFirstObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FirstChildCoversArray.put(MaternityAndChildcareCoversFirstObj);

            JSONObject CoverageForNonMedicalCoversFirstObj = new JSONObject();
            CoverageForNonMedicalCoversFirstObj.put("Applicable", CoverageNonMedical);
            CoverageForNonMedicalCoversFirstObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFirstObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFirstObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFirstObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FirstChildCoversArray.put(CoverageForNonMedicalCoversFirstObj);

            JSONObject ConditionWaiverCoversFirstObj = new JSONObject();
            ConditionWaiverCoversFirstObj.put("Applicable", ConditionWaiverStatus);
            ConditionWaiverCoversFirstObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFirstObj.put("CoverRate", "0");
            ConditionWaiverCoversFirstObj.put("CoverPremium", "0");
            ConditionWaiverCoversFirstObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FirstChildCoversArray.put(ConditionWaiverCoversFirstObj);

            JSONObject PreExistingDiseaseCoversFirstObj = new JSONObject();
            PreExistingDiseaseCoversFirstObj.put("Applicable", PreExistingDiseaseStatus);
            PreExistingDiseaseCoversFirstObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFirstObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFirstObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFirstObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FirstChildCoversArray.put(PreExistingDiseaseCoversFirstObj);

            JSONObject OutpatientDentalWaitingCoversFirstObj = new JSONObject();
            OutpatientDentalWaitingCoversFirstObj.put("Applicable", OutpatientDentalStatus);
            OutpatientDentalWaitingCoversFirstObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFirstObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFirstObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFirstObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FirstChildCoversArray.put(OutpatientDentalWaitingCoversFirstObj);

            JSONObject EmergencyTravellingAllowanceCoversFirstObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFirstObj.put("Applicable", EmergencyTravellingStatus);
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverGroups", "Emergency Travelling Allowance");
            FirstChildCoversArray.put(EmergencyTravellingAllowanceCoversFirstObj);

            JSONObject SecondOpinionCoversFirstObj = new JSONObject();
            SecondOpinionCoversFirstObj.put("Applicable", SecondOpinionStatus);
            SecondOpinionCoversFirstObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFirstObj.put("CoverRate", "0");
            SecondOpinionCoversFirstObj.put("CoverPremium", "0");
            SecondOpinionCoversFirstObj.put("CoverGroups", "Second Opinion");
            FirstChildCoversArray.put(SecondOpinionCoversFirstObj);

            JSONObject RestCureCoversFirstObj = new JSONObject();
            RestCureCoversFirstObj.put("Applicable", RestCureStatus);
            RestCureCoversFirstObj.put("CoverSI", strSumInsured);
            RestCureCoversFirstObj.put("CoverRate", "0");
            RestCureCoversFirstObj.put("CoverPremium", "0");
            RestCureCoversFirstObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FirstChildCoversArray.put(RestCureCoversFirstObj);

            JSONObject ObesityWeightCoversFirstObj = new JSONObject();
            ObesityWeightCoversFirstObj.put("Applicable", ObesityWeightStatus);
            ObesityWeightCoversFirstObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFirstObj.put("CoverRate", "0");
            ObesityWeightCoversFirstObj.put("CoverPremium", "0");
            ObesityWeightCoversFirstObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FirstChildCoversArray.put(ObesityWeightCoversFirstObj);

            JSONObject SterilityInfertilityCoversFirstObj = new JSONObject();
            SterilityInfertilityCoversFirstObj.put("Applicable", "False");
            SterilityInfertilityCoversFirstObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFirstObj.put("CoverRate", "0");
            SterilityInfertilityCoversFirstObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFirstObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FirstChildCoversArray.put(SterilityInfertilityCoversFirstObj);

            JSONObject EnhancedOrganDonorCoversFirstObj = new JSONObject();
            EnhancedOrganDonorCoversFirstObj.put("Applicable", EnhancedOrganStatus);
            EnhancedOrganDonorCoversFirstObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFirstObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFirstObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFirstObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FirstChildCoversArray.put(EnhancedOrganDonorCoversFirstObj);

            JSONObject PremiumWaiverCoversFirstObj = new JSONObject();
            PremiumWaiverCoversFirstObj.put("Applicable", PremiumWaiverStatus);
            PremiumWaiverCoversFirstObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFirstObj.put("CoverRate", "0");
            PremiumWaiverCoversFirstObj.put("CoverPremium", "0");
            PremiumWaiverCoversFirstObj.put("CoverGroups", "Premium Waiver");
            FirstChildCoversArray.put(PremiumWaiverCoversFirstObj);

            JSONObject GlobalCoversFirstObj = new JSONObject();
            GlobalCoversFirstObj.put("Applicable", GlobalCoverStatus);
            GlobalCoversFirstObj.put("CoverSI", strSumInsured);
            GlobalCoversFirstObj.put("CoverRate", "0");
            GlobalCoversFirstObj.put("CoverPremium", "0");
            GlobalCoversFirstObj.put("CoverGroups", "Global Cover");
            FirstChildCoversArray.put(GlobalCoversFirstObj);


            JSONObject MedicallyAdvisedCoversFirstObj = new JSONObject();
            MedicallyAdvisedCoversFirstObj.put("Applicable", MedicallyAdvisedStatus);
            MedicallyAdvisedCoversFirstObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFirstObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFirstObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFirstObj.put("CoverGroups", "Medically Advised Support Devices");
            FirstChildCoversArray.put(MedicallyAdvisedCoversFirstObj);

            JSONObject EmergencyCoversFirstObj = new JSONObject();
            EmergencyCoversFirstObj.put("Applicable", EmergencyAssistanceStatus);
            EmergencyCoversFirstObj.put("CoverSI", strSumInsured);
            EmergencyCoversFirstObj.put("CoverRate", "0");
            EmergencyCoversFirstObj.put("CoverPremium", "0");
            EmergencyCoversFirstObj.put("CoverGroups", "Emergency Assistance Service");
            FirstChildCoversArray.put(EmergencyCoversFirstObj);

            JSONObject HomeCareTreatmentCoversFirstObj = new JSONObject();
            HomeCareTreatmentCoversFirstObj.put("Applicable", HomeCareStatus);
            HomeCareTreatmentCoversFirstObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFirstObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFirstObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFirstObj.put("CoverGroups", "Home Care Treatment");
            FirstChildCoversArray.put(HomeCareTreatmentCoversFirstObj);

            JSONObject WellnessBenefitCoversFirstObj = new JSONObject();
            WellnessBenefitCoversFirstObj.put("Applicable", WellnessBenefitStatus);
            WellnessBenefitCoversFirstObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFirstObj.put("CoverRate", "0");
            WellnessBenefitCoversFirstObj.put("CoverPremium", "0");
            WellnessBenefitCoversFirstObj.put("CoverGroups", "Wellness Benefit");
            FirstChildCoversArray.put(WellnessBenefitCoversFirstObj);

            JSONObject DiseaseManagementCoversFirstObj = new JSONObject();
            DiseaseManagementCoversFirstObj.put("Applicable", DiseaseManagementStatus);
            DiseaseManagementCoversFirstObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFirstObj.put("CoverRate", "0");
            DiseaseManagementCoversFirstObj.put("CoverPremium", "0");
            DiseaseManagementCoversFirstObj.put("CoverGroups", "Disease Management Program");
            FirstChildCoversArray.put(DiseaseManagementCoversFirstObj);
            CoverDetailsFirstChildObj.put("Covers", FirstChildCoversArray);
            FirstChildObj.put("CoverDetails", CoverDetailsFirstChildObj);
            //childTwo
            JSONObject SecondChildObj = new JSONObject();
            SecondChildObj.put("InsuredType", "Child");
            SecondChildObj.put("FirstName", "");
            SecondChildObj.put("LastName", "");
            SecondChildObj.put("DOB", strSecondSonAgeEditText);
            SecondChildObj.put("Gender", "M");
            SecondChildObj.put("Relationship", "");
            SecondChildObj.put("Occupation", "");
            SecondChildObj.put("NomineeName", "");
            SecondChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsSecondChildObj = new JSONObject();
            HealthIndicatorsSecondChildObj.put("PED", "N");
            HealthIndicatorsSecondChildObj.put("PEDDeclared", "N");
            HealthIndicatorsSecondChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsSecondChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsSecondChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsSecondChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsSecondChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsSecondChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsSecondChildObj.put("CoMorbidity", "N");
            SecondChildObj.put("HealthIndicators", HealthIndicatorsSecondChildObj);

            JSONObject CoverDetailsSecondChildObj = new JSONObject();
            JSONArray SecondChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversSecChildObj = new JSONObject();
            BasicInsuranceCoversSecChildObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversSecChildObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversSecChildObj.put("CoverRate", "0");
            BasicInsuranceCoversSecChildObj.put("CoverPremium", "0");
            BasicInsuranceCoversSecChildObj.put("CoverGroups", "Basic Insurance Cover");
            SecondChildCoversArray.put(BasicInsuranceCoversSecChildObj);

            JSONObject PersonalAccidentCoversSecondChildObj = new JSONObject();
            PersonalAccidentCoversSecondChildObj.put("Applicable", PersonalStatusChildTwo);
            PersonalAccidentCoversSecondChildObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversSecondChildObj.put("CoverRate", "0");
            PersonalAccidentCoversSecondChildObj.put("CoverPremium", "0");
            PersonalAccidentCoversSecondChildObj.put("CoverGroups", "Personal Accident Cover");
            SecondChildCoversArray.put(PersonalAccidentCoversSecondChildObj);

            JSONObject CriticalIllnessCoversSecondChildObj = new JSONObject();
            CriticalIllnessCoversSecondChildObj.put("Applicable", CriticalStatus);
            CriticalIllnessCoversSecondChildObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversSecondChildObj.put("CoverRate", "0");
            CriticalIllnessCoversSecondChildObj.put("CoverPremium", "0");
            CriticalIllnessCoversSecondChildObj.put("CoverGroups", "Critical Illness Cover");
            SecondChildCoversArray.put(CriticalIllnessCoversSecondChildObj);


            JSONObject DailyHospitalCoversSecondChildObj = new JSONObject();
            DailyHospitalCoversSecondChildObj.put("Applicable", DailyHospitalSatus);
            DailyHospitalCoversSecondChildObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversSecondChildObj.put("CoverRate", "0");
            DailyHospitalCoversSecondChildObj.put("CoverPremium", "0");
            DailyHospitalCoversSecondChildObj.put("CoverGroups", "Daily Hospital Cash Cover");
            SecondChildCoversArray.put(DailyHospitalCoversSecondChildObj);

            JSONObject ModernCoversSecondChildObj = new JSONObject();
            ModernCoversSecondChildObj.put("Applicable", ModernTreatmentsStatus);
            ModernCoversSecondChildObj.put("CoverSI", strSumInsured);
            ModernCoversSecondChildObj.put("CoverRate", "0");
            ModernCoversSecondChildObj.put("CoverPremium", "0");
            ModernCoversSecondChildObj.put("CoverGroups", "Modern Treatments");
            SecondChildCoversArray.put(ModernCoversSecondChildObj);
            JSONObject ExtensionPreHospitalizationCoversSecondChildObj = new JSONObject();
            ExtensionPreHospitalizationCoversSecondChildObj.put("Applicable", ExtensionPreHospitalization);
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            SecondChildCoversArray.put(ExtensionPreHospitalizationCoversSecondChildObj);

            JSONObject ExtensionPostHospitalizationCoversSecondChildObj = new JSONObject();
            ExtensionPostHospitalizationCoversSecondChildObj.put("Applicable", ExtensionPr0Hospitalization);
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverGroups", "Extension under Post-Hospitalization");
            SecondChildCoversArray.put(ExtensionPostHospitalizationCoversSecondChildObj);


            JSONObject MaternityAndChildcareCoversSecChildObj = new JSONObject();
            MaternityAndChildcareCoversSecChildObj.put("Applicable", "False");
            MaternityAndChildcareCoversSecChildObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversSecChildObj.put("CoverRate", "0");
            MaternityAndChildcareCoversSecChildObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversSecChildObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            SecondChildCoversArray.put(MaternityAndChildcareCoversSecChildObj);

            JSONObject CoverageForNonMedicalCoversSecChildObj = new JSONObject();
            CoverageForNonMedicalCoversSecChildObj.put("Applicable", CoverageNonMedical);
            CoverageForNonMedicalCoversSecChildObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversSecChildObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversSecChildObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversSecChildObj.put("CoverGroups", "Coverage for Non-Medical Items");
            SecondChildCoversArray.put(CoverageForNonMedicalCoversSecChildObj);

            JSONObject ConditionWaiverCoversSecChildObj = new JSONObject();
            ConditionWaiverCoversSecChildObj.put("Applicable", ConditionWaiverStatus);
            ConditionWaiverCoversSecChildObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversSecChildObj.put("CoverRate", "0");
            ConditionWaiverCoversSecChildObj.put("CoverPremium", "0");
            ConditionWaiverCoversSecChildObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            SecondChildCoversArray.put(ConditionWaiverCoversSecChildObj);

            JSONObject PreExistingDiseaseCoversSecChildObj = new JSONObject();
            PreExistingDiseaseCoversSecChildObj.put("Applicable", PreExistingDiseaseStatus);
            PreExistingDiseaseCoversSecChildObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversSecChildObj.put("CoverRate", "0");
            PreExistingDiseaseCoversSecChildObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversSecChildObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            SecondChildCoversArray.put(PreExistingDiseaseCoversSecChildObj);

            JSONObject OutpatientDentalWaitingCoversSecChildObj = new JSONObject();
            OutpatientDentalWaitingCoversSecChildObj.put("Applicable", OutpatientDentalStatus);
            OutpatientDentalWaitingCoversSecChildObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversSecChildObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversSecChildObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversSecChildObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            SecondChildCoversArray.put(OutpatientDentalWaitingCoversSecChildObj);

            JSONObject EmergencyTravellingAllowanceCoversSecChildObj = new JSONObject();
            EmergencyTravellingAllowanceCoversSecChildObj.put("Applicable", EmergencyTravellingStatus);
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverGroups", "Emergency Travelling Allowance");
            SecondChildCoversArray.put(EmergencyTravellingAllowanceCoversSecChildObj);

            JSONObject SecondOpinionCoversSecChildObj = new JSONObject();
            SecondOpinionCoversSecChildObj.put("Applicable", SecondOpinionStatus);
            SecondOpinionCoversSecChildObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversSecChildObj.put("CoverRate", "0");
            SecondOpinionCoversSecChildObj.put("CoverPremium", "0");
            SecondOpinionCoversSecChildObj.put("CoverGroups", "Second Opinion");
            SecondChildCoversArray.put(SecondOpinionCoversSecChildObj);

            JSONObject RestCureCoversSecChildObj = new JSONObject();
            RestCureCoversSecChildObj.put("Applicable", RestCureStatus);
            RestCureCoversSecChildObj.put("CoverSI", strSumInsured);
            RestCureCoversSecChildObj.put("CoverRate", "0");
            RestCureCoversSecChildObj.put("CoverPremium", "0");
            RestCureCoversSecChildObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            SecondChildCoversArray.put(RestCureCoversSecChildObj);

            JSONObject ObesityWeightCoversSecChildObj = new JSONObject();
            ObesityWeightCoversSecChildObj.put("Applicable", ObesityWeightStatus);
            ObesityWeightCoversSecChildObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversSecChildObj.put("CoverRate", "0");
            ObesityWeightCoversSecChildObj.put("CoverPremium", "0");
            ObesityWeightCoversSecChildObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            SecondChildCoversArray.put(ObesityWeightCoversSecChildObj);

            JSONObject SterilityInfertilityCoversSecChildObj = new JSONObject();
            SterilityInfertilityCoversSecChildObj.put("Applicable", "False");
            SterilityInfertilityCoversSecChildObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversSecChildObj.put("CoverRate", "0");
            SterilityInfertilityCoversSecChildObj.put("CoverPremium", "0");
            SterilityInfertilityCoversSecChildObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            SecondChildCoversArray.put(SterilityInfertilityCoversSecChildObj);

            JSONObject EnhancedOrganDonorCoversSecChildObj = new JSONObject();
            EnhancedOrganDonorCoversSecChildObj.put("Applicable", EnhancedOrganStatus);
            EnhancedOrganDonorCoversSecChildObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversSecChildObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversSecChildObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversSecChildObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            SecondChildCoversArray.put(EnhancedOrganDonorCoversSecChildObj);

            JSONObject PremiumWaiverCoversSecChildObj = new JSONObject();
            PremiumWaiverCoversSecChildObj.put("Applicable", PremiumWaiverStatus);
            PremiumWaiverCoversSecChildObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversSecChildObj.put("CoverRate", "0");
            PremiumWaiverCoversSecChildObj.put("CoverPremium", "0");
            PremiumWaiverCoversSecChildObj.put("CoverGroups", "Premium Waiver");
            SecondChildCoversArray.put(PremiumWaiverCoversSecChildObj);

            JSONObject GlobalCoversSecChildObj = new JSONObject();
            GlobalCoversSecChildObj.put("Applicable", GlobalCoverStatus);
            GlobalCoversSecChildObj.put("CoverSI", strSumInsured);
            GlobalCoversSecChildObj.put("CoverRate", "0");
            GlobalCoversSecChildObj.put("CoverPremium", "0");
            GlobalCoversSecChildObj.put("CoverGroups", "Global Cover");
            SecondChildCoversArray.put(GlobalCoversSecChildObj);


            JSONObject MedicallyAdvisedCoversSecChildObj = new JSONObject();
            MedicallyAdvisedCoversSecChildObj.put("Applicable", MedicallyAdvisedStatus);
            MedicallyAdvisedCoversSecChildObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversSecChildObj.put("CoverRate", "0");
            MedicallyAdvisedCoversSecChildObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversSecChildObj.put("CoverGroups", "Medically Advised Support Devices");
            SecondChildCoversArray.put(MedicallyAdvisedCoversSecChildObj);

            JSONObject EmergencyCoversSecChildObj = new JSONObject();
            EmergencyCoversSecChildObj.put("Applicable", EmergencyAssistanceStatus);
            EmergencyCoversSecChildObj.put("CoverSI", strSumInsured);
            EmergencyCoversSecChildObj.put("CoverRate", "0");
            EmergencyCoversSecChildObj.put("CoverPremium", "0");
            EmergencyCoversSecChildObj.put("CoverGroups", "Emergency Assistance Service");
            SecondChildCoversArray.put(EmergencyCoversSecChildObj);

            JSONObject HomeCareTreatmentCoversSecChildObj = new JSONObject();
            HomeCareTreatmentCoversSecChildObj.put("Applicable", HomeCareStatus);
            HomeCareTreatmentCoversSecChildObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversSecChildObj.put("CoverRate", "0");
            HomeCareTreatmentCoversSecChildObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversSecChildObj.put("CoverGroups", "Home Care Treatment");
            SecondChildCoversArray.put(HomeCareTreatmentCoversSecChildObj);

            JSONObject WellnessBenefitCoversSecChildObj = new JSONObject();
            WellnessBenefitCoversSecChildObj.put("Applicable", WellnessBenefitStatus);
            WellnessBenefitCoversSecChildObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversSecChildObj.put("CoverRate", "0");
            WellnessBenefitCoversSecChildObj.put("CoverPremium", "0");
            WellnessBenefitCoversSecChildObj.put("CoverGroups", "Wellness Benefit");
            SecondChildCoversArray.put(WellnessBenefitCoversSecChildObj);

            JSONObject DiseaseManagementCoversSecChildObj = new JSONObject();
            DiseaseManagementCoversSecChildObj.put("Applicable", DiseaseManagementStatus);
            DiseaseManagementCoversSecChildObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversSecChildObj.put("CoverRate", "0");
            DiseaseManagementCoversSecChildObj.put("CoverPremium", "0");
            DiseaseManagementCoversSecChildObj.put("CoverGroups", "Disease Management Program");
            SecondChildCoversArray.put(DiseaseManagementCoversSecChildObj);
            CoverDetailsSecondChildObj.put("Covers", SecondChildCoversArray);
            SecondChildObj.put("CoverDetails", CoverDetailsSecondChildObj);

            //Third child
            JSONObject ThirdChildObj = new JSONObject();
            ThirdChildObj.put("InsuredType", "Child");
            ThirdChildObj.put("FirstName", "");
            ThirdChildObj.put("LastName", "");
            ThirdChildObj.put("DOB", strThirdSonAgeEditText);
            ThirdChildObj.put("Gender", "M");
            ThirdChildObj.put("Relationship", "");
            ThirdChildObj.put("Occupation", "");
            ThirdChildObj.put("NomineeName", "");
            ThirdChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsThirdChildObj = new JSONObject();
            HealthIndicatorsThirdChildObj.put("PED", "N");
            HealthIndicatorsThirdChildObj.put("PEDDeclared", "N");
            HealthIndicatorsThirdChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsThirdChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsThirdChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsThirdChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsThirdChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsThirdChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsThirdChildObj.put("CoMorbidity", "N");
            ThirdChildObj.put("HealthIndicators", HealthIndicatorsThirdChildObj);

            JSONObject CoverDetailsThirdChildObj = new JSONObject();
            JSONArray ThirdChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversThirdChildObj = new JSONObject();
            BasicInsuranceCoversThirdChildObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversThirdChildObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversThirdChildObj.put("CoverRate", "0");
            BasicInsuranceCoversThirdChildObj.put("CoverPremium", "0");
            BasicInsuranceCoversThirdChildObj.put("CoverGroups", "Basic Insurance Cover");
            ThirdChildCoversArray.put(BasicInsuranceCoversThirdChildObj);

            JSONObject PersonalAccidentCoversThirdChildObj = new JSONObject();
            PersonalAccidentCoversThirdChildObj.put("Applicable", PersonalStatusChildThird);
            PersonalAccidentCoversThirdChildObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversThirdChildObj.put("CoverRate", "0");
            PersonalAccidentCoversThirdChildObj.put("CoverPremium", "0");
            PersonalAccidentCoversThirdChildObj.put("CoverGroups", "Personal Accident Cover");
            ThirdChildCoversArray.put(PersonalAccidentCoversThirdChildObj);

            JSONObject CriticalIllnessCoversThirdChildObj = new JSONObject();
            CriticalIllnessCoversThirdChildObj.put("Applicable", CriticalStatus);
            CriticalIllnessCoversThirdChildObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversThirdChildObj.put("CoverRate", "0");
            CriticalIllnessCoversThirdChildObj.put("CoverPremium", "0");
            CriticalIllnessCoversThirdChildObj.put("CoverGroups", "Critical Illness Cover");
            ThirdChildCoversArray.put(CriticalIllnessCoversThirdChildObj);


            JSONObject DailyHospitalCoversThirdChildObj = new JSONObject();
            DailyHospitalCoversThirdChildObj.put("Applicable", DailyHospitalSatus);
            DailyHospitalCoversThirdChildObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversThirdChildObj.put("CoverRate", "0");
            DailyHospitalCoversThirdChildObj.put("CoverPremium", "0");
            DailyHospitalCoversThirdChildObj.put("CoverGroups", "Daily Hospital Cash Cover");
            ThirdChildCoversArray.put(DailyHospitalCoversThirdChildObj);

            JSONObject ModernCoversThirdChildObj = new JSONObject();
            ModernCoversThirdChildObj.put("Applicable", "False");
            ModernCoversThirdChildObj.put("CoverSI", strSumInsured);
            ModernCoversThirdChildObj.put("CoverRate", "0");
            ModernCoversThirdChildObj.put("CoverPremium", "0");
            ModernCoversThirdChildObj.put("CoverGroups", "Modern Treatments");
            ThirdChildCoversArray.put(ModernCoversThirdChildObj);
            JSONObject ExtensionPreHospitalizationCoversThirdChildObj = new JSONObject();
            ExtensionPreHospitalizationCoversThirdChildObj.put("Applicable", ExtensionPreHospitalization);
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            ThirdChildCoversArray.put(ExtensionPreHospitalizationCoversThirdChildObj);

            JSONObject ExtensionPostHospitalizationCoversThirdChildObj = new JSONObject();
            ExtensionPostHospitalizationCoversThirdChildObj.put("Applicable", ExtensionPr0Hospitalization);
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverGroups", "Extension under Post-Hospitalization");
            ThirdChildCoversArray.put(ExtensionPostHospitalizationCoversThirdChildObj);


            JSONObject MaternityAndChildcareCoversThirdChildObj = new JSONObject();
            MaternityAndChildcareCoversThirdChildObj.put("Applicable", MaternityAndChildcare);
            MaternityAndChildcareCoversThirdChildObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversThirdChildObj.put("CoverRate", "0");
            MaternityAndChildcareCoversThirdChildObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversThirdChildObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            ThirdChildCoversArray.put(MaternityAndChildcareCoversThirdChildObj);

            JSONObject CoverageForNonMedicalCoversThirdChildObj = new JSONObject();
            CoverageForNonMedicalCoversThirdChildObj.put("Applicable", CoverageNonMedical);
            CoverageForNonMedicalCoversThirdChildObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversThirdChildObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversThirdChildObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversThirdChildObj.put("CoverGroups", "Coverage for Non-Medical Items");
            ThirdChildCoversArray.put(CoverageForNonMedicalCoversThirdChildObj);

            JSONObject ConditionWaiverCoversThirdChildObj = new JSONObject();
            ConditionWaiverCoversThirdChildObj.put("Applicable", ConditionWaiverStatus);
            ConditionWaiverCoversThirdChildObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversThirdChildObj.put("CoverRate", "0");
            ConditionWaiverCoversThirdChildObj.put("CoverPremium", "0");
            ConditionWaiverCoversThirdChildObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            ThirdChildCoversArray.put(ConditionWaiverCoversThirdChildObj);

            JSONObject PreExistingDiseaseCoversThirdChildObj = new JSONObject();
            PreExistingDiseaseCoversThirdChildObj.put("Applicable", PreExistingDiseaseStatus);
            PreExistingDiseaseCoversThirdChildObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversThirdChildObj.put("CoverRate", "0");
            PreExistingDiseaseCoversThirdChildObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversThirdChildObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            ThirdChildCoversArray.put(PreExistingDiseaseCoversThirdChildObj);

            JSONObject OutpatientDentalWaitingCoversThirdChildObj = new JSONObject();
            OutpatientDentalWaitingCoversThirdChildObj.put("Applicable", OutpatientDentalStatus);
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            ThirdChildCoversArray.put(OutpatientDentalWaitingCoversThirdChildObj);

            JSONObject EmergencyTravellingAllowanceCoversThirdChildObj = new JSONObject();
            EmergencyTravellingAllowanceCoversThirdChildObj.put("Applicable", EmergencyTravellingStatus);
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverGroups", "Emergency Travelling Allowance");
            ThirdChildCoversArray.put(EmergencyTravellingAllowanceCoversThirdChildObj);

            JSONObject SecondOpinionCoversThirdChildObj = new JSONObject();
            SecondOpinionCoversThirdChildObj.put("Applicable", SecondOpinionStatus);
            SecondOpinionCoversThirdChildObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversThirdChildObj.put("CoverRate", "0");
            SecondOpinionCoversThirdChildObj.put("CoverPremium", "0");
            SecondOpinionCoversThirdChildObj.put("CoverGroups", "Second Opinion");
            ThirdChildCoversArray.put(SecondOpinionCoversThirdChildObj);

            JSONObject RestCureCoversThirdChildObj = new JSONObject();
            RestCureCoversThirdChildObj.put("Applicable", RestCureStatus);
            RestCureCoversThirdChildObj.put("CoverSI", strSumInsured);
            RestCureCoversThirdChildObj.put("CoverRate", "0");
            RestCureCoversThirdChildObj.put("CoverPremium", "0");
            RestCureCoversThirdChildObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            ThirdChildCoversArray.put(RestCureCoversThirdChildObj);

            JSONObject ObesityWeightCoversThirdChildObj = new JSONObject();
            ObesityWeightCoversThirdChildObj.put("Applicable", ObesityWeightStatus);
            ObesityWeightCoversThirdChildObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversThirdChildObj.put("CoverRate", "0");
            ObesityWeightCoversThirdChildObj.put("CoverPremium", "0");
            ObesityWeightCoversThirdChildObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            ThirdChildCoversArray.put(ObesityWeightCoversThirdChildObj);

            JSONObject SterilityInfertilityCoversThirdChildObj = new JSONObject();
            SterilityInfertilityCoversThirdChildObj.put("Applicable", "False");
            SterilityInfertilityCoversThirdChildObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversThirdChildObj.put("CoverRate", "0");
            SterilityInfertilityCoversThirdChildObj.put("CoverPremium", "0");
            SterilityInfertilityCoversThirdChildObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            ThirdChildCoversArray.put(SterilityInfertilityCoversThirdChildObj);

            JSONObject EnhancedOrganDonorCoversThirdChildObj = new JSONObject();
            EnhancedOrganDonorCoversThirdChildObj.put("Applicable", EnhancedOrganStatus);
            EnhancedOrganDonorCoversThirdChildObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversThirdChildObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversThirdChildObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversThirdChildObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            ThirdChildCoversArray.put(EnhancedOrganDonorCoversThirdChildObj);

            JSONObject PremiumWaiverCoversThirdChildObj = new JSONObject();
            PremiumWaiverCoversThirdChildObj.put("Applicable", PremiumWaiverStatus);
            PremiumWaiverCoversThirdChildObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversThirdChildObj.put("CoverRate", "0");
            PremiumWaiverCoversThirdChildObj.put("CoverPremium", "0");
            PremiumWaiverCoversThirdChildObj.put("CoverGroups", "Premium Waiver");
            ThirdChildCoversArray.put(PremiumWaiverCoversThirdChildObj);

            JSONObject GlobalCoversThirdChildObj = new JSONObject();
            GlobalCoversThirdChildObj.put("Applicable", GlobalCoverStatus);
            GlobalCoversThirdChildObj.put("CoverSI", strSumInsured);
            GlobalCoversThirdChildObj.put("CoverRate", "0");
            GlobalCoversThirdChildObj.put("CoverPremium", "0");
            GlobalCoversThirdChildObj.put("CoverGroups", "Global Cover");
            ThirdChildCoversArray.put(GlobalCoversThirdChildObj);


            JSONObject MedicallyAdvisedCoversThirdChildObj = new JSONObject();
            MedicallyAdvisedCoversThirdChildObj.put("Applicable", MedicallyAdvisedStatus);
            MedicallyAdvisedCoversThirdChildObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversThirdChildObj.put("CoverRate", "0");
            MedicallyAdvisedCoversThirdChildObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversThirdChildObj.put("CoverGroups", "Medically Advised Support Devices");
            ThirdChildCoversArray.put(MedicallyAdvisedCoversThirdChildObj);

            JSONObject EmergencyCoversThirdChildObj = new JSONObject();
            EmergencyCoversThirdChildObj.put("Applicable", EmergencyAssistanceStatus);
            EmergencyCoversThirdChildObj.put("CoverSI", strSumInsured);
            EmergencyCoversThirdChildObj.put("CoverRate", "0");
            EmergencyCoversThirdChildObj.put("CoverPremium", "0");
            EmergencyCoversThirdChildObj.put("CoverGroups", "Emergency Assistance Service");
            ThirdChildCoversArray.put(EmergencyCoversThirdChildObj);

            JSONObject HomeCareTreatmentCoversThirdChildObj = new JSONObject();
            HomeCareTreatmentCoversThirdChildObj.put("Applicable", HomeCareStatus);
            HomeCareTreatmentCoversThirdChildObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversThirdChildObj.put("CoverRate", "0");
            HomeCareTreatmentCoversThirdChildObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversThirdChildObj.put("CoverGroups", "Home Care Treatment");
            ThirdChildCoversArray.put(HomeCareTreatmentCoversThirdChildObj);

            JSONObject WellnessBenefitCoversThirdChildObj = new JSONObject();
            WellnessBenefitCoversThirdChildObj.put("Applicable", WellnessBenefitStatus);
            WellnessBenefitCoversThirdChildObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversThirdChildObj.put("CoverRate", "0");
            WellnessBenefitCoversThirdChildObj.put("CoverPremium", "0");
            WellnessBenefitCoversThirdChildObj.put("CoverGroups", "Wellness Benefit");
            ThirdChildCoversArray.put(WellnessBenefitCoversThirdChildObj);

            JSONObject DiseaseManagementCoversThirdChildObj = new JSONObject();
            DiseaseManagementCoversThirdChildObj.put("Applicable", DiseaseManagementStatus);
            DiseaseManagementCoversThirdChildObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversThirdChildObj.put("CoverRate", "0");
            DiseaseManagementCoversThirdChildObj.put("CoverPremium", "0");
            DiseaseManagementCoversThirdChildObj.put("CoverGroups", "Disease Management Program");
            ThirdChildCoversArray.put(DiseaseManagementCoversThirdChildObj);
            CoverDetailsThirdChildObj.put("Covers", ThirdChildCoversArray);
            ThirdChildObj.put("CoverDetails", CoverDetailsThirdChildObj);


            //fourChild
            JSONObject FourthChildObj = new JSONObject();
            FourthChildObj.put("InsuredType", "Child");
            FourthChildObj.put("FirstName", "");
            FourthChildObj.put("LastName", "");
            FourthChildObj.put("DOB", strFourSonAgeEditText);
            FourthChildObj.put("Gender", "M");
            FourthChildObj.put("Relationship", "");
            FourthChildObj.put("Occupation", "");
            FourthChildObj.put("NomineeName", "");
            FourthChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFourthChildObj = new JSONObject();
            HealthIndicatorsFourthChildObj.put("PED", "N");
            HealthIndicatorsFourthChildObj.put("PEDDeclared", "N");
            HealthIndicatorsFourthChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFourthChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFourthChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFourthChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFourthChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsFourthChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFourthChildObj.put("CoMorbidity", "N");
            FourthChildObj.put("HealthIndicators", HealthIndicatorsFourthChildObj);

            JSONObject CoverDetailsFourthChildObj = new JSONObject();
            JSONArray FourthChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversFourthChildObj = new JSONObject();
            BasicInsuranceCoversFourthChildObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversFourthChildObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversFourthChildObj.put("CoverRate", "0");
            BasicInsuranceCoversFourthChildObj.put("CoverPremium", "0");
            BasicInsuranceCoversFourthChildObj.put("CoverGroups", "Basic Insurance Cover");
            FourthChildCoversArray.put(BasicInsuranceCoversFourthChildObj);

            JSONObject PersonalAccidentCoversFourthChildObj = new JSONObject();
            PersonalAccidentCoversFourthChildObj.put("Applicable", PersonalStatusChildFour);
            PersonalAccidentCoversFourthChildObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFourthChildObj.put("CoverRate", "0");
            PersonalAccidentCoversFourthChildObj.put("CoverPremium", "0");
            PersonalAccidentCoversFourthChildObj.put("CoverGroups", "Personal Accident Cover");
            FourthChildCoversArray.put(PersonalAccidentCoversFourthChildObj);

            JSONObject CriticalIllnessCoversFourthChildObj = new JSONObject();
            CriticalIllnessCoversFourthChildObj.put("Applicable", CriticalStatus);
            CriticalIllnessCoversFourthChildObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFourthChildObj.put("CoverRate", "0");
            CriticalIllnessCoversFourthChildObj.put("CoverPremium", "0");
            CriticalIllnessCoversFourthChildObj.put("CoverGroups", "Critical Illness Cover");
            FourthChildCoversArray.put(CriticalIllnessCoversFourthChildObj);


            JSONObject DailyHospitalCoversFourthChildObj = new JSONObject();
            DailyHospitalCoversFourthChildObj.put("Applicable", DailyHospitalSatus);
            DailyHospitalCoversFourthChildObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFourthChildObj.put("CoverRate", "0");
            DailyHospitalCoversFourthChildObj.put("CoverPremium", "0");
            DailyHospitalCoversFourthChildObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FourthChildCoversArray.put(DailyHospitalCoversFourthChildObj);

            JSONObject ModernCoversFourthChildObj = new JSONObject();
            ModernCoversFourthChildObj.put("Applicable", ModernTreatmentsStatus);
            ModernCoversFourthChildObj.put("CoverSI", strSumInsured);
            ModernCoversFourthChildObj.put("CoverRate", "0");
            ModernCoversFourthChildObj.put("CoverPremium", "0");
            ModernCoversFourthChildObj.put("CoverGroups", "Modern Treatments");
            FourthChildCoversArray.put(ModernCoversFourthChildObj);
            JSONObject ExtensionPreHospitalizationCoversFourthChildObj = new JSONObject();
            ExtensionPreHospitalizationCoversFourthChildObj.put("Applicable", ExtensionPreHospitalization);
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FourthChildCoversArray.put(ExtensionPreHospitalizationCoversFourthChildObj);

            JSONObject ExtensionPostHospitalizationCoversFourthChildObj = new JSONObject();
            ExtensionPostHospitalizationCoversFourthChildObj.put("Applicable", ExtensionPr0Hospitalization);
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FourthChildCoversArray.put(ExtensionPostHospitalizationCoversFourthChildObj);


            JSONObject MaternityAndChildcareCoversFourthChildObj = new JSONObject();
            MaternityAndChildcareCoversFourthChildObj.put("Applicable", "False");
            MaternityAndChildcareCoversFourthChildObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFourthChildObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFourthChildObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFourthChildObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FourthChildCoversArray.put(MaternityAndChildcareCoversFourthChildObj);

            JSONObject CoverageForNonMedicalCoversFourthChildObj = new JSONObject();
            CoverageForNonMedicalCoversFourthChildObj.put("Applicable", CoverageNonMedical);
            CoverageForNonMedicalCoversFourthChildObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFourthChildObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFourthChildObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFourthChildObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FourthChildCoversArray.put(CoverageForNonMedicalCoversFourthChildObj);

            JSONObject ConditionWaiverCoversFourthChildObj = new JSONObject();
            ConditionWaiverCoversFourthChildObj.put("Applicable", ConditionWaiverStatus);
            ConditionWaiverCoversFourthChildObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFourthChildObj.put("CoverRate", "0");
            ConditionWaiverCoversFourthChildObj.put("CoverPremium", "0");
            ConditionWaiverCoversFourthChildObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FourthChildCoversArray.put(ConditionWaiverCoversFourthChildObj);

            JSONObject PreExistingDiseaseCoversFourthChildObj = new JSONObject();
            PreExistingDiseaseCoversFourthChildObj.put("Applicable", PreExistingDiseaseStatus);
            PreExistingDiseaseCoversFourthChildObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFourthChildObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFourthChildObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFourthChildObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FourthChildCoversArray.put(PreExistingDiseaseCoversFourthChildObj);

            JSONObject OutpatientDentalWaitingCoversFourthChildObj = new JSONObject();
            OutpatientDentalWaitingCoversFourthChildObj.put("Applicable", OutpatientDentalStatus);
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FourthChildCoversArray.put(OutpatientDentalWaitingCoversFourthChildObj);

            JSONObject EmergencyTravellingAllowanceCoversFourthChildObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFourthChildObj.put("Applicable", EmergencyTravellingStatus);
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverGroups", "Emergency Travelling Allowance");
            FourthChildCoversArray.put(EmergencyTravellingAllowanceCoversFourthChildObj);

            JSONObject SecondOpinionCoversFourthChildObj = new JSONObject();
            SecondOpinionCoversFourthChildObj.put("Applicable", SecondOpinionStatus);
            SecondOpinionCoversFourthChildObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFourthChildObj.put("CoverRate", "0");
            SecondOpinionCoversFourthChildObj.put("CoverPremium", "0");
            SecondOpinionCoversFourthChildObj.put("CoverGroups", "Second Opinion");
            FourthChildCoversArray.put(SecondOpinionCoversFourthChildObj);

            JSONObject RestCureCoversFourthChildObj = new JSONObject();
            RestCureCoversFourthChildObj.put("Applicable", RestCureStatus);
            RestCureCoversFourthChildObj.put("CoverSI", strSumInsured);
            RestCureCoversFourthChildObj.put("CoverRate", "0");
            RestCureCoversFourthChildObj.put("CoverPremium", "0");
            RestCureCoversFourthChildObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FourthChildCoversArray.put(RestCureCoversFourthChildObj);

            JSONObject ObesityWeightCoversFourthChildObj = new JSONObject();
            ObesityWeightCoversFourthChildObj.put("Applicable", ObesityWeightStatus);
            ObesityWeightCoversFourthChildObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFourthChildObj.put("CoverRate", "0");
            ObesityWeightCoversFourthChildObj.put("CoverPremium", "0");
            ObesityWeightCoversFourthChildObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FourthChildCoversArray.put(ObesityWeightCoversFourthChildObj);

            JSONObject SterilityInfertilityCoversFourthChildObj = new JSONObject();
            SterilityInfertilityCoversFourthChildObj.put("Applicable", "False");
            SterilityInfertilityCoversFourthChildObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFourthChildObj.put("CoverRate", "0");
            SterilityInfertilityCoversFourthChildObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFourthChildObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FourthChildCoversArray.put(SterilityInfertilityCoversFourthChildObj);

            JSONObject EnhancedOrganDonorCoversFourthChildObj = new JSONObject();
            EnhancedOrganDonorCoversFourthChildObj.put("Applicable", EnhancedOrganStatus);
            EnhancedOrganDonorCoversFourthChildObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFourthChildObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFourthChildObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFourthChildObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FourthChildCoversArray.put(EnhancedOrganDonorCoversFourthChildObj);

            JSONObject PremiumWaiverCoversFourthChildObj = new JSONObject();
            PremiumWaiverCoversFourthChildObj.put("Applicable", PremiumWaiverStatus);
            PremiumWaiverCoversFourthChildObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFourthChildObj.put("CoverRate", "0");
            PremiumWaiverCoversFourthChildObj.put("CoverPremium", "0");
            PremiumWaiverCoversFourthChildObj.put("CoverGroups", "Premium Waiver");
            FourthChildCoversArray.put(PremiumWaiverCoversFourthChildObj);

            JSONObject GlobalCoversFourthChildObj = new JSONObject();
            GlobalCoversFourthChildObj.put("Applicable", GlobalCoverStatus);
            GlobalCoversFourthChildObj.put("CoverSI", strSumInsured);
            GlobalCoversFourthChildObj.put("CoverRate", "0");
            GlobalCoversFourthChildObj.put("CoverPremium", "0");
            GlobalCoversFourthChildObj.put("CoverGroups", "Global Cover");
            FourthChildCoversArray.put(GlobalCoversFourthChildObj);


            JSONObject MedicallyAdvisedCoversFourthChildObj = new JSONObject();
            MedicallyAdvisedCoversFourthChildObj.put("Applicable", MedicallyAdvisedStatus);
            MedicallyAdvisedCoversFourthChildObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFourthChildObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFourthChildObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFourthChildObj.put("CoverGroups", "Medically Advised Support Devices");
            FourthChildCoversArray.put(MedicallyAdvisedCoversFourthChildObj);

            JSONObject EmergencyCoversFourthChildObj = new JSONObject();
            EmergencyCoversFourthChildObj.put("Applicable", EmergencyAssistanceStatus);
            EmergencyCoversFourthChildObj.put("CoverSI", strSumInsured);
            EmergencyCoversFourthChildObj.put("CoverRate", "0");
            EmergencyCoversFourthChildObj.put("CoverPremium", "0");
            EmergencyCoversFourthChildObj.put("CoverGroups", "Emergency Assistance Service");
            FourthChildCoversArray.put(EmergencyCoversFourthChildObj);

            JSONObject HomeCareTreatmentCoversFourthChildObj = new JSONObject();
            HomeCareTreatmentCoversFourthChildObj.put("Applicable", HomeCareStatus);
            HomeCareTreatmentCoversFourthChildObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFourthChildObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFourthChildObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFourthChildObj.put("CoverGroups", "Home Care Treatment");
            FourthChildCoversArray.put(HomeCareTreatmentCoversFourthChildObj);

            JSONObject WellnessBenefitCoversFourthChildObj = new JSONObject();
            WellnessBenefitCoversFourthChildObj.put("Applicable", WellnessBenefitStatus);
            WellnessBenefitCoversFourthChildObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFourthChildObj.put("CoverRate", "0");
            WellnessBenefitCoversFourthChildObj.put("CoverPremium", "0");
            WellnessBenefitCoversFourthChildObj.put("CoverGroups", "Wellness Benefit");
            FourthChildCoversArray.put(WellnessBenefitCoversFourthChildObj);

            JSONObject DiseaseManagementCoversFourthChildObj = new JSONObject();
            DiseaseManagementCoversFourthChildObj.put("Applicable", DiseaseManagementStatus);
            DiseaseManagementCoversFourthChildObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFourthChildObj.put("CoverRate", "0");
            DiseaseManagementCoversFourthChildObj.put("CoverPremium", "0");
            DiseaseManagementCoversFourthChildObj.put("CoverGroups", "Disease Management Program");
            FourthChildCoversArray.put(DiseaseManagementCoversFourthChildObj);
            CoverDetailsFourthChildObj.put("Covers", FourthChildCoversArray);
            FourthChildObj.put("CoverDetails", CoverDetailsFourthChildObj);


            //Mother
            JSONObject MotherObj = new JSONObject();
            MotherObj.put("InsuredType", "Parent");
            MotherObj.put("FirstName", "");
            MotherObj.put("LastName", "");
            MotherObj.put("DOB", strMotherAgeEditText);
            MotherObj.put("Gender", "F");
            MotherObj.put("Relationship", "");
            MotherObj.put("Occupation", "");
            MotherObj.put("NomineeName", "");
            MotherObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsMotherObj = new JSONObject();
            HealthIndicatorsMotherObj.put("PED", "N");
            HealthIndicatorsMotherObj.put("PEDDeclared", "N");
            HealthIndicatorsMotherObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsMotherObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsMotherObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsMotherObj.put("CholesterolLevel", "NA");
            HealthIndicatorsMotherObj.put("BodyMassIndex", "30");
            HealthIndicatorsMotherObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsMotherObj.put("CoMorbidity", "N");
            MotherObj.put("HealthIndicators", HealthIndicatorsMotherObj);

            JSONObject CoverDetailsMotherObj = new JSONObject();
            JSONArray MotherCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversMotherObj = new JSONObject();
            BasicInsuranceCoversMotherObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversMotherObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversMotherObj.put("CoverRate", "0");
            BasicInsuranceCoversMotherObj.put("CoverPremium", "0");
            BasicInsuranceCoversMotherObj.put("CoverGroups", "Basic Insurance Cover");
            MotherCoversArray.put(BasicInsuranceCoversMotherObj);

            JSONObject PersonalAccidentCoversMotherObj = new JSONObject();
            PersonalAccidentCoversMotherObj.put("Applicable", PersonalStatus);
            PersonalAccidentCoversMotherObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversMotherObj.put("CoverRate", "0");
            PersonalAccidentCoversMotherObj.put("CoverPremium", "0");
            PersonalAccidentCoversMotherObj.put("CoverGroups", "Personal Accident Cover");
            MotherCoversArray.put(PersonalAccidentCoversMotherObj);

            JSONObject CriticalIllnessCoversMotherObj = new JSONObject();
            CriticalIllnessCoversMotherObj.put("Applicable", CriticalStatus);
            CriticalIllnessCoversMotherObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversMotherObj.put("CoverRate", "0");
            CriticalIllnessCoversMotherObj.put("CoverPremium", "0");
            CriticalIllnessCoversMotherObj.put("CoverGroups", "Critical Illness Cover");
            MotherCoversArray.put(CriticalIllnessCoversMotherObj);


            JSONObject DailyHospitalCoversMotherObj = new JSONObject();
            DailyHospitalCoversMotherObj.put("Applicable", DailyHospitalSatus);
            DailyHospitalCoversMotherObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversMotherObj.put("CoverRate", "0");
            DailyHospitalCoversMotherObj.put("CoverPremium", "0");
            DailyHospitalCoversMotherObj.put("CoverGroups", "Daily Hospital Cash Cover");
            MotherCoversArray.put(DailyHospitalCoversMotherObj);

            JSONObject ModernCoversMotherObj = new JSONObject();
            ModernCoversMotherObj.put("Applicable", ModernTreatmentsStatus);
            ModernCoversMotherObj.put("CoverSI", strSumInsured);
            ModernCoversMotherObj.put("CoverRate", "0");
            ModernCoversMotherObj.put("CoverPremium", "0");
            ModernCoversMotherObj.put("CoverGroups", "Modern Treatments");
            MotherCoversArray.put(ModernCoversMotherObj);
            JSONObject ExtensionPreHospitalizationCoversMotherObj = new JSONObject();
            ExtensionPreHospitalizationCoversMotherObj.put("Applicable", ExtensionPreHospitalization);
            ExtensionPreHospitalizationCoversMotherObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversMotherObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversMotherObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversMotherObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            MotherCoversArray.put(ExtensionPreHospitalizationCoversMotherObj);

            JSONObject ExtensionPostHospitalizationCoversMotherObj = new JSONObject();
            ExtensionPostHospitalizationCoversMotherObj.put("Applicable", ExtensionPr0Hospitalization);
            ExtensionPostHospitalizationCoversMotherObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversMotherObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversMotherObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversMotherObj.put("CoverGroups", "Extension under Post-Hospitalization");
            MotherCoversArray.put(ExtensionPostHospitalizationCoversMotherObj);


            JSONObject MaternityAndChildcareCoversMotherObj = new JSONObject();
            MaternityAndChildcareCoversMotherObj.put("Applicable", "False");
            MaternityAndChildcareCoversMotherObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversMotherObj.put("CoverRate", "0");
            MaternityAndChildcareCoversMotherObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversMotherObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            MotherCoversArray.put(MaternityAndChildcareCoversMotherObj);

            JSONObject CoverageForNonMedicalCoversMotherObj = new JSONObject();
            CoverageForNonMedicalCoversMotherObj.put("Applicable", CoverageNonMedical);
            CoverageForNonMedicalCoversMotherObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversMotherObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversMotherObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversMotherObj.put("CoverGroups", "Coverage for Non-Medical Items");
            MotherCoversArray.put(CoverageForNonMedicalCoversMotherObj);

            JSONObject ConditionWaiverCoversMotherObj = new JSONObject();
            ConditionWaiverCoversMotherObj.put("Applicable", ConditionWaiverStatus);
            ConditionWaiverCoversMotherObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversMotherObj.put("CoverRate", "0");
            ConditionWaiverCoversMotherObj.put("CoverPremium", "0");
            ConditionWaiverCoversMotherObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            MotherCoversArray.put(ConditionWaiverCoversMotherObj);

            JSONObject PreExistingDiseaseCoversMotherObj = new JSONObject();
            PreExistingDiseaseCoversMotherObj.put("Applicable", PreExistingDiseaseStatus);
            PreExistingDiseaseCoversMotherObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversMotherObj.put("CoverRate", "0");
            PreExistingDiseaseCoversMotherObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversMotherObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            MotherCoversArray.put(PreExistingDiseaseCoversMotherObj);

            JSONObject OutpatientDentalWaitingCoversMotherObj = new JSONObject();
            OutpatientDentalWaitingCoversMotherObj.put("Applicable", OutpatientDentalStatus);
            OutpatientDentalWaitingCoversMotherObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversMotherObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversMotherObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversMotherObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            MotherCoversArray.put(OutpatientDentalWaitingCoversMotherObj);

            JSONObject EmergencyTravellingAllowanceCoversMotherObj = new JSONObject();
            EmergencyTravellingAllowanceCoversMotherObj.put("Applicable", EmergencyTravellingStatus);
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverGroups", "Emergency Travelling Allowance");
            MotherCoversArray.put(EmergencyTravellingAllowanceCoversMotherObj);

            JSONObject SecondOpinionCoversMotherObj = new JSONObject();
            SecondOpinionCoversMotherObj.put("Applicable", SecondOpinionStatus);
            SecondOpinionCoversMotherObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversMotherObj.put("CoverRate", "0");
            SecondOpinionCoversMotherObj.put("CoverPremium", "0");
            SecondOpinionCoversMotherObj.put("CoverGroups", "Second Opinion");
            MotherCoversArray.put(SecondOpinionCoversMotherObj);

            JSONObject RestCureCoversMotherObj = new JSONObject();
            RestCureCoversMotherObj.put("Applicable", RestCureStatus);
            RestCureCoversMotherObj.put("CoverSI", strSumInsured);
            RestCureCoversMotherObj.put("CoverRate", "0");
            RestCureCoversMotherObj.put("CoverPremium", "0");
            RestCureCoversMotherObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            MotherCoversArray.put(RestCureCoversMotherObj);

            JSONObject ObesityWeightCoversMotherObj = new JSONObject();
            ObesityWeightCoversMotherObj.put("Applicable", ObesityWeightStatus);
            ObesityWeightCoversMotherObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversMotherObj.put("CoverRate", "0");
            ObesityWeightCoversMotherObj.put("CoverPremium", "0");
            ObesityWeightCoversMotherObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            MotherCoversArray.put(ObesityWeightCoversMotherObj);

            JSONObject SterilityInfertilityCoversMotherObj = new JSONObject();
            SterilityInfertilityCoversMotherObj.put("Applicable", "False");
            SterilityInfertilityCoversMotherObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversMotherObj.put("CoverRate", "0");
            SterilityInfertilityCoversMotherObj.put("CoverPremium", "0");
            SterilityInfertilityCoversMotherObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            MotherCoversArray.put(SterilityInfertilityCoversMotherObj);

            JSONObject EnhancedOrganDonorCoversMotherObj = new JSONObject();
            EnhancedOrganDonorCoversMotherObj.put("Applicable", EnhancedOrganStatus);
            EnhancedOrganDonorCoversMotherObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversMotherObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversMotherObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversMotherObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            MotherCoversArray.put(EnhancedOrganDonorCoversMotherObj);

            JSONObject PremiumWaiverCoversMotherObj = new JSONObject();
            PremiumWaiverCoversMotherObj.put("Applicable", PremiumWaiverStatus);
            PremiumWaiverCoversMotherObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversMotherObj.put("CoverRate", "0");
            PremiumWaiverCoversMotherObj.put("CoverPremium", "0");
            PremiumWaiverCoversMotherObj.put("CoverGroups", "Premium Waiver");
            MotherCoversArray.put(PremiumWaiverCoversMotherObj);

            JSONObject GlobalCoversMotherObj = new JSONObject();
            GlobalCoversMotherObj.put("Applicable", GlobalCoverStatus);
            GlobalCoversMotherObj.put("CoverSI", strSumInsured);
            GlobalCoversMotherObj.put("CoverRate", "0");
            GlobalCoversMotherObj.put("CoverPremium", "0");
            GlobalCoversMotherObj.put("CoverGroups", "Global Cover");
            MotherCoversArray.put(GlobalCoversMotherObj);


            JSONObject MedicallyAdvisedCoversMotherObj = new JSONObject();
            MedicallyAdvisedCoversMotherObj.put("Applicable", MedicallyAdvisedStatus);
            MedicallyAdvisedCoversMotherObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversMotherObj.put("CoverRate", "0");
            MedicallyAdvisedCoversMotherObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversMotherObj.put("CoverGroups", "Medically Advised Support Devices");
            MotherCoversArray.put(MedicallyAdvisedCoversMotherObj);

            JSONObject EmergencyCoversMotherObj = new JSONObject();
            EmergencyCoversMotherObj.put("Applicable", EmergencyAssistanceStatus);
            EmergencyCoversMotherObj.put("CoverSI", strSumInsured);
            EmergencyCoversMotherObj.put("CoverRate", "0");
            EmergencyCoversMotherObj.put("CoverPremium", "0");
            EmergencyCoversMotherObj.put("CoverGroups", "Emergency Assistance Service");
            MotherCoversArray.put(EmergencyCoversMotherObj);

            JSONObject HomeCareTreatmentCoversMotherObj = new JSONObject();
            HomeCareTreatmentCoversMotherObj.put("Applicable", HomeCareStatus);
            HomeCareTreatmentCoversMotherObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversMotherObj.put("CoverRate", "0");
            HomeCareTreatmentCoversMotherObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversMotherObj.put("CoverGroups", "Home Care Treatment");
            MotherCoversArray.put(HomeCareTreatmentCoversMotherObj);

            JSONObject WellnessBenefitCoversMotherObj = new JSONObject();
            WellnessBenefitCoversMotherObj.put("Applicable", WellnessBenefitStatus);
            WellnessBenefitCoversMotherObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversMotherObj.put("CoverRate", "0");
            WellnessBenefitCoversMotherObj.put("CoverPremium", "0");
            WellnessBenefitCoversMotherObj.put("CoverGroups", "Wellness Benefit");
            MotherCoversArray.put(WellnessBenefitCoversMotherObj);

            JSONObject DiseaseManagementCoversMotherObj = new JSONObject();
            DiseaseManagementCoversMotherObj.put("Applicable", DiseaseManagementStatus);
            DiseaseManagementCoversMotherObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversMotherObj.put("CoverRate", "0");
            DiseaseManagementCoversMotherObj.put("CoverPremium", "0");
            DiseaseManagementCoversMotherObj.put("CoverGroups", "Disease Management Program");
            MotherCoversArray.put(DiseaseManagementCoversMotherObj);
            CoverDetailsMotherObj.put("Covers", MotherCoversArray);
            MotherObj.put("CoverDetails", CoverDetailsMotherObj);
            //father
            JSONObject FatherObj = new JSONObject();
            FatherObj.put("InsuredType", "Parent");
            FatherObj.put("FirstName", "");
            FatherObj.put("LastName", "");
            FatherObj.put("DOB", strFatherAgeEditText);
            FatherObj.put("Gender", "M");
            FatherObj.put("Relationship", "");
            FatherObj.put("Occupation", "");
            FatherObj.put("NomineeName", "");
            FatherObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFatherObj = new JSONObject();
            HealthIndicatorsFatherObj.put("PED", "N");
            HealthIndicatorsFatherObj.put("PEDDeclared", "N");
            HealthIndicatorsFatherObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFatherObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFatherObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFatherObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFatherObj.put("BodyMassIndex", "30");
            HealthIndicatorsFatherObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFatherObj.put("CoMorbidity", "N");
            FatherObj.put("HealthIndicators", HealthIndicatorsFatherObj);

            JSONObject CoverDetailsFatherObj = new JSONObject();
            JSONArray FatherCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversFatherObj = new JSONObject();
            BasicInsuranceCoversFatherObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversFatherObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversFatherObj.put("CoverRate", "0");
            BasicInsuranceCoversFatherObj.put("CoverPremium", "0");
            BasicInsuranceCoversFatherObj.put("CoverGroups", "Basic Insurance Cover");
            FatherCoversArray.put(BasicInsuranceCoversFatherObj);

            JSONObject PersonalAccidentCoversFatherObj = new JSONObject();
            PersonalAccidentCoversFatherObj.put("Applicable", PersonalStatus);
            PersonalAccidentCoversFatherObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFatherObj.put("CoverRate", "0");
            PersonalAccidentCoversFatherObj.put("CoverPremium", "0");
            PersonalAccidentCoversFatherObj.put("CoverGroups", "Personal Accident Cover");
            FatherCoversArray.put(PersonalAccidentCoversFatherObj);

            JSONObject CriticalIllnessCoversFatherObj = new JSONObject();
            CriticalIllnessCoversFatherObj.put("Applicable", CriticalStatus);
            CriticalIllnessCoversFatherObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFatherObj.put("CoverRate", "0");
            CriticalIllnessCoversFatherObj.put("CoverPremium", "0");
            CriticalIllnessCoversFatherObj.put("CoverGroups", "Critical Illness Cover");
            FatherCoversArray.put(CriticalIllnessCoversFatherObj);


            JSONObject DailyHospitalCoversFatherObj = new JSONObject();
            DailyHospitalCoversFatherObj.put("Applicable", DailyHospitalSatus);
            DailyHospitalCoversFatherObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFatherObj.put("CoverRate", "0");
            DailyHospitalCoversFatherObj.put("CoverPremium", "0");
            DailyHospitalCoversFatherObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FatherCoversArray.put(DailyHospitalCoversFatherObj);

            JSONObject ModernCoversFatherObj = new JSONObject();
            ModernCoversFatherObj.put("Applicable", ModernTreatmentsStatus);
            ModernCoversFatherObj.put("CoverSI", strSumInsured);
            ModernCoversFatherObj.put("CoverRate", "0");
            ModernCoversFatherObj.put("CoverPremium", "0");
            ModernCoversFatherObj.put("CoverGroups", "Modern Treatments");
            FatherCoversArray.put(ModernCoversFatherObj);
            JSONObject ExtensionPreHospitalizationCoversFatherObj = new JSONObject();
            ExtensionPreHospitalizationCoversFatherObj.put("Applicable", ExtensionPreHospitalization);
            ExtensionPreHospitalizationCoversFatherObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFatherObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFatherObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFatherObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FatherCoversArray.put(ExtensionPreHospitalizationCoversFatherObj);

            JSONObject ExtensionPostHospitalizationCoversFatherObj = new JSONObject();
            ExtensionPostHospitalizationCoversFatherObj.put("Applicable", ExtensionPr0Hospitalization);
            ExtensionPostHospitalizationCoversFatherObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFatherObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFatherObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFatherObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FatherCoversArray.put(ExtensionPostHospitalizationCoversFatherObj);


            JSONObject MaternityAndChildcareCoversFatherObj = new JSONObject();
            MaternityAndChildcareCoversFatherObj.put("Applicable", "False");
            MaternityAndChildcareCoversFatherObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFatherObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFatherObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFatherObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FatherCoversArray.put(MaternityAndChildcareCoversFatherObj);

            JSONObject CoverageForNonMedicalCoversFatherObj = new JSONObject();
            CoverageForNonMedicalCoversFatherObj.put("Applicable", CoverageNonMedical);
            CoverageForNonMedicalCoversFatherObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFatherObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFatherObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFatherObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FatherCoversArray.put(CoverageForNonMedicalCoversFatherObj);

            JSONObject ConditionWaiverCoversFatherObj = new JSONObject();
            ConditionWaiverCoversFatherObj.put("Applicable", ConditionWaiverStatus);
            ConditionWaiverCoversFatherObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFatherObj.put("CoverRate", "0");
            ConditionWaiverCoversFatherObj.put("CoverPremium", "0");
            ConditionWaiverCoversFatherObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FatherCoversArray.put(ConditionWaiverCoversFatherObj);

            JSONObject PreExistingDiseaseCoversFatherObj = new JSONObject();
            PreExistingDiseaseCoversFatherObj.put("Applicable", PreExistingDiseaseStatus);
            PreExistingDiseaseCoversFatherObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFatherObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFatherObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFatherObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FatherCoversArray.put(PreExistingDiseaseCoversFatherObj);

            JSONObject OutpatientDentalWaitingCoversFatherObj = new JSONObject();
            OutpatientDentalWaitingCoversFatherObj.put("Applicable", OutpatientDentalStatus);
            OutpatientDentalWaitingCoversFatherObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFatherObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFatherObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFatherObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FatherCoversArray.put(OutpatientDentalWaitingCoversFatherObj);

            JSONObject EmergencyTravellingAllowanceCoversFatherObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFatherObj.put("Applicable", EmergencyTravellingStatus);
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverGroups", "Emergency Travelling Allowance");
            FatherCoversArray.put(EmergencyTravellingAllowanceCoversFatherObj);

            JSONObject SecondOpinionCoversFatherObj = new JSONObject();
            SecondOpinionCoversFatherObj.put("Applicable", SecondOpinionStatus);
            SecondOpinionCoversFatherObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFatherObj.put("CoverRate", "0");
            SecondOpinionCoversFatherObj.put("CoverPremium", "0");
            SecondOpinionCoversFatherObj.put("CoverGroups", "Second Opinion");
            FatherCoversArray.put(SecondOpinionCoversFatherObj);

            JSONObject RestCureCoversFatherObj = new JSONObject();
            RestCureCoversFatherObj.put("Applicable", RestCureStatus);
            RestCureCoversFatherObj.put("CoverSI", strSumInsured);
            RestCureCoversFatherObj.put("CoverRate", "0");
            RestCureCoversFatherObj.put("CoverPremium", "0");
            RestCureCoversFatherObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FatherCoversArray.put(RestCureCoversFatherObj);

            JSONObject ObesityWeightCoversFatherObj = new JSONObject();
            ObesityWeightCoversFatherObj.put("Applicable", ObesityWeightStatus);
            ObesityWeightCoversFatherObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFatherObj.put("CoverRate", "0");
            ObesityWeightCoversFatherObj.put("CoverPremium", "0");
            ObesityWeightCoversFatherObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FatherCoversArray.put(ObesityWeightCoversFatherObj);

            JSONObject SterilityInfertilityCoversFatherObj = new JSONObject();
            SterilityInfertilityCoversFatherObj.put("Applicable", "False");
            SterilityInfertilityCoversFatherObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFatherObj.put("CoverRate", "0");
            SterilityInfertilityCoversFatherObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFatherObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FatherCoversArray.put(SterilityInfertilityCoversFatherObj);

            JSONObject EnhancedOrganDonorCoversFatherObj = new JSONObject();
            EnhancedOrganDonorCoversFatherObj.put("Applicable", EnhancedOrganStatus);
            EnhancedOrganDonorCoversFatherObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFatherObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFatherObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFatherObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FatherCoversArray.put(EnhancedOrganDonorCoversFatherObj);

            JSONObject PremiumWaiverCoversFatherObj = new JSONObject();
            PremiumWaiverCoversFatherObj.put("Applicable", PremiumWaiverStatus);
            PremiumWaiverCoversFatherObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFatherObj.put("CoverRate", "0");
            PremiumWaiverCoversFatherObj.put("CoverPremium", "0");
            PremiumWaiverCoversFatherObj.put("CoverGroups", "Premium Waiver");
            FatherCoversArray.put(PremiumWaiverCoversFatherObj);

            JSONObject GlobalCoversFatherObj = new JSONObject();
            GlobalCoversFatherObj.put("Applicable", GlobalCoverStatus);
            GlobalCoversFatherObj.put("CoverSI", strSumInsured);
            GlobalCoversFatherObj.put("CoverRate", "0");
            GlobalCoversFatherObj.put("CoverPremium", "0");
            GlobalCoversFatherObj.put("CoverGroups", "Global Cover");
            FatherCoversArray.put(GlobalCoversFatherObj);


            JSONObject MedicallyAdvisedCoversFatherObj = new JSONObject();
            MedicallyAdvisedCoversFatherObj.put("Applicable", MedicallyAdvisedStatus);
            MedicallyAdvisedCoversFatherObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFatherObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFatherObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFatherObj.put("CoverGroups", "Medically Advised Support Devices");
            FatherCoversArray.put(MedicallyAdvisedCoversFatherObj);

            JSONObject EmergencyCoversFatherObj = new JSONObject();
            EmergencyCoversFatherObj.put("Applicable", EmergencyAssistanceStatus);
            EmergencyCoversFatherObj.put("CoverSI", strSumInsured);
            EmergencyCoversFatherObj.put("CoverRate", "0");
            EmergencyCoversFatherObj.put("CoverPremium", "0");
            EmergencyCoversFatherObj.put("CoverGroups", "Emergency Assistance Service");
            FatherCoversArray.put(EmergencyCoversFatherObj);

            JSONObject HomeCareTreatmentCoversFatherObj = new JSONObject();
            HomeCareTreatmentCoversFatherObj.put("Applicable", HomeCareStatus);
            HomeCareTreatmentCoversFatherObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFatherObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFatherObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFatherObj.put("CoverGroups", "Home Care Treatment");
            FatherCoversArray.put(HomeCareTreatmentCoversFatherObj);

            JSONObject WellnessBenefitCoversFatherObj = new JSONObject();
            WellnessBenefitCoversFatherObj.put("Applicable", WellnessBenefitStatus);
            WellnessBenefitCoversFatherObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFatherObj.put("CoverRate", "0");
            WellnessBenefitCoversFatherObj.put("CoverPremium", "0");
            WellnessBenefitCoversFatherObj.put("CoverGroups", "Wellness Benefit");
            FatherCoversArray.put(WellnessBenefitCoversFatherObj);

            JSONObject DiseaseManagementCoversFatherObj = new JSONObject();
            DiseaseManagementCoversFatherObj.put("Applicable", DiseaseManagementStatus);
            DiseaseManagementCoversFatherObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFatherObj.put("CoverRate", "0");
            DiseaseManagementCoversFatherObj.put("CoverPremium", "0");
            DiseaseManagementCoversFatherObj.put("CoverGroups", "Disease Management Program");
            FatherCoversArray.put(DiseaseManagementCoversFatherObj);
            CoverDetailsFatherObj.put("Covers", FatherCoversArray);
            FatherObj.put("CoverDetails", CoverDetailsFatherObj);

            //motherLaw
            JSONObject MotherLawObj = new JSONObject();
            MotherLawObj.put("InsuredType", "Parent");
            MotherLawObj.put("FirstName", "");
            MotherLawObj.put("LastName", "");
            MotherLawObj.put("DOB", strMotherLawAgeEditText);
            MotherLawObj.put("Gender", "F");
            MotherLawObj.put("Relationship", "");
            MotherLawObj.put("Occupation", "");
            MotherLawObj.put("NomineeName", "");
            MotherLawObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsMotherLawObj = new JSONObject();
            HealthIndicatorsMotherLawObj.put("PED", "N");
            HealthIndicatorsMotherLawObj.put("PEDDeclared", "N");
            HealthIndicatorsMotherLawObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsMotherLawObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsMotherLawObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsMotherLawObj.put("CholesterolLevel", "NA");
            HealthIndicatorsMotherLawObj.put("BodyMassIndex", "30");
            HealthIndicatorsMotherLawObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsMotherLawObj.put("CoMorbidity", "N");
            MotherLawObj.put("HealthIndicators", HealthIndicatorsMotherLawObj);

            JSONObject CoverDetailsMotherLawObj = new JSONObject();
            JSONArray MotherLawCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversMotherLawObj = new JSONObject();
            BasicInsuranceCoversMotherLawObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversMotherLawObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversMotherLawObj.put("CoverRate", "0");
            BasicInsuranceCoversMotherLawObj.put("CoverPremium", "0");
            BasicInsuranceCoversMotherLawObj.put("CoverGroups", "Basic Insurance Cover");
            MotherLawCoversArray.put(BasicInsuranceCoversMotherLawObj);

            JSONObject PersonalAccidentCoversMotherLawObj = new JSONObject();
            PersonalAccidentCoversMotherLawObj.put("Applicable", PersonalStatus);
            PersonalAccidentCoversMotherLawObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversMotherLawObj.put("CoverRate", "0");
            PersonalAccidentCoversMotherLawObj.put("CoverPremium", "0");
            PersonalAccidentCoversMotherLawObj.put("CoverGroups", "Personal Accident Cover");
            MotherLawCoversArray.put(PersonalAccidentCoversMotherLawObj);

            JSONObject CriticalIllnessCoversMotherLawObj = new JSONObject();
            CriticalIllnessCoversMotherLawObj.put("Applicable", CriticalStatus);
            CriticalIllnessCoversMotherLawObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversMotherLawObj.put("CoverRate", "0");
            CriticalIllnessCoversMotherLawObj.put("CoverPremium", "0");
            CriticalIllnessCoversMotherLawObj.put("CoverGroups", "Critical Illness Cover");
            MotherLawCoversArray.put(CriticalIllnessCoversMotherLawObj);


            JSONObject DailyHospitalCoversMotherLawObj = new JSONObject();
            DailyHospitalCoversMotherLawObj.put("Applicable", DailyHospitalSatus);
            DailyHospitalCoversMotherLawObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversMotherLawObj.put("CoverRate", "0");
            DailyHospitalCoversMotherLawObj.put("CoverPremium", "0");
            DailyHospitalCoversMotherLawObj.put("CoverGroups", "Daily Hospital Cash Cover");
            MotherLawCoversArray.put(DailyHospitalCoversMotherLawObj);

            JSONObject ModernCoversMotherLawObj = new JSONObject();
            ModernCoversMotherLawObj.put("Applicable", ModernTreatmentsStatus);
            ModernCoversMotherLawObj.put("CoverSI", strSumInsured);
            ModernCoversMotherLawObj.put("CoverRate", "0");
            ModernCoversMotherLawObj.put("CoverPremium", "0");
            ModernCoversMotherLawObj.put("CoverGroups", "Modern Treatments");
            MotherLawCoversArray.put(ModernCoversMotherLawObj);
            JSONObject ExtensionPreHospitalizationCoversMotherLawObj = new JSONObject();
            ExtensionPreHospitalizationCoversMotherLawObj.put("Applicable", ExtensionPreHospitalization);
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            MotherLawCoversArray.put(ExtensionPreHospitalizationCoversMotherLawObj);

            JSONObject ExtensionPostHospitalizationCoversMotherLawObj = new JSONObject();
            ExtensionPostHospitalizationCoversMotherLawObj.put("Applicable", ExtensionPr0Hospitalization);
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverGroups", "Extension under Post-Hospitalization");
            MotherLawCoversArray.put(ExtensionPostHospitalizationCoversMotherLawObj);


            JSONObject MaternityAndChildcareCoversMotherLawObj = new JSONObject();
            MaternityAndChildcareCoversMotherLawObj.put("Applicable", "False");
            MaternityAndChildcareCoversMotherLawObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversMotherLawObj.put("CoverRate", "0");
            MaternityAndChildcareCoversMotherLawObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversMotherLawObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            MotherLawCoversArray.put(MaternityAndChildcareCoversMotherLawObj);

            JSONObject CoverageForNonMedicalCoversMotherLawObj = new JSONObject();
            CoverageForNonMedicalCoversMotherLawObj.put("Applicable", CoverageNonMedical);
            CoverageForNonMedicalCoversMotherLawObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversMotherLawObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversMotherLawObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversMotherLawObj.put("CoverGroups", "Coverage for Non-Medical Items");
            MotherLawCoversArray.put(CoverageForNonMedicalCoversMotherLawObj);

            JSONObject ConditionWaiverCoversMotherLawObj = new JSONObject();
            ConditionWaiverCoversMotherLawObj.put("Applicable", ConditionWaiverStatus);
            ConditionWaiverCoversMotherLawObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversMotherLawObj.put("CoverRate", "0");
            ConditionWaiverCoversMotherLawObj.put("CoverPremium", "0");
            ConditionWaiverCoversMotherLawObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            MotherLawCoversArray.put(ConditionWaiverCoversMotherLawObj);

            JSONObject PreExistingDiseaseCoversMotherLawObj = new JSONObject();
            PreExistingDiseaseCoversMotherLawObj.put("Applicable", PreExistingDiseaseStatus);
            PreExistingDiseaseCoversMotherLawObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversMotherLawObj.put("CoverRate", "0");
            PreExistingDiseaseCoversMotherLawObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversMotherLawObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            MotherLawCoversArray.put(PreExistingDiseaseCoversMotherLawObj);

            JSONObject OutpatientDentalWaitingCoversMotherLawObj = new JSONObject();
            OutpatientDentalWaitingCoversMotherLawObj.put("Applicable", OutpatientDentalStatus);
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            MotherLawCoversArray.put(OutpatientDentalWaitingCoversMotherLawObj);

            JSONObject EmergencyTravellingAllowanceCoversMotherLawObj = new JSONObject();
            EmergencyTravellingAllowanceCoversMotherLawObj.put("Applicable", EmergencyTravellingStatus);
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverGroups", "Emergency Travelling Allowance");
            MotherLawCoversArray.put(EmergencyTravellingAllowanceCoversMotherLawObj);

            JSONObject SecondOpinionCoversMotherLawObj = new JSONObject();
            SecondOpinionCoversMotherLawObj.put("Applicable", SecondOpinionStatus);
            SecondOpinionCoversMotherLawObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversMotherLawObj.put("CoverRate", "0");
            SecondOpinionCoversMotherLawObj.put("CoverPremium", "0");
            SecondOpinionCoversMotherLawObj.put("CoverGroups", "Second Opinion");
            MotherLawCoversArray.put(SecondOpinionCoversMotherLawObj);

            JSONObject RestCureCoversMotherLawObj = new JSONObject();
            RestCureCoversMotherLawObj.put("Applicable", RestCureStatus);
            RestCureCoversMotherLawObj.put("CoverSI", strSumInsured);
            RestCureCoversMotherLawObj.put("CoverRate", "0");
            RestCureCoversMotherLawObj.put("CoverPremium", "0");
            RestCureCoversMotherLawObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            MotherLawCoversArray.put(RestCureCoversMotherLawObj);

            JSONObject ObesityWeightCoversMotherLawObj = new JSONObject();
            ObesityWeightCoversMotherLawObj.put("Applicable", ObesityWeightStatus);
            ObesityWeightCoversMotherLawObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversMotherLawObj.put("CoverRate", "0");
            ObesityWeightCoversMotherLawObj.put("CoverPremium", "0");
            ObesityWeightCoversMotherLawObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            MotherLawCoversArray.put(ObesityWeightCoversMotherLawObj);

            JSONObject SterilityInfertilityCoversMotherLawObj = new JSONObject();
            SterilityInfertilityCoversMotherLawObj.put("Applicable", "False");
            SterilityInfertilityCoversMotherLawObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversMotherLawObj.put("CoverRate", "0");
            SterilityInfertilityCoversMotherLawObj.put("CoverPremium", "0");
            SterilityInfertilityCoversMotherLawObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            MotherLawCoversArray.put(SterilityInfertilityCoversMotherLawObj);

            JSONObject EnhancedOrganDonorCoversMotherLawObj = new JSONObject();
            EnhancedOrganDonorCoversMotherLawObj.put("Applicable", EnhancedOrganStatus);
            EnhancedOrganDonorCoversMotherLawObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversMotherLawObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversMotherLawObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversMotherLawObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            MotherLawCoversArray.put(EnhancedOrganDonorCoversMotherLawObj);

            JSONObject PremiumWaiverCoversMotherLawObj = new JSONObject();
            PremiumWaiverCoversMotherLawObj.put("Applicable", PremiumWaiverStatus);
            PremiumWaiverCoversMotherLawObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversMotherLawObj.put("CoverRate", "0");
            PremiumWaiverCoversMotherLawObj.put("CoverPremium", "0");
            PremiumWaiverCoversMotherLawObj.put("CoverGroups", "Premium Waiver");
            MotherLawCoversArray.put(PremiumWaiverCoversMotherLawObj);

            JSONObject GlobalCoversMotherLawObj = new JSONObject();
            GlobalCoversMotherLawObj.put("Applicable", GlobalCoverStatus);
            GlobalCoversMotherLawObj.put("CoverSI", strSumInsured);
            GlobalCoversMotherLawObj.put("CoverRate", "0");
            GlobalCoversMotherLawObj.put("CoverPremium", "0");
            GlobalCoversMotherLawObj.put("CoverGroups", "Global Cover");
            MotherLawCoversArray.put(GlobalCoversMotherLawObj);


            JSONObject MedicallyAdvisedCoversMotherLawObj = new JSONObject();
            MedicallyAdvisedCoversMotherLawObj.put("Applicable", MedicallyAdvisedStatus);
            MedicallyAdvisedCoversMotherLawObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversMotherLawObj.put("CoverRate", "0");
            MedicallyAdvisedCoversMotherLawObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversMotherLawObj.put("CoverGroups", "Medically Advised Support Devices");
            MotherLawCoversArray.put(MedicallyAdvisedCoversMotherLawObj);

            JSONObject EmergencyCoversMotherLawObj = new JSONObject();
            EmergencyCoversMotherLawObj.put("Applicable", EmergencyAssistanceStatus);
            EmergencyCoversMotherLawObj.put("CoverSI", strSumInsured);
            EmergencyCoversMotherLawObj.put("CoverRate", "0");
            EmergencyCoversMotherLawObj.put("CoverPremium", "0");
            EmergencyCoversMotherLawObj.put("CoverGroups", "Emergency Assistance Service");
            MotherLawCoversArray.put(EmergencyCoversMotherLawObj);

            JSONObject HomeCareTreatmentCoversMotherLawObj = new JSONObject();
            HomeCareTreatmentCoversMotherLawObj.put("Applicable", HomeCareStatus);
            HomeCareTreatmentCoversMotherLawObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversMotherLawObj.put("CoverRate", "0");
            HomeCareTreatmentCoversMotherLawObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversMotherLawObj.put("CoverGroups", "Home Care Treatment");
            MotherLawCoversArray.put(HomeCareTreatmentCoversMotherLawObj);

            JSONObject WellnessBenefitCoversMotherLawObj = new JSONObject();
            WellnessBenefitCoversMotherLawObj.put("Applicable", WellnessBenefitStatus);
            WellnessBenefitCoversMotherLawObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversMotherLawObj.put("CoverRate", "0");
            WellnessBenefitCoversMotherLawObj.put("CoverPremium", "0");
            WellnessBenefitCoversMotherLawObj.put("CoverGroups", "Wellness Benefit");
            MotherLawCoversArray.put(WellnessBenefitCoversMotherLawObj);

            JSONObject DiseaseManagementCoversMotherLawObj = new JSONObject();
            DiseaseManagementCoversMotherLawObj.put("Applicable", DiseaseManagementStatus);
            DiseaseManagementCoversMotherLawObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversMotherLawObj.put("CoverRate", "0");
            DiseaseManagementCoversMotherLawObj.put("CoverPremium", "0");
            DiseaseManagementCoversMotherLawObj.put("CoverGroups", "Disease Management Program");
            MotherLawCoversArray.put(DiseaseManagementCoversMotherLawObj);
            CoverDetailsMotherLawObj.put("Covers", MotherLawCoversArray);
            MotherLawObj.put("CoverDetails", CoverDetailsMotherLawObj);


            //FatherLaw
            JSONObject FatherLawObj = new JSONObject();
            FatherLawObj.put("InsuredType", "Parent");
            FatherLawObj.put("FirstName", "");
            FatherLawObj.put("LastName", "");
            FatherLawObj.put("DOB", strFatherLawAgeEditText);
            FatherLawObj.put("Gender", "M");
            FatherLawObj.put("Relationship", "");
            FatherLawObj.put("Occupation", "");
            FatherLawObj.put("NomineeName", "");
            FatherLawObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFatherLawObj = new JSONObject();
            HealthIndicatorsFatherLawObj.put("PED", "N");
            HealthIndicatorsFatherLawObj.put("PEDDeclared", "N");
            HealthIndicatorsFatherLawObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFatherLawObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFatherLawObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFatherLawObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFatherLawObj.put("BodyMassIndex", "30");
            HealthIndicatorsFatherLawObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFatherLawObj.put("CoMorbidity", "N");
            FatherLawObj.put("HealthIndicators", HealthIndicatorsFatherLawObj);

            JSONObject CoverDetailsFatherLawObj = new JSONObject();
            JSONArray FatherLawCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversFatherLawObj = new JSONObject();
            BasicInsuranceCoversFatherLawObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversFatherLawObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversFatherLawObj.put("CoverRate", "0");
            BasicInsuranceCoversFatherLawObj.put("CoverPremium", "0");
            BasicInsuranceCoversFatherLawObj.put("CoverGroups", "Basic Insurance Cover");
            FatherLawCoversArray.put(BasicInsuranceCoversFatherLawObj);

            JSONObject PersonalAccidentCoversFatherLawObj = new JSONObject();
            PersonalAccidentCoversFatherLawObj.put("Applicable", PersonalStatus);
            PersonalAccidentCoversFatherLawObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFatherLawObj.put("CoverRate", "0");
            PersonalAccidentCoversFatherLawObj.put("CoverPremium", "0");
            PersonalAccidentCoversFatherLawObj.put("CoverGroups", "Personal Accident Cover");
            FatherLawCoversArray.put(PersonalAccidentCoversFatherLawObj);

            JSONObject CriticalIllnessCoversFatherLawObj = new JSONObject();
            CriticalIllnessCoversFatherLawObj.put("Applicable", CriticalStatus);
            CriticalIllnessCoversFatherLawObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFatherLawObj.put("CoverRate", "0");
            CriticalIllnessCoversFatherLawObj.put("CoverPremium", "0");
            CriticalIllnessCoversFatherLawObj.put("CoverGroups", "Critical Illness Cover");
            FatherLawCoversArray.put(CriticalIllnessCoversFatherLawObj);


            JSONObject DailyHospitalCoversFatherLawObj = new JSONObject();
            DailyHospitalCoversFatherLawObj.put("Applicable", DailyHospitalSatus);
            DailyHospitalCoversFatherLawObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFatherLawObj.put("CoverRate", "0");
            DailyHospitalCoversFatherLawObj.put("CoverPremium", "0");
            DailyHospitalCoversFatherLawObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FatherLawCoversArray.put(DailyHospitalCoversFatherLawObj);

            JSONObject ModernCoversFatherLawObj = new JSONObject();
            ModernCoversFatherLawObj.put("Applicable", ModernTreatmentsStatus);
            ModernCoversFatherLawObj.put("CoverSI", strSumInsured);
            ModernCoversFatherLawObj.put("CoverRate", "0");
            ModernCoversFatherLawObj.put("CoverPremium", "0");
            ModernCoversFatherLawObj.put("CoverGroups", "Modern Treatments");
            FatherLawCoversArray.put(ModernCoversFatherLawObj);
            JSONObject ExtensionPreHospitalizationCoversFatherLawObj = new JSONObject();
            ExtensionPreHospitalizationCoversFatherLawObj.put("Applicable", ExtensionPreHospitalization);
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FatherLawCoversArray.put(ExtensionPreHospitalizationCoversFatherLawObj);

            JSONObject ExtensionPostHospitalizationCoversFatherLawObj = new JSONObject();
            ExtensionPostHospitalizationCoversFatherLawObj.put("Applicable", ExtensionPr0Hospitalization);
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FatherLawCoversArray.put(ExtensionPostHospitalizationCoversFatherLawObj);


            JSONObject MaternityAndChildcareCoversFatherLawObj = new JSONObject();
            MaternityAndChildcareCoversFatherLawObj.put("Applicable", "False");
            MaternityAndChildcareCoversFatherLawObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFatherLawObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFatherLawObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFatherLawObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FatherLawCoversArray.put(MaternityAndChildcareCoversFatherLawObj);

            JSONObject CoverageForNonMedicalCoversFatherLawObj = new JSONObject();
            CoverageForNonMedicalCoversFatherLawObj.put("Applicable", CoverageNonMedical);
            CoverageForNonMedicalCoversFatherLawObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFatherLawObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFatherLawObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFatherLawObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FatherLawCoversArray.put(CoverageForNonMedicalCoversFatherLawObj);

            JSONObject ConditionWaiverCoversFatherLawObj = new JSONObject();
            ConditionWaiverCoversFatherLawObj.put("Applicable", ConditionWaiverStatus);
            ConditionWaiverCoversFatherLawObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFatherLawObj.put("CoverRate", "0");
            ConditionWaiverCoversFatherLawObj.put("CoverPremium", "0");
            ConditionWaiverCoversFatherLawObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FatherLawCoversArray.put(ConditionWaiverCoversFatherLawObj);

            JSONObject PreExistingDiseaseCoversFatherLawObj = new JSONObject();
            PreExistingDiseaseCoversFatherLawObj.put("Applicable", PreExistingDiseaseStatus);
            PreExistingDiseaseCoversFatherLawObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFatherLawObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFatherLawObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFatherLawObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FatherLawCoversArray.put(PreExistingDiseaseCoversFatherLawObj);

            JSONObject OutpatientDentalWaitingCoversFatherLawObj = new JSONObject();
            OutpatientDentalWaitingCoversFatherLawObj.put("Applicable", OutpatientDentalStatus);
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FatherLawCoversArray.put(OutpatientDentalWaitingCoversFatherLawObj);

            JSONObject EmergencyTravellingAllowanceCoversFatherLawObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFatherLawObj.put("Applicable", EmergencyTravellingStatus);
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverGroups", "Emergency Travelling Allowance");
            FatherLawCoversArray.put(EmergencyTravellingAllowanceCoversFatherLawObj);

            JSONObject SecondOpinionCoversFatherLawObj = new JSONObject();
            SecondOpinionCoversFatherLawObj.put("Applicable", SecondOpinionStatus);
            SecondOpinionCoversFatherLawObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFatherLawObj.put("CoverRate", "0");
            SecondOpinionCoversFatherLawObj.put("CoverPremium", "0");
            SecondOpinionCoversFatherLawObj.put("CoverGroups", "Second Opinion");
            FatherLawCoversArray.put(SecondOpinionCoversFatherLawObj);

            JSONObject RestCureCoversFatherLawObj = new JSONObject();
            RestCureCoversFatherLawObj.put("Applicable", RestCureStatus);
            RestCureCoversFatherLawObj.put("CoverSI", strSumInsured);
            RestCureCoversFatherLawObj.put("CoverRate", "0");
            RestCureCoversFatherLawObj.put("CoverPremium", "0");
            RestCureCoversFatherLawObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FatherLawCoversArray.put(RestCureCoversFatherLawObj);

            JSONObject ObesityWeightCoversFatherLawObj = new JSONObject();
            ObesityWeightCoversFatherLawObj.put("Applicable", ObesityWeightStatus);
            ObesityWeightCoversFatherLawObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFatherLawObj.put("CoverRate", "0");
            ObesityWeightCoversFatherLawObj.put("CoverPremium", "0");
            ObesityWeightCoversFatherLawObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FatherLawCoversArray.put(ObesityWeightCoversFatherLawObj);

            JSONObject SterilityInfertilityCoversFatherLawObj = new JSONObject();
            SterilityInfertilityCoversFatherLawObj.put("Applicable", "False");
            SterilityInfertilityCoversFatherLawObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFatherLawObj.put("CoverRate", "0");
            SterilityInfertilityCoversFatherLawObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFatherLawObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FatherLawCoversArray.put(SterilityInfertilityCoversFatherLawObj);

            JSONObject EnhancedOrganDonorCoversFatherLawObj = new JSONObject();
            EnhancedOrganDonorCoversFatherLawObj.put("Applicable", EnhancedOrganStatus);
            EnhancedOrganDonorCoversFatherLawObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFatherLawObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFatherLawObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFatherLawObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FatherLawCoversArray.put(EnhancedOrganDonorCoversFatherLawObj);

            JSONObject PremiumWaiverCoversFatherLawObj = new JSONObject();
            PremiumWaiverCoversFatherLawObj.put("Applicable", PremiumWaiverStatus);
            PremiumWaiverCoversFatherLawObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFatherLawObj.put("CoverRate", "0");
            PremiumWaiverCoversFatherLawObj.put("CoverPremium", "0");
            PremiumWaiverCoversFatherLawObj.put("CoverGroups", "Premium Waiver");
            FatherLawCoversArray.put(PremiumWaiverCoversFatherLawObj);

            JSONObject GlobalCoversFatherLawObj = new JSONObject();
            GlobalCoversFatherLawObj.put("Applicable", GlobalCoverStatus);
            GlobalCoversFatherLawObj.put("CoverSI", strSumInsured);
            GlobalCoversFatherLawObj.put("CoverRate", "0");
            GlobalCoversFatherLawObj.put("CoverPremium", "0");
            GlobalCoversFatherLawObj.put("CoverGroups", "Global Cover");
            FatherLawCoversArray.put(GlobalCoversFatherLawObj);


            JSONObject MedicallyAdvisedCoversFatherLawObj = new JSONObject();
            MedicallyAdvisedCoversFatherLawObj.put("Applicable", MedicallyAdvisedStatus);
            MedicallyAdvisedCoversFatherLawObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFatherLawObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFatherLawObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFatherLawObj.put("CoverGroups", "Medically Advised Support Devices");
            FatherLawCoversArray.put(MedicallyAdvisedCoversFatherLawObj);

            JSONObject EmergencyCoversFatherLawObj = new JSONObject();
            EmergencyCoversFatherLawObj.put("Applicable", EmergencyAssistanceStatus);
            EmergencyCoversFatherLawObj.put("CoverSI", strSumInsured);
            EmergencyCoversFatherLawObj.put("CoverRate", "0");
            EmergencyCoversFatherLawObj.put("CoverPremium", "0");
            EmergencyCoversFatherLawObj.put("CoverGroups", "Emergency Assistance Service");
            FatherLawCoversArray.put(EmergencyCoversFatherLawObj);

            JSONObject HomeCareTreatmentCoversFatherLawObj = new JSONObject();
            HomeCareTreatmentCoversFatherLawObj.put("Applicable", HomeCareStatus);
            HomeCareTreatmentCoversFatherLawObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFatherLawObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFatherLawObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFatherLawObj.put("CoverGroups", "Home Care Treatment");
            FatherLawCoversArray.put(HomeCareTreatmentCoversFatherLawObj);

            JSONObject WellnessBenefitCoversFatherLawObj = new JSONObject();
            WellnessBenefitCoversFatherLawObj.put("Applicable", WellnessBenefitStatus);
            WellnessBenefitCoversFatherLawObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFatherLawObj.put("CoverRate", "0");
            WellnessBenefitCoversFatherLawObj.put("CoverPremium", "0");
            WellnessBenefitCoversFatherLawObj.put("CoverGroups", "Wellness Benefit");
            FatherLawCoversArray.put(WellnessBenefitCoversFatherLawObj);

            JSONObject DiseaseManagementCoversFatherLawObj = new JSONObject();
            DiseaseManagementCoversFatherLawObj.put("Applicable", DiseaseManagementStatus);
            DiseaseManagementCoversFatherLawObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFatherLawObj.put("CoverRate", "0");
            DiseaseManagementCoversFatherLawObj.put("CoverPremium", "0");
            DiseaseManagementCoversFatherLawObj.put("CoverGroups", "Disease Management Program");
            FatherLawCoversArray.put(DiseaseManagementCoversFatherLawObj);
            CoverDetailsFatherLawObj.put("Covers", FatherLawCoversArray);
            FatherLawObj.put("CoverDetails", CoverDetailsFatherLawObj);

            if (str_policyType_spinner.equals("Individual")) {
                if (strCheckBoxSelf.equals("Checked") || strCheckBoxSpouse.equals("Checked") || strCheckBoxMother.equals("Checked") || strCheckBoxFather.equals("Checked") || strCheckBoxMotherLaw.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                    InsuredDetailsGroupArray.put(InsuredDetailsObj);
                }
            } else {
                if (strCheckBoxSelf.equals("Checked")) {
                    InsuredDetailsGroupArray.put(InsuredDetailsObj);
                }
                if (strCheckBoxSpouse.equals("Checked")) {
                    InsuredDetailsGroupArray.put(SecondAdultObj);
                }
                if (mCounter == 1) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                }
                if (mCounter == 2) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                    InsuredDetailsGroupArray.put(SecondChildObj);
                }
                if (mCounter == 3) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                    InsuredDetailsGroupArray.put(SecondChildObj);
                    InsuredDetailsGroupArray.put(ThirdChildObj);
                }
                if (mCounter == 4) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                    InsuredDetailsGroupArray.put(SecondChildObj);
                    InsuredDetailsGroupArray.put(ThirdChildObj);
                    InsuredDetailsGroupArray.put(FourthChildObj);
                }
                if (strCheckBoxMother.equals("Checked")) {
                    InsuredDetailsGroupArray.put(MotherObj);
                }
                if (strCheckBoxFather.equals("Checked")) {
                    InsuredDetailsGroupArray.put(FatherObj);
                }
                if (strCheckBoxMotherLaw.equals("Checked")) {
                    InsuredDetailsGroupArray.put(MotherLawObj);
                }
                if (strCheckBoxFatherLaw.equals("Checked")) {
                    InsuredDetailsGroupArray.put(FatherLawObj);
                }
            }

//           InsuredDetailsGroupArray.put(InsuredDetailsObj);
            InsuredDetailsObject.put("InsuredDetailsGroup", InsuredDetailsGroupArray);
            RisksDataObject.put("InsuredDetails", InsuredDetailsObject);
            //otherLoading
            JSONObject OtherLoadingsObject = new JSONObject();
            JSONObject OtherLoadingGroupObject = new JSONObject();
            JSONObject OtherLoadingGroupDataObject = new JSONObject();
            OtherLoadingGroupDataObject.put("LoadingAmount", "0");
            OtherLoadingGroupDataObject.put("LoadingRate", "0");
            OtherLoadingGroupDataObject.put("SumInsured", "0");
            OtherLoadingGroupDataObject.put("Rate", "0");
            OtherLoadingGroupDataObject.put("Premium", "0");
            OtherLoadingGroupDataObject.put("Applicable", "False");
            OtherLoadingGroupDataObject.put("Description", "NULL");
            OtherLoadingGroupObject.put("OtherLoadingGroupData", OtherLoadingGroupDataObject);
            OtherLoadingsObject.put("OtherLoadingGroup", OtherLoadingGroupObject);

            RisksDataObject.put("OtherLoadings", OtherLoadingsObject);
//            RiskObject.put("RisksData",RisksDataObject);
//            RisksObject.put("Risks",RiskObject);
            //OtherDiscounts
            JSONObject OtherDiscountsObject = new JSONObject();
            JSONArray OtherDiscountGroupArray = new JSONArray();
            JSONObject TreatmentObject = new JSONObject();
            TreatmentObject.put("DiscountAmount", "0");
            TreatmentObject.put("DiscountRate", "0");
            TreatmentObject.put("SumInsured", strSumInsured);
            TreatmentObject.put("Rate", "0");
            TreatmentObject.put("Premium", "0");
            TreatmentObject.put("Applicable", TreatmentStatus);
            TreatmentObject.put("Description", "Treatment only in tiered network");
            OtherDiscountGroupArray.put(TreatmentObject);

            JSONObject CoPaymentObject = new JSONObject();
            CoPaymentObject.put("DiscountAmount", "0");
            CoPaymentObject.put("DiscountRate", "0");
            CoPaymentObject.put("SumInsured", strSumInsured);
            CoPaymentObject.put("Rate", "0");
            CoPaymentObject.put("Premium", "0");
            CoPaymentObject.put("Applicable", CoPaymentStatus);
            CoPaymentObject.put("Description", "Co-payment");
            OtherDiscountGroupArray.put(CoPaymentObject);


            JSONObject LongObject = new JSONObject();
            LongObject.put("DiscountAmount", "0");
            LongObject.put("DiscountRate", "0");
            LongObject.put("SumInsured", strSumInsured);
            LongObject.put("Rate", "0");
            LongObject.put("Premium", "0");
            LongObject.put("Applicable", LongTermDiscountStatus);
            LongObject.put("Description", "Long term discount");
            OtherDiscountGroupArray.put(LongObject);

            JSONObject FamilyDiscountObject = new JSONObject();
            FamilyDiscountObject.put("DiscountAmount", "0");
            FamilyDiscountObject.put("DiscountRate", "0");
            FamilyDiscountObject.put("SumInsured", strSumInsured);
            FamilyDiscountObject.put("Rate", "0");
            FamilyDiscountObject.put("Premium", "0");
            FamilyDiscountObject.put("Applicable", "False");
            FamilyDiscountObject.put("Description", "Family Discount");
            OtherDiscountGroupArray.put(FamilyDiscountObject);

            JSONObject SubCategoryObject = new JSONObject();
            SubCategoryObject.put("DiscountAmount", "0");
            SubCategoryObject.put("DiscountRate", "0");
            SubCategoryObject.put("SumInsured", strSumInsured);
            SubCategoryObject.put("Rate", "0");
            SubCategoryObject.put("Premium", "0");
            SubCategoryObject.put("Applicable", SubCategoryDiscountStatus);
            SubCategoryObject.put("Description", "Sub Category Discount");
            OtherDiscountGroupArray.put(SubCategoryObject);


            JSONObject DirectPolicyObject = new JSONObject();
            DirectPolicyObject.put("DiscountAmount", "0");
            DirectPolicyObject.put("DiscountRate", "0");
            DirectPolicyObject.put("SumInsured", strSumInsured);
            DirectPolicyObject.put("Rate", "0");
            DirectPolicyObject.put("Premium", "0");
            DirectPolicyObject.put("Applicable", "True");
            DirectPolicyObject.put("Description", "Direct Policy Discount");
            OtherDiscountGroupArray.put(DirectPolicyObject);

            JSONObject LoyaltyDiscountObject = new JSONObject();
            LoyaltyDiscountObject.put("DiscountAmount", "0");
            LoyaltyDiscountObject.put("DiscountRate", "0");
            LoyaltyDiscountObject.put("SumInsured", strSumInsured);
            LoyaltyDiscountObject.put("Rate", "0");
            LoyaltyDiscountObject.put("Premium", "0");
            LoyaltyDiscountObject.put("Applicable", LoyaltyDiscountStatus);
            LoyaltyDiscountObject.put("Description", "Loyalty Discount");
            OtherDiscountGroupArray.put(LoyaltyDiscountObject);

            JSONObject EmployeeDiscountObject = new JSONObject();
            EmployeeDiscountObject.put("DiscountAmount", "0");
            EmployeeDiscountObject.put("DiscountRate", "0");
            EmployeeDiscountObject.put("SumInsured", strSumInsured);
            EmployeeDiscountObject.put("Rate", "0");
            EmployeeDiscountObject.put("Premium", "0");
            EmployeeDiscountObject.put("Applicable", "False");
            EmployeeDiscountObject.put("Description", "Employee Discount");
            OtherDiscountGroupArray.put(EmployeeDiscountObject);

            JSONObject OrganDonorDiscountObject = new JSONObject();
            OrganDonorDiscountObject.put("DiscountAmount", "0");
            OrganDonorDiscountObject.put("DiscountRate", "0");
            OrganDonorDiscountObject.put("SumInsured", strSumInsured);
            OrganDonorDiscountObject.put("Rate", "0");
            OrganDonorDiscountObject.put("Premium", "0");
            OrganDonorDiscountObject.put("Applicable", OrganDiscountStatus);
            OrganDonorDiscountObject.put("Description", "Organ Donor Discount");
            OtherDiscountGroupArray.put(OrganDonorDiscountObject);

            OtherDiscountsObject.put("OtherDiscountGroup", OtherDiscountGroupArray);
            RisksDataObject.put("OtherDiscounts", OtherDiscountsObject);
            RiskObject.put("RisksData", RisksDataObject);
            RisksObject.put("Risk", RiskObject);
            ProductObject.put("Risks", RisksObject);

            RootObject.put("Product", ProductObject);
            //PaymentDetails
            JSONObject PaymentDetailsObj = new JSONObject();
            JSONObject PaymentEntryObj = new JSONObject();
            PaymentEntryObj.put("PaymentId", "NULL");
            PaymentEntryObj.put("MICRCheque", "NULL");
            PaymentEntryObj.put("InstrumentDate", "NULL");
            PaymentEntryObj.put("DraweeBankName", "NULL");
            PaymentEntryObj.put("HOUSEBANKNAME", "NULL");
            PaymentEntryObj.put("AmountPaid", "NULL");
            PaymentEntryObj.put("PaymentType", "NULL");
            PaymentEntryObj.put("PaymentMode", "NULL");
            PaymentEntryObj.put("InstrumentNo", "NULL");
            PaymentEntryObj.put("Status", "NULL");
            PaymentEntryObj.put("DepositSlipNo", "NULL");
            PaymentEntryObj.put("PayerType", "NULL");
            PaymentDetailsObj.put("PaymentEntry", PaymentEntryObj);
            RootObject.put("PaymentDetails", PaymentDetailsObj);
            //Error
            JSONObject ErrorsObj = new JSONObject();
            ErrorsObj.put("ErrorCode", "0");
            ErrorsObj.put("ErrDescription", "NULL");
            RootObject.put("Errors", ErrorsObj);

            //mainObject
            object.put("Root", RootObject);
            Log.e("objectApi", String.valueOf(object));
        }
        catch (Exception e) {
            e.printStackTrace();
        }
        ProjectVolleyRequest req = new ProjectVolleyRequest(NewCHIAddOns.this, object, UrlHealthConstants.revisedCHIURL, new ResponseListener() {
            @Override
            public void onSuccess(JSONObject object, int Tag) {
                try {
                    JSONObject RootJsonObject = object.getJSONObject("Root");
                    JSONObject ErrorsJsonObject = RootJsonObject.getJSONObject("Errors");
                    String ErrDescription = ErrorsJsonObject.getString("ErrDescription");
                    if (ErrDescription.equals("")) {
                        if (Tag == RequestHealthConstants.RevisedCHIQuotation) {
                            try {
//                                customprogress.hideProgressBar();
                                JSONObject CustomerJsonObject = RootJsonObject.getJSONObject("Customer");
                                PosPolicyNo = CustomerJsonObject.getString("PosPolicyNo");
                                JSONObject ProductJsonObject = RootJsonObject.getJSONObject("Product");
                                JSONObject PremiumCalculationJsonObject = ProductJsonObject.getJSONObject("PremiumCalculation");
                                JSONObject RisksJsonObject = ProductJsonObject.getJSONObject("Risks");
                                JSONObject newRisksJsonObject = RisksJsonObject.getJSONObject("Risk");
                                JSONObject RisksDataJsonObject = newRisksJsonObject.getJSONObject("RisksData");
                                JSONObject InsuredDetailsJsonObject = RisksDataJsonObject.getJSONObject("InsuredDetails");
                                JSONObject OtherDiscountsJsonObject = RisksDataJsonObject.getJSONObject("OtherDiscounts");
                                InsuredDetailsGroupArray1 = InsuredDetailsJsonObject.getJSONArray("InsuredDetailsGroup");
                                String strTotalPremium1 = PremiumCalculationJsonObject.getString("TotalPremium");
                                NetPremium = PremiumCalculationJsonObject.getString("NetPremium");
                                String CGST = PremiumCalculationJsonObject.getString("CGST");
                                String SGST = PremiumCalculationJsonObject.getString("SGST");
                                String UGST = PremiumCalculationJsonObject.getString("UGST");
                                String IGST = PremiumCalculationJsonObject.getString("IGST");

                                GSt = String.valueOf(Double.parseDouble(CGST) + Double.parseDouble(SGST) + Double.parseDouble(UGST) + Double.parseDouble(IGST));
                                JSONArray OtherDiscountsJsonArray = OtherDiscountsJsonObject.getJSONArray("OtherDiscountGroup");
                                for (int j = 0; j < OtherDiscountsJsonArray.length(); j++) {
                                    JSONObject OtherDiscountsObject = OtherDiscountsJsonArray.getJSONObject(j);
                                    String DescriptionName = OtherDiscountsObject.getString("Description");
                                    if (DescriptionName.equals("Direct Policy Discount")) {
                                        DirectPolicyDiscountPremium = OtherDiscountsObject.getString("Premium");
                                    } else if (DescriptionName.equals("Co-payment")) {
                                        doubleCoPaymentDiscountPremium = Double.parseDouble(OtherDiscountsObject.getString("Premium"));
                                        if (checkPackage.equals("PackageFive")) {
                                            CoPaymentDiscountPremium = OtherDiscountsObject.getString("Premium");
                                        }
                                    } else if (DescriptionName.equals("Long term discount")) {
                                        LongTermDiscountDiscountPremium = Double.parseDouble(OtherDiscountsObject.getString("Premium"));
                                    } else if (DescriptionName.equals("Loyalty Discount")) {
                                        LoyaltyDiscountPremium = Double.parseDouble(OtherDiscountsObject.getString("Premium"));
                                    } else if (DescriptionName.equals("Sub Category Discount")) {
                                        SubCategoryDiscountPremium = Double.parseDouble(OtherDiscountsObject.getString("Premium"));
                                        if (checkPackage.equals("PackageFive")) {
                                            SubCategoryDiscountPremium1 = OtherDiscountsObject.getString("Premium");
                                        }
                                    } else if (DescriptionName.equals("Organ Donor Discount")) {
                                        OrganDonorDiscountPremium = Double.parseDouble(OtherDiscountsObject.getString("Premium"));
                                    } else if (DescriptionName.equals("Treatment only in tiered network")) {
                                        doubleTiredTreatment = Double.parseDouble(OtherDiscountsObject.getString("Premium"));
                                        if (checkPackage.equals("PackageFive")) {
                                            TreatmentPremium = OtherDiscountsObject.getString("Premium");
                                        }
                                    }

                                    Discounts = doubleCoPaymentDiscountPremium + LongTermDiscountDiscountPremium + LoyaltyDiscountPremium + SubCategoryDiscountPremium + OrganDonorDiscountPremium + doubleTiredTreatment;
                                    Log.e("Discounts", String.valueOf(Discounts));
                                }
                                for (int k = 0; k < InsuredDetailsGroupArray1.length(); k++) {
                                    if (str_policyType_spinner.equals("Individual")) {
                                        JSONObject CoverDetailsJsonObject = InsuredDetailsGroupArray1.getJSONObject(0).getJSONObject("CoverDetails");
                                        Log.e("CoverDetailsJsonObject", CoverDetailsJsonObject.toString());
                                        JSONArray CoversArray = CoverDetailsJsonObject.getJSONArray("Covers");
                                        Log.e("CoversArray", String.valueOf(CoversArray));
                                        for (int l = 0; l < CoversArray.length(); l++) {
                                            JSONObject JsonObjectCover = CoversArray.getJSONObject(l);
                                            String CoverName = JsonObjectCover.getString("CoverGroups");
                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                BasicInsuranceCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                Log.e("BasicInsuranceCoverPremium1", String.valueOf(BasicInsuranceCoverPremium1));
                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                PersonalAccidentCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageOne") || checkPackage.equals("PackageTwo") || checkPackage.equals("PackageThree") || checkPackage.equals("PackageFour")) {
                                                    PersonalAccidentCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                                Log.e("PersonalAccidentCoverPremium1", String.valueOf(PersonalAccidentCoverPremium1));
                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                CriticalIllnessCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageFour")) {
                                                    CriticalIllnessCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                                Log.e("CriticalIllnessCoverPremium1", String.valueOf(CriticalIllnessCoverPremium1));
                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                DailyHospitalCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageFour")) {
                                                    DailyHospitalCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                                Log.e("DailyHospitalCoverPremium1", String.valueOf(DailyHospitalCoverPremium1));
                                            } else if (CoverName.equals("Modern Treatments")) {
                                                ModernTreatmentCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageTwo") || checkPackage.equals("PackageFour")) {
                                                    ModernTreatmentCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                                Log.e("ModernTreatmentCoverPremium1", String.valueOf(ModernTreatmentCoverPremium1));
                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                ExtensionPreHospitalizationCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageOne")) {
                                                    ExtensionPreHospitalizationCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                                Log.e("ExtensionPreHospitalizationCoverPremium1", String.valueOf(ExtensionPreHospitalizationCoverPremium1));
                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                ExtensionProHospitalizationCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageOne")) {
                                                    ExtensionProHospitalizationCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                                Log.e("ExtensionProHospitalizationCoverPremium1", String.valueOf(ExtensionProHospitalizationCoverPremium1));
                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                MaternityChildcareCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
//                                            MaternityChildcareCoverPremium=JsonObjectCover.getString("CoverPremium");
                                                Log.e("MaternityChildcareCoverPremium1", String.valueOf(MaternityChildcareCoverPremium1));
                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                CoverageNonMedicalCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageThree")) {
                                                    CoverageNonMedicalCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                ConditionWaiverCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageOne") || checkPackage.equals("PackageTwo") || checkPackage.equals("PackageThree") || checkPackage.equals("PackageFour")) {
                                                    ConditionWaiverCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                PreExistingDiseaseCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
//                                            PreExistingDiseaseCoverPremium=JsonObjectCover.getString("CoverPremium");
                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                OutpatientDentalCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
//                                            OutpatientDentalCoverPremium= JsonObjectCover.getString("CoverPremium");
                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                EmergencyTravellingCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
//                                            EmergencyTravellingCoverPremium=JsonObjectCover.getString("CoverPremium");

                                            } else if (CoverName.equals("Second Opinion")) {
                                                SecondOpinionCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageTwo")) {
                                                    SecondOpinionCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                RestCureCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
//                                            RestCureCoverPremium=JsonObjectCover.getString("CoverPremium");
                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                ObesityWeightCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
//                                            ObesityWeightCoverPremium= JsonObjectCover.getString("CoverPremium");
                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                SterilityInfertilityCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
//                                            SterilityInfertilityCoverPremium=JsonObjectCover.getString("CoverPremium");
                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                EnhancedCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageThree")) {
                                                    EnhancedCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                            } else if (CoverName.equals("Premium Waiver")) {
                                                PremiumWaiverCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageTwo")) {
                                                    PremiumWaiverCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                            } else if (CoverName.equals("Global Cover")) {
                                                GlobalCoverCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
//                                            GlobalCoverCoverPremium=JsonObjectCover.getString("CoverPremium");
                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                MedicallyAdvisedCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageThree")) {
                                                    MedicallyAdvisedCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                                Log.e("MedicallyAdvisedCoverPremium1", String.valueOf(MedicallyAdvisedCoverPremium1));
                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                EmergencyAssistanceCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageOne") || checkPackage.equals("PackageTwo")) {
                                                    EmergencyAssistanceCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                                Log.e("EmergencyAssistanceCoverPremium1", String.valueOf(EmergencyAssistanceCoverPremium1));
                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                HomeCareCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageThree")) {
                                                    HomeCareCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }
                                                Log.e("HomeCareCoverPremium1", String.valueOf(HomeCareCoverPremium1));
                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                WellnessBenefitCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                                                if (checkPackage.equals("PackageOne") || checkPackage.equals("PackageFive")) {
                                                    WellnessBenefitCoverPremium = JsonObjectCover.getString("CoverPremium");
                                                }

                                                Log.e("WellnessBenefitCoverPremium1", String.valueOf(WellnessBenefitCoverPremium1));
                                            } else if (CoverName.equals("Disease Management Program")) {
                                                DiseaseManagementCoverPremium1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
//                                            DiseaseManagementCoverPremium= JsonObjectCover.getString("CoverPremium");
                                                Log.e("DiseaseManagementCoverPremium1", String.valueOf(DiseaseManagementCoverPremium1));
                                            }
                                            strBasicPremium = String.valueOf(BasicInsuranceCoverPremium1);
                                            double addonsNew;
                                            addonsNew = PersonalAccidentCoverPremium1 + CriticalIllnessCoverPremium1 + DailyHospitalCoverPremium1 + ModernTreatmentCoverPremium1 + ExtensionPreHospitalizationCoverPremium1 + ExtensionProHospitalizationCoverPremium1 + MaternityChildcareCoverPremium1 + CoverageNonMedicalCoverPremium1 + ConditionWaiverCoverPremium1 + PreExistingDiseaseCoverPremium1 + OutpatientDentalCoverPremium1 + EmergencyTravellingCoverPremium1 + SecondOpinionCoverPremium1 + RestCureCoverPremium1 + ObesityWeightCoverPremium1 + SterilityInfertilityCoverPremium1 + EnhancedCoverPremium1 + PremiumWaiverCoverPremium1 + GlobalCoverCoverPremium1 + MedicallyAdvisedCoverPremium1 + EmergencyAssistanceCoverPremium1 + HomeCareCoverPremium1 + WellnessBenefitCoverPremium1 + DiseaseManagementCoverPremium1;
                                            addons= (int) addonsNew;
                                            Log.e("addons", String.valueOf(addons));

                                            if (checkPackage.equals("PackageOne")) {
                                                //PackageOne
                                                ConditionWaiverPackageOne.setText(ConditionWaiverCoverPremium);
                                                ExtensionPreHospitalizationPackageOne.setText(ExtensionPreHospitalizationCoverPremium);
                                                ExtensionProHospitalizationPackageOne.setText(ExtensionProHospitalizationCoverPremium);
                                                EmergencyAssistancePackageOe.setText(EmergencyAssistanceCoverPremium);
                                                PersonalAccidentPackageOne.setText(PersonalAccidentCoverPremium);
                                                WellnessBenefitPackageOne.setText(WellnessBenefitCoverPremium);
                                                double doubleTotalPremium = ConditionWaiverCoverPremium1 + ExtensionPreHospitalizationCoverPremium1 + ExtensionProHospitalizationCoverPremium1 + EmergencyAssistanceCoverPremium1 + PersonalAccidentCoverPremium1 + WellnessBenefitCoverPremium1;
                                                sumPremiumPackageOne = valueOf(Math.round(doubleTotalPremium * 100.0) / 100.0);
                                                TotalPremiumPackageOne.setText(sumPremiumPackageOne);
                                            } else if (checkPackage.equals("PackageTwo")) {
                                                //PackageTwo
                                                ConditionWaiverPackageTwo.setText(ConditionWaiverCoverPremium);
                                                PremiumWaiverPackageTwo.setText(PremiumWaiverCoverPremium);
                                                SecondOpinionPackageTwo.setText(SecondOpinionCoverPremium);
                                                PersonalAccidentPackageTwo.setText(PersonalAccidentCoverPremium);
                                                EmergencyAssistancePackageTwo.setText(EmergencyAssistanceCoverPremium);
                                                ModernTreatments.setText(ModernTreatmentCoverPremium);
                                                double doubleTotalPremiumTwo = ConditionWaiverCoverPremium1 + PremiumWaiverCoverPremium1 + SecondOpinionCoverPremium1 + PersonalAccidentCoverPremium1 + EmergencyAssistanceCoverPremium1 + ModernTreatmentCoverPremium1;
                                                sumPremiumPackageTwo = valueOf(Math.round(doubleTotalPremiumTwo * 100.0) / 100.0);
                                                SumPremiumPackageTwo.setText(sumPremiumPackageTwo);

                                            } else if (checkPackage.equals("PackageThree")) {
                                                //PackageThree
                                                ConditionWaiverPackageThree.setText(ConditionWaiverCoverPremium);
                                                NonMedicalPackageThree.setText(CoverageNonMedicalCoverPremium);
                                                MedicallyAdvisedPackageThree.setText(MedicallyAdvisedCoverPremium);
                                                EnhancedOrganPackageThree.setText(EnhancedCoverPremium);
                                                PersonalAccidentPackageThree.setText(PersonalAccidentCoverPremium);
                                                HomeCarePackageThree.setText(HomeCareCoverPremium);

                                                double doubleTotalPremiumThree = ConditionWaiverCoverPremium1 + CoverageNonMedicalCoverPremium1 + MedicallyAdvisedCoverPremium1 + EnhancedCoverPremium1 + PersonalAccidentCoverPremium1 + HomeCareCoverPremium1;
                                                sumPremiumPackageThree = valueOf(Math.round(doubleTotalPremiumThree * 100.0) / 100.0);
                                                SumPremiumPackageThree.setText(sumPremiumPackageThree);
                                            } else if (checkPackage.equals("PackageFour")) {
                                                //PackageFour
                                                ConditionWaiverPackageFour.setText(ConditionWaiverCoverPremium);
                                                PersonalAccidentPackageFour.setText(PersonalAccidentCoverPremium);
                                                CriticalIllnessPackageFour.setText(CriticalIllnessCoverPremium);
                                                ModernTreatmentPackageFour.setText(ModernTreatmentCoverPremium);
                                                HospitalDailyCashPackageFour.setText(DailyHospitalCoverPremium);
                                                double doubleTotalPremiumFour = ConditionWaiverCoverPremium1 + PersonalAccidentCoverPremium1 + CriticalIllnessCoverPremium1 + ModernTreatmentCoverPremium1 + DailyHospitalCoverPremium1;
                                                sumPremiumPackageFour = valueOf(Math.round(doubleTotalPremiumFour * 100.0) / 100.0);
                                                SumPremiumPackageFour.setText(sumPremiumPackageFour);

                                            } else if (checkPackage.equals("PackageFive")) {
                                                //PackageFive
                                                TreatmentTiredNetworkPackageFive.setText(TreatmentPremium);
                                                SubLimitPackageFive.setText(SubCategoryDiscountPremium1);
                                                CoPaymentPackageFive.setText(CoPaymentDiscountPremium);
                                                WellnessBenefitPackageFive.setText(WellnessBenefitCoverPremium);
                                                double doubleTotalPremiumFive = Double.parseDouble(TreatmentPremium) + Double.parseDouble(SubCategoryDiscountPremium1) + Double.parseDouble(CoPaymentDiscountPremium) + WellnessBenefitCoverPremium1;
                                                sumPremiumPackageFive = String.format("%.2f", doubleTotalPremiumFive);
                                                SumPremiumPackageFive.setText(sumPremiumPackageFive);

                                            }
                                        }
                                    }
                                    else {
                                        if (strCheckBoxSelf.equals("Checked") && strCheckBoxSpouse.equals("Checked")) {
                                            FirstAdult();
                                            SecondAdult();
                                            if (mCounter == 1) {
                                                ChildOneTwoAdult();
                                                if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray1.getJSONObject(3).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayM.length(); l++) {
                                                        JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        }

                                                    }
                                                    if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(4).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }
                                                    }
                                                    } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(3).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayF.length(); l++) {
                                                        JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        }

                                                    }

                                                }
                                            }
                                            else if (mCounter == 2) {
                                                ChildOneTwoAdult();
                                                childTwoAdult();
                                                if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray1.getJSONObject(4).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayM.length(); l++) {
                                                        JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        }

                                                    }
                                                    if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(5).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }
                                                    }
                                                } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(4).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayF.length(); l++) {
                                                        JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        }

                                                    }

                                                }
                                            }
                                            else if (mCounter == 3) {
                                                ChildOneTwoAdult();
                                                childTwoAdult();
                                                childThreeAdult();
                                                if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray1.getJSONObject(5).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayM.length(); l++) {
                                                        JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        }

                                                    }
                                                } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(5).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayF.length(); l++) {
                                                        JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        }

                                                    }

                                                }
                                            }
                                            else if (mCounter == 4) {
                                                ChildOneTwoAdult();
                                                childTwoAdult();
                                                childThreeAdult();
                                                childFourAdult();
                                            }
                                            else {
                                                if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray1.getJSONObject(2).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayM.length(); l++) {
                                                        JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                        }

                                                    }
                                                    if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(3).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }
                                                    }
                                                } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                    JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(2).getJSONObject("CoverDetails");
                                                    JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                    for (int l = 0; l < CoversArrayF.length(); l++) {
                                                        JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                        String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                        if (CoverName.equals("Basic Insurance Cover")) {
                                                            BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Personal Accident Cover")) {
                                                            PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Critical Illness Cover")) {
                                                            CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                            DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Modern Treatments")) {
                                                            ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                            ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                            ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                            MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                            CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                            ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                            PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                            OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                            EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Second Opinion")) {
                                                            SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                            RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                            ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                            SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                            EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Premium Waiver")) {
                                                            PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Global Cover")) {
                                                            GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                            MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Emergency Assistance Service")) {
                                                            EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Home Care Treatment")) {
                                                            HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Wellness Benefit")) {
                                                            WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        } else if (CoverName.equals("Disease Management Program")) {
                                                            DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                        }

                                                    }

                                                }
                                            }
                                            if (selectYearAdult > selectYearSecondAdult) {
                                                BasicPremiumAdd = BasicInsuranceCoverPremiumAd1 + BasicInsuranceCoverPremiumM + BasicInsuranceCoverPremiumF;
                                            } else if (selectYearAdult < selectYearSecondAdult) {
                                                BasicPremiumAdd = BasicInsuranceCoverPremiumAd2 + BasicInsuranceCoverPremiumM + BasicInsuranceCoverPremiumF;
                                            } else {
                                                BasicPremiumAdd = BasicInsuranceCoverPremiumAd1 + BasicInsuranceCoverPremiumM + BasicInsuranceCoverPremiumF;
                                            }
                                        } else {
                                            if (strCheckBoxSelf.equals("Checked") || strCheckBoxSpouse.equals("Checked")) {
                                                FirstAdult();
                                                if (mCounter == 1) {
                                                    childOne();
                                                    if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray1.getJSONObject(2).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayM.length(); l++) {
                                                            JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            }

                                                        }
                                                        if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                            JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(3).getJSONObject("CoverDetails");
                                                            JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                            for (int l = 0; l < CoversArrayF.length(); l++) {
                                                                JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                                String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                                if (CoverName.equals("Basic Insurance Cover")) {
                                                                    BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Personal Accident Cover")) {
                                                                    PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Critical Illness Cover")) {
                                                                    CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                    DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Modern Treatments")) {
                                                                    ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                    ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                    ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                    MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                    CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                    ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                    PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                    OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                    EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Second Opinion")) {
                                                                    SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                    RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                    ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                    SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                    EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Premium Waiver")) {
                                                                    PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Global Cover")) {
                                                                    GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                    MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                    EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Home Care Treatment")) {
                                                                    HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Wellness Benefit")) {
                                                                    WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Disease Management Program")) {
                                                                    DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                }

                                                            }
                                                        }
                                                    } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(2).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }

                                                    }
                                                } else if (mCounter == 2) {
                                                    childOne();
                                                    childTwo();

                                                    if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray1.getJSONObject(3).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayM.length(); l++) {
                                                            JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            }

                                                        }
                                                        if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                            JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(4).getJSONObject("CoverDetails");
                                                            JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                            for (int l = 0; l < CoversArrayF.length(); l++) {
                                                                JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                                String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                                if (CoverName.equals("Basic Insurance Cover")) {
                                                                    BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Personal Accident Cover")) {
                                                                    PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Critical Illness Cover")) {
                                                                    CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                    DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Modern Treatments")) {
                                                                    ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                    ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                    ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                    MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                    CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                    ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                    PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                    OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                    EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Second Opinion")) {
                                                                    SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                    RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                    ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                    SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                    EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Premium Waiver")) {
                                                                    PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Global Cover")) {
                                                                    GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                    MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                    EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Home Care Treatment")) {
                                                                    HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Wellness Benefit")) {
                                                                    WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Disease Management Program")) {
                                                                    DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                }

                                                            }
                                                        }
                                                    } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(3).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }

                                                    }
                                                } else if (mCounter == 3) {
                                                    childOne();
                                                    childTwo();
                                                    childThree();
                                                    if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray1.getJSONObject(4).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayM.length(); l++) {
                                                            JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            }

                                                        }
                                                        if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                            JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(5).getJSONObject("CoverDetails");
                                                            JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                            for (int l = 0; l < CoversArrayF.length(); l++) {
                                                                JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                                String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                                if (CoverName.equals("Basic Insurance Cover")) {
                                                                    BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Personal Accident Cover")) {
                                                                    PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Critical Illness Cover")) {
                                                                    CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                    DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Modern Treatments")) {
                                                                    ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                    ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                    ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                    MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                    CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                    ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                    PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                    OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                    EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Second Opinion")) {
                                                                    SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                    RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                    ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                    SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                    EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Premium Waiver")) {
                                                                    PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Global Cover")) {
                                                                    GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                    MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                    EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Home Care Treatment")) {
                                                                    HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Wellness Benefit")) {
                                                                    WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Disease Management Program")) {
                                                                    DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                }

                                                            }
                                                        }
                                                    } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(4).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }

                                                    }
                                                } else if (mCounter == 4) {
                                                    childOne();
                                                    childTwo();
                                                    childThree();
                                                    childFour();
                                                    if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray1.getJSONObject(5).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayM.length(); l++) {
                                                            JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            }

                                                        }
                                                    } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(5).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }

                                                    }
                                                } else {
                                                    if (strCheckBoxMother.equals("Checked") || strCheckBoxMotherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectMother = InsuredDetailsGroupArray1.getJSONObject(1).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayM = CoverDetailsJsonObjectMother.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayM.length(); l++) {
                                                            JSONObject JsonObjectCoverM = CoversArrayM.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverM.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumM = Double.parseDouble(JsonObjectCoverM.getString("CoverPremium"));
                                                            }

                                                        }
                                                        if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                            JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(2).getJSONObject("CoverDetails");
                                                            JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                            for (int l = 0; l < CoversArrayF.length(); l++) {
                                                                JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                                String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                                if (CoverName.equals("Basic Insurance Cover")) {
                                                                    BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Personal Accident Cover")) {
                                                                    PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Critical Illness Cover")) {
                                                                    CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                    DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Modern Treatments")) {
                                                                    ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                    ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                    ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                    MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                    CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                    ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                    PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                    OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                    EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Second Opinion")) {
                                                                    SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                    RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                    ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                    SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                    EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Premium Waiver")) {
                                                                    PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Global Cover")) {
                                                                    GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                    MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                    EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Home Care Treatment")) {
                                                                    HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Wellness Benefit")) {
                                                                    WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                } else if (CoverName.equals("Disease Management Program")) {
                                                                    DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                                }

                                                            }
                                                        }
                                                    } else if (strCheckBoxFather.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                                                        JSONObject CoverDetailsJsonObjectF = InsuredDetailsGroupArray1.getJSONObject(1).getJSONObject("CoverDetails");
                                                        JSONArray CoversArrayF = CoverDetailsJsonObjectF.getJSONArray("Covers");
                                                        for (int l = 0; l < CoversArrayF.length(); l++) {
                                                            JSONObject JsonObjectCoverF = CoversArrayF.getJSONObject(l);
                                                            String CoverName = JsonObjectCoverF.getString("CoverGroups");
                                                            if (CoverName.equals("Basic Insurance Cover")) {
                                                                BasicInsuranceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Personal Accident Cover")) {
                                                                PersonalAccidentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Critical Illness Cover")) {
                                                                CriticalIllnessCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                                                                DailyHospitalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Modern Treatments")) {
                                                                ModernTreatmentCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                                                                ExtensionPreHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                                                                ExtensionProHospitalizationCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                                                                MaternityChildcareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                                                                CoverageNonMedicalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                                                                ConditionWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                                                                PreExistingDiseaseCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                                                                OutpatientDentalCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Travelling Allowance")) {
                                                                EmergencyTravellingCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Second Opinion")) {
                                                                SecondOpinionCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                                                                RestCureCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                                                                ObesityWeightCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                                                                SterilityInfertilityCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                                                                EnhancedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Premium Waiver")) {
                                                                PremiumWaiverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Global Cover")) {
                                                                GlobalCoverCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Medically Advised Support Devices")) {
                                                                MedicallyAdvisedCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Emergency Assistance Service")) {
                                                                EmergencyAssistanceCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Home Care Treatment")) {
                                                                HomeCareCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Wellness Benefit")) {
                                                                WellnessBenefitCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            } else if (CoverName.equals("Disease Management Program")) {
                                                                DiseaseManagementCoverPremiumF = Double.parseDouble(JsonObjectCoverF.getString("CoverPremium"));
                                                            }

                                                        }

                                                    }
                                                }
                                                BasicPremiumAdd = BasicInsuranceCoverPremiumAd1 + BasicInsuranceCoverPremiumM + BasicInsuranceCoverPremiumF;
                                            }
                                        }
                                        conditionAdd = ConditionWaiverCoverPremiumAd1 + ConditionWaiverCoverPremiumAd2 + ConditionWaiverCoverPremiumCh1 + ConditionWaiverCoverPremiumCh2 + ConditionWaiverCoverPremiumCh3 + ConditionWaiverCoverPremiumCh4 + ConditionWaiverCoverPremiumM + ConditionWaiverCoverPremiumF;
                                        ExtensionPreAdd = ExtensionPreHospitalizationCoverPremiumAd1 + ExtensionPreHospitalizationCoverPremiumAd2 + ExtensionPreHospitalizationCoverPremiumCh1 + ExtensionPreHospitalizationCoverPremiumCh2 + ExtensionPreHospitalizationCoverPremiumCh3 + ExtensionPreHospitalizationCoverPremiumCh4 + ExtensionPreHospitalizationCoverPremiumM + ExtensionPreHospitalizationCoverPremiumF;
                                        ExtensionProAdd = ExtensionProHospitalizationCoverPremiumAd1 + ExtensionProHospitalizationCoverPremiumAd2 + ExtensionProHospitalizationCoverPremiumCh1 + ExtensionProHospitalizationCoverPremiumCh2 + ExtensionProHospitalizationCoverPremiumCh3 + ExtensionProHospitalizationCoverPremiumCh4 + ExtensionProHospitalizationCoverPremiumM + ExtensionProHospitalizationCoverPremiumF;
                                        EmergencyAdd = EmergencyAssistanceCoverPremiumAd1 + EmergencyAssistanceCoverPremiumAd2 + EmergencyAssistanceCoverPremiumCh1 + EmergencyAssistanceCoverPremiumCh2 + EmergencyAssistanceCoverPremiumCh3 + EmergencyAssistanceCoverPremiumCh4 + EmergencyAssistanceCoverPremiumM + EmergencyAssistanceCoverPremiumF;
                                        PersonalAccidentAdd = PersonalAccidentCoverPremiumAd1 + PersonalAccidentCoverPremiumAd2 + PersonalAccidentCoverPremiumCh1 + PersonalAccidentCoverPremiumCh2 + PersonalAccidentCoverPremiumCh3 + PersonalAccidentCoverPremiumCh4 + PersonalAccidentCoverPremiumM + PersonalAccidentCoverPremiumF;
                                        WellnessAdd = WellnessBenefitCoverPremiumAd1 + WellnessBenefitCoverPremiumAd2 + WellnessBenefitCoverPremiumCh1 + WellnessBenefitCoverPremiumCh2 + WellnessBenefitCoverPremiumCh3 + WellnessBenefitCoverPremiumCh4 + WellnessBenefitCoverPremiumM + WellnessBenefitCoverPremiumF;
                                        PewmiumWaiverAdd = PremiumWaiverCoverPremiumAd1 + PremiumWaiverCoverPremiumAd2 + PremiumWaiverCoverPremiumCh1 + PremiumWaiverCoverPremiumCh2 + PremiumWaiverCoverPremiumCh3 + PremiumWaiverCoverPremiumCh4 + PremiumWaiverCoverPremiumM + PremiumWaiverCoverPremiumF;
                                        SecondOpinionAdd = SecondOpinionCoverPremiumAd1 + SecondOpinionCoverPremiumAd2 + SecondOpinionCoverPremiumCh1 + SecondOpinionCoverPremiumCh2 + SecondOpinionCoverPremiumCh3 + SecondOpinionCoverPremiumCh4 + SecondOpinionCoverPremiumM + SecondOpinionCoverPremiumF;
                                        ModernTreatAdd = ModernTreatmentCoverPremiumAd1 + ModernTreatmentCoverPremiumAd2 + ModernTreatmentCoverPremiumCh1 + ModernTreatmentCoverPremiumCh2 + ModernTreatmentCoverPremiumCh3 + ModernTreatmentCoverPremiumCh4 + ModernTreatmentCoverPremiumM + ModernTreatmentCoverPremiumF;
                                        CoverageNonAdd = CoverageNonMedicalCoverPremiumAd1 + CoverageNonMedicalCoverPremiumAd2 + CoverageNonMedicalCoverPremiumCh1 + CoverageNonMedicalCoverPremiumCh2 + CoverageNonMedicalCoverPremiumCh3 + CoverageNonMedicalCoverPremiumCh4 + CoverageNonMedicalCoverPremiumM + CoverageNonMedicalCoverPremiumF;
                                        MedicallyAdvisedAdd = MedicallyAdvisedCoverPremiumAd1 + MedicallyAdvisedCoverPremiumAd2 + MedicallyAdvisedCoverPremiumCh1 + MedicallyAdvisedCoverPremiumCh2 + MedicallyAdvisedCoverPremiumCh3 + MedicallyAdvisedCoverPremiumCh4 + MedicallyAdvisedCoverPremiumM + MedicallyAdvisedCoverPremiumF;
                                        EnhancedAdd = EnhancedCoverPremiumAd1 + EnhancedCoverPremiumAd2 + EnhancedCoverPremiumCh1 + EnhancedCoverPremiumCh2 + EnhancedCoverPremiumCh3 + EnhancedCoverPremiumCh4 + EnhancedCoverPremiumM + EnhancedCoverPremiumF;
                                        HomeCareAdd = HomeCareCoverPremiumAd1 + HomeCareCoverPremiumAd2 + HomeCareCoverPremiumCh1 + HomeCareCoverPremiumCh2 + HomeCareCoverPremiumCh3 + HomeCareCoverPremiumCh4 + HomeCareCoverPremiumM + HomeCareCoverPremiumF;
                                        CriticalAdd = CriticalIllnessCoverPremiumAd1 + CriticalIllnessCoverPremiumAd2 + CriticalIllnessCoverPremiumCh1 + CriticalIllnessCoverPremiumCh2 + CriticalIllnessCoverPremiumCh3 + CriticalIllnessCoverPremiumCh4 + CriticalIllnessCoverPremiumM + CriticalIllnessCoverPremiumF;
                                        DailyCashAdd = DailyHospitalCoverPremiumAd1 + DailyHospitalCoverPremiumAd2 + DailyHospitalCoverPremiumCh1 + DailyHospitalCoverPremiumCh2 + DailyHospitalCoverPremiumCh3 + DailyHospitalCoverPremiumCh4 + DailyHospitalCoverPremiumM + DailyHospitalCoverPremiumF;
                                        OutpatientDentalAdd = OutpatientDentalCoverPremiumAd1 + OutpatientDentalCoverPremiumAd2 + OutpatientDentalCoverPremiumCh1 + OutpatientDentalCoverPremiumCh2 + OutpatientDentalCoverPremiumCh3 + OutpatientDentalCoverPremiumCh4 + OutpatientDentalCoverPremiumM + OutpatientDentalCoverPremiumF;
                                        EmergencyTravellingAdd = EmergencyTravellingCoverPremiumAd1 + EmergencyTravellingCoverPremiumAd2 + EmergencyTravellingCoverPremiumCh1 + EmergencyTravellingCoverPremiumCh2 + EmergencyTravellingCoverPremiumCh3 + EmergencyTravellingCoverPremiumCh4 + EmergencyTravellingCoverPremiumM + EmergencyTravellingCoverPremiumF;
                                        PreExistingAdd = PreExistingDiseaseCoverPremiumAd1 + PreExistingDiseaseCoverPremiumAd2 + PreExistingDiseaseCoverPremiumCh1 + PreExistingDiseaseCoverPremiumCh2 + PreExistingDiseaseCoverPremiumCh3 + PreExistingDiseaseCoverPremiumCh4 + PreExistingDiseaseCoverPremiumM + PreExistingDiseaseCoverPremiumF;
                                        MaternityAdd = MaternityChildcareCoverPremiumAd1 + MaternityChildcareCoverPremiumAd2 + MaternityChildcareCoverPremiumCh1 + MaternityChildcareCoverPremiumCh2 + MaternityChildcareCoverPremiumCh3 + MaternityChildcareCoverPremiumCh4 + MaternityChildcareCoverPremiumM + MaternityChildcareCoverPremiumF;
                                        RestCureAdd = RestCureCoverPremiumAd1 + RestCureCoverPremiumAd2 + RestCureCoverPremiumCh1 + RestCureCoverPremiumCh2 + RestCureCoverPremiumCh3 + RestCureCoverPremiumCh4 + RestCureCoverPremiumM + RestCureCoverPremiumF;
                                        SterilityAdd = SterilityInfertilityCoverPremiumAd1 + SterilityInfertilityCoverPremiumAd2 + SterilityInfertilityCoverPremiumCh1 + SterilityInfertilityCoverPremiumCh2 + SterilityInfertilityCoverPremiumCh3 + SterilityInfertilityCoverPremiumCh4 + SterilityInfertilityCoverPremiumM + SterilityInfertilityCoverPremiumF;
                                        GlobalAdd = GlobalCoverCoverPremiumAd1 + GlobalCoverCoverPremiumAd2 + GlobalCoverCoverPremiumCh1 + GlobalCoverCoverPremiumCh2 + GlobalCoverCoverPremiumCh3 + GlobalCoverCoverPremiumCh4 + GlobalCoverCoverPremiumM + GlobalCoverCoverPremiumF;
                                        ObesityWeightAdd = ObesityWeightCoverPremiumAd1 + ObesityWeightCoverPremiumAd2 + ObesityWeightCoverPremiumCh1 + ObesityWeightCoverPremiumCh2 + ObesityWeightCoverPremiumCh3 + ObesityWeightCoverPremiumCh4 + ObesityWeightCoverPremiumM + ObesityWeightCoverPremiumF;
                                        DiseaseManagementAdd = DiseaseManagementCoverPremiumAd1 + DiseaseManagementCoverPremiumAd2 + DiseaseManagementCoverPremiumCh1 + DiseaseManagementCoverPremiumCh2 + DiseaseManagementCoverPremiumCh3 + DiseaseManagementCoverPremiumCh4 + DiseaseManagementCoverPremiumM + DiseaseManagementCoverPremiumF;
                                        strBasicPremium = String.valueOf(BasicPremiumAdd);
                                        double addonsNew;
                                        addonsNew = PersonalAccidentAdd + CriticalAdd + DailyCashAdd + ModernTreatAdd + ExtensionPreAdd + ExtensionProAdd + MaternityAdd + CoverageNonAdd + conditionAdd + PreExistingAdd + OutpatientDentalAdd + EmergencyTravellingAdd + SecondOpinionAdd + RestCureAdd + HomeCareAdd + SterilityAdd + EnhancedAdd + PewmiumWaiverAdd + GlobalAdd + MedicallyAdvisedAdd + EmergencyAdd + ObesityWeightAdd + WellnessAdd + DiseaseManagementAdd;
                                        addons= (int) addonsNew;
                                        if (checkPackage.equals("PackageOne")) {
                                            ConditionWaiverCoverPremium = String.valueOf(conditionAdd);
                                            ExtensionPreHospitalizationCoverPremium = String.valueOf(ExtensionPreAdd);
                                            ExtensionProHospitalizationCoverPremium = String.valueOf(ExtensionProAdd);
                                            EmergencyAssistanceCoverPremium = String.valueOf(EmergencyAdd);
                                            PersonalAccidentCoverPremium = String.valueOf(PersonalAccidentAdd);
                                            WellnessBenefitCoverPremium = String.valueOf(WellnessAdd);
                                            //PackageOne
                                            ConditionWaiverPackageOne.setText(ConditionWaiverCoverPremium);
                                            ExtensionPreHospitalizationPackageOne.setText(ExtensionPreHospitalizationCoverPremium);
                                            ExtensionProHospitalizationPackageOne.setText(ExtensionProHospitalizationCoverPremium);
                                            EmergencyAssistancePackageOe.setText(EmergencyAssistanceCoverPremium);
                                            PersonalAccidentPackageOne.setText(PersonalAccidentCoverPremium);
                                            WellnessBenefitPackageOne.setText(WellnessBenefitCoverPremium);
                                            double doubleTotalPremium = conditionAdd + ExtensionPreAdd + ExtensionProAdd + EmergencyAdd + PersonalAccidentAdd + WellnessAdd;
                                            sumPremiumPackageOne = valueOf(Math.round(doubleTotalPremium * 100.0) / 100.0);
                                            TotalPremiumPackageOne.setText(sumPremiumPackageOne);
                                        } else if (checkPackage.equals("PackageTwo")) {
                                            ConditionWaiverCoverPremium = String.valueOf(conditionAdd);
                                            PremiumWaiverCoverPremium = String.valueOf(PewmiumWaiverAdd);
                                            SecondOpinionCoverPremium = String.valueOf(SecondOpinionAdd);
                                            EmergencyAssistanceCoverPremium = String.valueOf(EmergencyAdd);
                                            PersonalAccidentCoverPremium = String.valueOf(PersonalAccidentAdd);
                                            ModernTreatmentCoverPremium = String.valueOf(ModernTreatAdd);
                                            //PackageTwo
                                            ConditionWaiverPackageTwo.setText(ConditionWaiverCoverPremium);
                                            PremiumWaiverPackageTwo.setText(PremiumWaiverCoverPremium);
                                            SecondOpinionPackageTwo.setText(SecondOpinionCoverPremium);
                                            PersonalAccidentPackageTwo.setText(PersonalAccidentCoverPremium);
                                            EmergencyAssistancePackageTwo.setText(EmergencyAssistanceCoverPremium);
                                            ModernTreatments.setText(ModernTreatmentCoverPremium);
                                            double doubleTotalPremiumTwo = conditionAdd + PewmiumWaiverAdd + SecondOpinionAdd + EmergencyAdd + PersonalAccidentAdd + ModernTreatAdd;
                                            sumPremiumPackageTwo = valueOf(Math.round(doubleTotalPremiumTwo * 100.0) / 100.0);
                                            SumPremiumPackageTwo.setText(sumPremiumPackageTwo);

                                        } else if (checkPackage.equals("PackageThree")) {
                                            ConditionWaiverCoverPremium = String.valueOf(conditionAdd);
                                            CoverageNonMedicalCoverPremium = String.valueOf(CoverageNonAdd);
                                            MedicallyAdvisedCoverPremium = String.valueOf(MedicallyAdvisedAdd);
                                            EnhancedCoverPremium = String.valueOf(EnhancedAdd);
                                            PersonalAccidentCoverPremium = String.valueOf(PersonalAccidentAdd);
                                            HomeCareCoverPremium = String.valueOf(HomeCareAdd);
                                            //PackageThree
                                            ConditionWaiverPackageThree.setText(ConditionWaiverCoverPremium);
                                            NonMedicalPackageThree.setText(CoverageNonMedicalCoverPremium);
                                            MedicallyAdvisedPackageThree.setText(MedicallyAdvisedCoverPremium);
                                            EnhancedOrganPackageThree.setText(EnhancedCoverPremium);
                                            PersonalAccidentPackageThree.setText(PersonalAccidentCoverPremium);
                                            HomeCarePackageThree.setText(HomeCareCoverPremium);

                                            double doubleTotalPremiumThree = conditionAdd + CoverageNonAdd + MedicallyAdvisedAdd + EnhancedAdd + PersonalAccidentAdd + HomeCareAdd;
                                            sumPremiumPackageThree = valueOf(Math.round(doubleTotalPremiumThree * 100.0) / 100.0);
                                            SumPremiumPackageThree.setText(sumPremiumPackageThree);
                                        } else if (checkPackage.equals("PackageFour")) {
                                            ConditionWaiverCoverPremium = String.valueOf(conditionAdd);
                                            CriticalIllnessCoverPremium = String.valueOf(CriticalAdd);
                                            DailyHospitalCoverPremium = String.valueOf(DailyCashAdd);
                                            PersonalAccidentCoverPremium = String.valueOf(PersonalAccidentAdd);
                                            ModernTreatmentCoverPremium = String.valueOf(ModernTreatAdd);
                                            //PackageFour
                                            ConditionWaiverPackageFour.setText(ConditionWaiverCoverPremium);
                                            PersonalAccidentPackageFour.setText(PersonalAccidentCoverPremium);
                                            CriticalIllnessPackageFour.setText(CriticalIllnessCoverPremium);
                                            ModernTreatmentPackageFour.setText(ModernTreatmentCoverPremium);
                                            HospitalDailyCashPackageFour.setText(DailyHospitalCoverPremium);
                                            double doubleTotalPremiumFour = ConditionWaiverCoverPremium1 + PersonalAccidentCoverPremium1 + CriticalAdd + ModernTreatmentCoverPremium1 + DailyCashAdd;
                                            sumPremiumPackageFour = valueOf(Math.round(doubleTotalPremiumFour * 100.0) / 100.0);
                                            SumPremiumPackageFour.setText(sumPremiumPackageFour);

                                        } else if (checkPackage.equals("PackageFive")) {
                                            WellnessBenefitCoverPremium = String.valueOf(WellnessAdd);
                                            //PackageFive
                                            TreatmentTiredNetworkPackageFive.setText(TreatmentPremium);
                                            SubLimitPackageFive.setText(SubCategoryDiscountPremium1);
                                            CoPaymentPackageFive.setText(CoPaymentDiscountPremium);
                                            WellnessBenefitPackageFive.setText(WellnessBenefitCoverPremium);
                                            double doubleTotalPremiumFive = Double.parseDouble(TreatmentPremium) + Double.parseDouble(SubCategoryDiscountPremium1) + Double.parseDouble(CoPaymentDiscountPremium) + WellnessAdd;
                                            sumPremiumPackageFive = String.format("%.2f", doubleTotalPremiumFive);
                                            SumPremiumPackageFive.setText(sumPremiumPackageFive);

                                        }
                                    }
                                }
                                double doubleTotalPremium1 = Double.parseDouble(strTotalPremium1);
                                double mathMainPremiumTotal = Math.round(doubleTotalPremium1 * 100.0) / 100.0;
                                strTotalPremium = String.valueOf(mathMainPremiumTotal);
                                TotalPremium.setText(strTotalPremium);
                            }
                            catch (JSONException e) {
                                e.printStackTrace();
                            }
                        }
                    } else {
//                        customprogress.hideProgressBar();
                        Toast.makeText(getApplication(), "" + ErrDescription, Toast.LENGTH_SHORT).show();
                    }

                }
                catch (JSONException e) {
                    e.printStackTrace();
                }

            }

            @Override
            public void onError(VolleyError error, int Tag) {

            }
        },
        RequestHealthConstants.RevisedCHIQuotation);
        Log.d("objectTotal", String.valueOf(object));
        req.execute();
    }
    private void FirstAdultTrue() {
        try {
            JSONObject CoverDetailsJsonObject = InsuredDetailsGroupArray.getJSONObject(0).getJSONObject("CoverDetails");
            JSONArray CoversArray = CoverDetailsJsonObject.getJSONArray("Covers");
            for (int l = 0; l < CoversArray.length(); l++) {
                JSONObject JsonObjectCover = CoversArray.getJSONObject(l);
                String CoverName = JsonObjectCover.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                    MaternityChildcareCoverPremium = JsonObjectCover.getString("CoverPremium");
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                    SterilityInfertilityCoverPremium = JsonObjectCover.getString("CoverPremium");
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                    GlobalCoverCoverPremium = JsonObjectCover.getString("CoverPremium");
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                }

            }
        } catch (JSONException e) {
            e.printStackTrace();
        }

    }
    private void SecondAdultTrue() {
        try {
            JSONObject CoverDetailsJsonObjectSecondAd = InsuredDetailsGroupArray.getJSONObject(1).getJSONObject("CoverDetails");
            JSONArray CoversArrayAd2 = CoverDetailsJsonObjectSecondAd.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayAd2.length(); l++) {
                JSONObject JsonObjectCoverAd = CoversArrayAd2.getJSONObject(l);
                String CoverName = JsonObjectCoverAd.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                    MaternityChildcareCoverPremium = JsonObjectCoverAd.getString("CoverPremium");
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                    SterilityInfertilityCoverPremium = JsonObjectCoverAd.getString("CoverPremium");
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                }

            }
        } catch (JSONException e) {
            e.printStackTrace();
        }

    }
    private void ChildOneTwoAdultTrue() {
        try {
            CoverDetailsJsonObject1 = InsuredDetailsGroupArray.getJSONObject(2).getJSONObject("CoverDetails");
            JSONArray CoversArray1 = CoverDetailsJsonObject1.getJSONArray("Covers");
            for (int l = 0; l < CoversArray1.length(); l++) {
                JsonObjectCover1 = CoversArray1.getJSONObject(l);
                String CoverName = JsonObjectCover1.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                }
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void childTwoAdultTrue() {
        try {
            JSONObject CoverDetailsJsonObjectCh2 = InsuredDetailsGroupArray.getJSONObject(3).getJSONObject("CoverDetails");
            JSONArray CoversArrayCh2 = CoverDetailsJsonObjectCh2.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayCh2.length(); l++) {
                JsonObjectCoverCh2 = CoversArrayCh2.getJSONObject(l);
                String CoverName = JsonObjectCoverCh2.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                }
            }

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void childThreeAdultTrue() {
        try {
            JSONObject CoverDetailsJsonObjectCh3 = InsuredDetailsGroupArray.getJSONObject(4).getJSONObject("CoverDetails");
            JSONArray CoversArrayCh3 = CoverDetailsJsonObjectCh3.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayCh3.length(); l++) {
                JsonObjectCoverCh3 = CoversArrayCh3.getJSONObject(l);
                String CoverName = JsonObjectCoverCh3.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                }
            }

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void childFourAdultTrue() {
        try {
            JSONObject CoverDetailsJsonObjectCh4 = InsuredDetailsGroupArray.getJSONObject(5).getJSONObject("CoverDetails");
            JSONArray CoversArrayCh4 = CoverDetailsJsonObjectCh4.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayCh4.length(); l++) {
                JsonObjectCoverCh4 = CoversArrayCh4.getJSONObject(l);
                String CoverName = JsonObjectCoverCh4.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                }
            }

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void childOneTrue() {
        try {
            CoverDetailsJsonObject1 = InsuredDetailsGroupArray.getJSONObject(1).getJSONObject("CoverDetails");
            JSONArray CoversArray1 = CoverDetailsJsonObject1.getJSONArray("Covers");
            for (int l = 0; l < CoversArray1.length(); l++) {
                JsonObjectCover1 = CoversArray1.getJSONObject(l);
                String CoverName = JsonObjectCover1.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                }
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }

    }
    private void childTwoTrue() {
        try {
            JSONObject CoverDetailsJsonObjectCh2 = InsuredDetailsGroupArray.getJSONObject(2).getJSONObject("CoverDetails");
            JSONArray CoversArrayCh2 = CoverDetailsJsonObjectCh2.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayCh2.length(); l++) {
                JsonObjectCoverCh2 = CoversArrayCh2.getJSONObject(l);
                String CoverName = JsonObjectCoverCh2.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                }
            }

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void childThreeTrue() {
        try {
            JSONObject CoverDetailsJsonObjectCh3 = InsuredDetailsGroupArray.getJSONObject(3).getJSONObject("CoverDetails");
            JSONArray CoversArrayCh3 = CoverDetailsJsonObjectCh3.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayCh3.length(); l++) {
                JsonObjectCoverCh3 = CoversArrayCh3.getJSONObject(l);
                String CoverName = JsonObjectCoverCh3.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                }
            }

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void childFourTrue() {
        try {
            JSONObject CoverDetailsJsonObjectCh4 = InsuredDetailsGroupArray.getJSONObject(4).getJSONObject("CoverDetails");
            JSONArray CoversArrayCh4 = CoverDetailsJsonObjectCh4.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayCh4.length(); l++) {
                JsonObjectCoverCh4 = CoversArrayCh4.getJSONObject(l);
                String CoverName = JsonObjectCoverCh4.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                }
            }

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void FirstAdult() {
        try {
            JSONObject CoverDetailsJsonObject = InsuredDetailsGroupArray1.getJSONObject(0).getJSONObject("CoverDetails");
            JSONArray CoversArray = CoverDetailsJsonObject.getJSONArray("Covers");
            for (int l = 0; l < CoversArray.length(); l++) {
                JSONObject JsonObjectCover = CoversArray.getJSONObject(l);
                String CoverName = JsonObjectCover.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumAd1 = Double.parseDouble(JsonObjectCover.getString("CoverPremium"));
                }

            }
        }
        catch (JSONException e) {
            e.printStackTrace();
        }

    }
    private void SecondAdult() {
        try {
            JSONObject CoverDetailsJsonObjectSecondAd = InsuredDetailsGroupArray1.getJSONObject(1).getJSONObject("CoverDetails");
            JSONArray CoversArrayAd2 = CoverDetailsJsonObjectSecondAd.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayAd2.length(); l++) {
                JSONObject JsonObjectCoverAd = CoversArrayAd2.getJSONObject(l);
                String CoverName = JsonObjectCoverAd.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumAd2 = Double.parseDouble(JsonObjectCoverAd.getString("CoverPremium"));
                }

            }
        } catch (JSONException e) {
            e.printStackTrace();
        }

    }
    private void ChildOneTwoAdult() {
        try {
            CoverDetailsJsonObject1 = InsuredDetailsGroupArray1.getJSONObject(2).getJSONObject("CoverDetails");
            JSONArray CoversArray1 = CoverDetailsJsonObject1.getJSONArray("Covers");
            for (int l = 0; l < CoversArray1.length(); l++) {
                JsonObjectCover1 = CoversArray1.getJSONObject(l);
                String CoverName = JsonObjectCover1.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                }
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void childTwoAdult() {
        try {
            JSONObject CoverDetailsJsonObjectCh2 = InsuredDetailsGroupArray1.getJSONObject(3).getJSONObject("CoverDetails");
            JSONArray CoversArrayCh2 = CoverDetailsJsonObjectCh2.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayCh2.length(); l++) {
                JsonObjectCoverCh2 = CoversArrayCh2.getJSONObject(l);
                String CoverName = JsonObjectCoverCh2.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                }
            }

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void childThreeAdult() {
        try {
            JSONObject CoverDetailsJsonObjectCh3 = InsuredDetailsGroupArray1.getJSONObject(4).getJSONObject("CoverDetails");
            JSONArray CoversArrayCh3 = CoverDetailsJsonObjectCh3.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayCh3.length(); l++) {
                JsonObjectCoverCh3 = CoversArrayCh3.getJSONObject(l);
                String CoverName = JsonObjectCoverCh3.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                }
            }

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void childFourAdult() {
        try {
            JSONObject CoverDetailsJsonObjectCh4 = InsuredDetailsGroupArray1.getJSONObject(5).getJSONObject("CoverDetails");
            JSONArray CoversArrayCh4 = CoverDetailsJsonObjectCh4.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayCh4.length(); l++) {
                JsonObjectCoverCh4 = CoversArrayCh4.getJSONObject(l);
                String CoverName = JsonObjectCoverCh4.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                }
            }

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void childOne() {
        try {
            CoverDetailsJsonObject1 = InsuredDetailsGroupArray1.getJSONObject(1).getJSONObject("CoverDetails");
            JSONArray CoversArray1 = CoverDetailsJsonObject1.getJSONArray("Covers");
            for (int l = 0; l < CoversArray1.length(); l++) {
                JsonObjectCover1 = CoversArray1.getJSONObject(l);
                String CoverName = JsonObjectCover1.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh1 = Double.parseDouble(JsonObjectCover1.getString("CoverPremium"));
                }
            }
        } catch (JSONException e) {
            e.printStackTrace();
        }

    }
    private void childTwo() {
        try {
            JSONObject CoverDetailsJsonObjectCh2 = InsuredDetailsGroupArray1.getJSONObject(2).getJSONObject("CoverDetails");
            JSONArray CoversArrayCh2 = CoverDetailsJsonObjectCh2.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayCh2.length(); l++) {
                JsonObjectCoverCh2 = CoversArrayCh2.getJSONObject(l);
                String CoverName = JsonObjectCoverCh2.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh2 = Double.parseDouble(JsonObjectCoverCh2.getString("CoverPremium"));
                }
            }

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void childThree() {
        try {
            JSONObject CoverDetailsJsonObjectCh3 = InsuredDetailsGroupArray1.getJSONObject(3).getJSONObject("CoverDetails");
            JSONArray CoversArrayCh3 = CoverDetailsJsonObjectCh3.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayCh3.length(); l++) {
                JsonObjectCoverCh3 = CoversArrayCh3.getJSONObject(l);
                String CoverName = JsonObjectCoverCh3.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh3 = Double.parseDouble(JsonObjectCoverCh3.getString("CoverPremium"));
                }
            }

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void childFour() {
        try {
            JSONObject CoverDetailsJsonObjectCh4 = InsuredDetailsGroupArray1.getJSONObject(4).getJSONObject("CoverDetails");
            JSONArray CoversArrayCh4 = CoverDetailsJsonObjectCh4.getJSONArray("Covers");
            for (int l = 0; l < CoversArrayCh4.length(); l++) {
                JsonObjectCoverCh4 = CoversArrayCh4.getJSONObject(l);
                String CoverName = JsonObjectCoverCh4.getString("CoverGroups");
                if (CoverName.equals("Basic Insurance Cover")) {
                    BasicInsuranceCoverPremiumChild4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Personal Accident Cover")) {
                    PersonalAccidentCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Critical Illness Cover")) {
                    CriticalIllnessCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Daily Hospital Cash Cover")) {
                    DailyHospitalCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Modern Treatments")) {
                    ModernTreatmentCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Pre-Hospitalization")) {
                    ExtensionPreHospitalizationCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Extension under Post-Hospitalization")) {
                    ExtensionProHospitalizationCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Maternity and Childcare Benefit Waiting Period Modification")) {
                    MaternityChildcareCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Coverage for Non-Medical Items")) {
                    CoverageNonMedicalCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Condition waiver under Restore Benefit")) {
                    ConditionWaiverCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Pre-Existing Disease waiting period")) {
                    PreExistingDiseaseCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Outpatient Dental Waiting Period Modification")) {
                    OutpatientDentalCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Travelling Allowance")) {
                    EmergencyTravellingCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Second Opinion")) {
                    SecondOpinionCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension")) {
                    RestCureCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Obesity/ Weight Control Expenses Extension")) {
                    ObesityWeightCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Sterility and Infertility Treatment Expenses Extension")) {
                    SterilityInfertilityCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Enhanced Organ Donor Expenses")) {
                    EnhancedCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Premium Waiver")) {
                    PremiumWaiverCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Global Cover")) {
                    GlobalCoverCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Medically Advised Support Devices")) {
                    MedicallyAdvisedCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Emergency Assistance Service")) {
                    EmergencyAssistanceCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Home Care Treatment")) {
                    HomeCareCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Wellness Benefit")) {
                    WellnessBenefitCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                } else if (CoverName.equals("Disease Management Program")) {
                    DiseaseManagementCoverPremiumCh4 = Double.parseDouble(JsonObjectCoverCh4.getString("CoverPremium"));
                }
            }

        } catch (JSONException e) {
            e.printStackTrace();
        }
    }
    private void digiPro() {
        if (strGenderSpinner.equals("Female")) {
            strGender = "F";
        } else {
            strGender = "M";
        }
        if (str_policyType_spinner.equals("Individual")) {
            if (strCheckBoxSpouse.equals("Checked")) {
                strGender = "F";
                strSelfAgeEditText = strSpouseAgeEditText;
            } else if (strCheckBoxMother.equals("Checked")) {
                strGender = "F";
                strSelfAgeEditText = strMotherAgeEditText;
            } else if (strCheckBoxFather.equals("Checked")) {
                strGender = "M";
                strSelfAgeEditText = strFatherAgeEditText;
            } else if (strCheckBoxMotherLaw.equals("Checked")) {
                strGender = "F";
                strSelfAgeEditText = strMotherLawAgeEditText;
            } else if (strCheckBoxFatherLaw.equals("Checked")) {
                strGender = "M";
                strSelfAgeEditText = strFatherLawAgeEditText;
            }
        }

        if (strCheckBoxSelf.equals("Checked") && strCheckBoxSpouse.equals("Checked")) {
            str_policyType_spinner1 = str_policyType_spinner;
        } else {
            if (strCheckBoxSelf.equals("Checked") || strCheckBoxSpouse.equals("Checked")) {
                if (strCheckBoxMother.equals("Checked") && strCheckBoxFather.equals("Checked")) {
                    str_policyType_spinner1 = "Family Floater";
                }else if(strCheckBoxMotherLaw.equals("Checked") && strCheckBoxFatherLaw.equals("Checked")){
                    str_policyType_spinner1 = "Family Floater";
                }else if (strCheckBoxMother.equals("Checked") || strCheckBoxFather.equals("Checked") || strCheckBoxMotherLaw.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                    str_policyType_spinner1 = "Individual";
                } else {
                    str_policyType_spinner1 = str_policyType_spinner;
                }
            } else {
                str_policyType_spinner1 = str_policyType_spinner;
            }
        }


        JSONObject object = new JSONObject();
        try {
            JSONObject RootObject = new JSONObject();
            //Authentication
            JSONObject AuthenticationObject = new JSONObject();
//            AuthenticationObject.put("WACode", "20000001");
//            AuthenticationObject.put("WAAppCode", "30000011");
            AuthenticationObject.put("WACode","20000149");
            AuthenticationObject.put("WAAppCode","30000149");
            AuthenticationObject.put("WAUserID", "USER01");
            AuthenticationObject.put("WAUserPwd", "pass@123");
            AuthenticationObject.put("WAType", "0");
            RootObject.put("Authentication", AuthenticationObject);
            //Customer
            JSONObject CustomerObject = new JSONObject();
            CustomerObject.put("CustomerType", "");
            CustomerObject.put("CustomerName", "");
            CustomerObject.put("DOB", "");
            CustomerObject.put("Gender", "");
            CustomerObject.put("CanBeParent", "");
            CustomerObject.put("ContactTelephoneSTD", "");
            CustomerObject.put("MobileNo", "");
            CustomerObject.put("Emailid", "");
            CustomerObject.put("PresentAddressLine1", "");
            CustomerObject.put("PresentAddressLine2", "");
            CustomerObject.put("PresentStateCode", "");
            CustomerObject.put("PresentCityDistCode", "");
            CustomerObject.put("PresentPinCode", "");
            CustomerObject.put("PermanentAddressLine1", "");
            CustomerObject.put("PermanentAddressLine2", "");
            CustomerObject.put("PermanentStateCode", "");
            CustomerObject.put("PermanentCityDistCode", "");
            CustomerObject.put("PermanentPinCode", "");
            CustomerObject.put("CustGSTNo", "NULL");
            CustomerObject.put("ProductName", "Complete HealthCare Insurance");
            CustomerObject.put("InstrumentNo", "NULL");
            CustomerObject.put("InstrumentDate", "NULL");
            CustomerObject.put("BankID", "NULL");
            CustomerObject.put("PosPolicyNo", "");
            CustomerObject.put("ProductCode", "2825");
            CustomerObject.put("WAURN", "NULL");
            CustomerObject.put("NomineeName", "");
            CustomerObject.put("NomineeRelation", "");
            CustomerObject.put("PANNo", "NULL");
            CustomerObject.put("AadhaarNo", "");
            CustomerObject.put("EIA", "NULL");
            CustomerObject.put("CKYCNo", "");
            CustomerObject.put("Ref_No_Unique_KYC", "");
            RootObject.put("Customer", CustomerObject);
            //POSAGENT
            JSONObject POSAGENTObject = new JSONObject();
            POSAGENTObject.put("Name", "NULL");
            POSAGENTObject.put("PAN", "NULL");
            POSAGENTObject.put("Aadhar", "NULL");
            POSAGENTObject.put("Email", "NULL");
            POSAGENTObject.put("MobileNo", "NULL");
//            POSAGENTObject.put("Location", "NULL");
            POSAGENTObject.put("Location", "MUMBAI CORPORATE OFFICE");
            POSAGENTObject.put("Information1", "NULL");
            POSAGENTObject.put("Information2", "NULL");
            RootObject.put("POSAGENT", POSAGENTObject);

            JSONObject ProductObject = new JSONObject();
            JSONObject GeneralProposalObject = new JSONObject();
            JSONObject GeneralProposalGroupObject = new JSONObject();
            JSONObject DistributionChannelObject = new JSONObject();
            //Branch
            JSONObject BranchDetailsObject = new JSONObject();

            BranchDetailsObject.put("IMDBranchName", "NULL");
            BranchDetailsObject.put("IMDBranchCode", "NULL");
            DistributionChannelObject.put("BranchDetails", BranchDetailsObject);
            //SpDetails
            JSONObject SPDetailsObject = new JSONObject();
            SPDetailsObject.put("SPName", "NULL");
            SPDetailsObject.put("SPCode", "NULL");
            DistributionChannelObject.put("SPDetails", SPDetailsObject);
            GeneralProposalGroupObject.put("DistributionChannel", DistributionChannelObject);

            //GeneralProposalInformation
            JSONObject GeneralProposalInformationObject = new JSONObject();
            GeneralProposalInformationObject.put("TypeOfBusiness", "");
            GeneralProposalInformationObject.put("ServiceTaxExemptionCategory", "");
            GeneralProposalInformationObject.put("BusinessType", "New");
            GeneralProposalInformationObject.put("Sector", "");
            GeneralProposalInformationObject.put("DealId", "INTR-2312-0019722");
            GeneralProposalInformationObject.put("PolicyType", str_policyType_spinner1);
            GeneralProposalInformationObject.put("FamilyComposition", FamilyComposition);
            GeneralProposalInformationObject.put("ParentComposition", ParentComposition);
            GeneralProposalInformationObject.put("PlanType", "Digi-Pro");
            GeneralProposalInformationObject.put("ProposalDate", today);
            GeneralProposalInformationObject.put("PolicyDuration", "1");
            GeneralProposalInformationObject.put("PolicyNumberChar", "NULL");
            //PolicyEffectiveDate
            JSONObject PolicyEffectiveDateObject = new JSONObject();
            PolicyEffectiveDateObject.put("Fromdate", today);
            PolicyEffectiveDateObject.put("Todate", nextYear);
            PolicyEffectiveDateObject.put("Fromhour", "00:01");
            PolicyEffectiveDateObject.put("Tohour", "23:59");
            GeneralProposalInformationObject.put("PolicyEffectiveDate", PolicyEffectiveDateObject);

            GeneralProposalInformationObject.put("SubCategory", SubCategory);
            GeneralProposalInformationObject.put("EmployeeCode", "");
            GeneralProposalInformationObject.put("ExsistingPolicyNumber", strPolicyNumber);
            GeneralProposalInformationObject.put("PersonalAccidentCategory", "");
            GeneralProposalInformationObject.put("CoPaymentLoading", CoPaymentLoading);
            GeneralProposalInformationObject.put("RequestType", "Quotation");
            GeneralProposalGroupObject.put("GeneralProposalInformation", GeneralProposalInformationObject);
            GeneralProposalObject.put("GeneralProposalGroup", GeneralProposalGroupObject);

            //FinancierDetails
            JSONObject FinancierDetailsObject = new JSONObject();
            JSONObject FinancierDtlGrpObject = new JSONObject();
            JSONObject FinancierDtlGrpDataObject = new JSONObject();
            FinancierDtlGrpDataObject.put("FinancierCode", "NULL");
            FinancierDtlGrpDataObject.put("AgreementType", "NULL");
            FinancierDtlGrpDataObject.put("BranchName", "NULL");
            FinancierDtlGrpDataObject.put("FinancierName", "NULL");
            FinancierDtlGrpDataObject.put("SrNo", "NULL");
            FinancierDtlGrpObject.put("FinancierDtlGrpData", FinancierDtlGrpDataObject);
            FinancierDetailsObject.put("FinancierDtlGrp", FinancierDtlGrpObject);
            GeneralProposalObject.put("FinancierDetails", FinancierDetailsObject);

            //PreviousPolicyDetails
            JSONObject PreviousPolicyDetailsObject = new JSONObject();
            JSONObject PreviousPolDtlGroupObject = new JSONObject();
            JSONObject PreviousPolDtlGroupDataObject = new JSONObject();
            PreviousPolDtlGroupDataObject.put("ProductCode", "NULL");
            PreviousPolDtlGroupDataObject.put("ClaimSettled", "NULL");
            PreviousPolDtlGroupDataObject.put("ClaimPremium", "0");
            PreviousPolDtlGroupDataObject.put("ClaimAmount", "0");
            PreviousPolDtlGroupDataObject.put("DateofLoss", "NULL");
            PreviousPolDtlGroupDataObject.put("NatureofLoss", "NULL");
            PreviousPolDtlGroupDataObject.put("ClaimNo", "");
            PreviousPolDtlGroupDataObject.put("PolicyEffectiveTo", "");
            PreviousPolDtlGroupDataObject.put("PolicyEffectiveFrom", "");
            PreviousPolDtlGroupDataObject.put("PolicyPremium", "0");
            PreviousPolDtlGroupDataObject.put("PolicyNo", "NULL");
            PreviousPolDtlGroupDataObject.put("PolicyYear", "NULL");
            PreviousPolDtlGroupDataObject.put("OfficeCode", "NULL");
            PreviousPolDtlGroupDataObject.put("CorporateCustomerId", "NULL");
            PreviousPolDtlGroupDataObject.put("InsurerName", "NULL");
            PreviousPolDtlGroupDataObject.put("InsurerAddress", "NULL");
            PreviousPolDtlGroupObject.put("PreviousPolDtlGroupData", PreviousPolDtlGroupDataObject);
            PreviousPolicyDetailsObject.put("PreviousPolDtlGroup", PreviousPolDtlGroupObject);
            PreviousPolicyDetailsObject.put("PreviousPolicyType", "Package Policy");
            PreviousPolicyDetailsObject.put("OfficeAddress", "NULL");
            GeneralProposalObject.put("PreviousPolicyDetails", PreviousPolicyDetailsObject);
            ProductObject.put("GeneralProposal", GeneralProposalObject);

            //PremiumCalculation
            JSONObject PremiumCalculationObject = new JSONObject();
            PremiumCalculationObject.put("NetPremium", "0");
            PremiumCalculationObject.put("ServiceTax", "0");
            PremiumCalculationObject.put("StampDuty2", "0");
            PremiumCalculationObject.put("TotalPremium", "0");
            PremiumCalculationObject.put("CGST", "0");
            PremiumCalculationObject.put("SGST", "");
            PremiumCalculationObject.put("UGST", "0");
            PremiumCalculationObject.put("IGST", "0");
            ProductObject.put("PremiumCalculation", PremiumCalculationObject);
//            ProductObject.put("PremiumCalculation",PremiumCalculationObject);
//            ProductObject.put("PremiumCalculation",GeneralProposalObject);

            //Risks
            JSONObject RisksObject = new JSONObject();
            JSONObject RiskObject = new JSONObject();
            JSONObject RisksDataObject = new JSONObject();
            JSONObject InsuredDetailsObject = new JSONObject();
            JSONArray InsuredDetailsGroupArray = new JSONArray();

            JSONObject InsuredDetailsObj = new JSONObject();
            InsuredDetailsObj.put("InsuredType", "Adult");
            InsuredDetailsObj.put("FirstName", "");
            InsuredDetailsObj.put("LastName", "");
            InsuredDetailsObj.put("DOB", strSelfAgeEditText);
            InsuredDetailsObj.put("Gender", strGender);
            InsuredDetailsObj.put("Relationship", "Self");
            InsuredDetailsObj.put("Occupation", "");
            InsuredDetailsObj.put("NomineeName", "");
            InsuredDetailsObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsObj = new JSONObject();
            HealthIndicatorsObj.put("PED", "N");
            HealthIndicatorsObj.put("PEDDeclared", "N");
            HealthIndicatorsObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsObj.put("CholesterolLevel", "NA");
            HealthIndicatorsObj.put("BodyMassIndex", "30");
            HealthIndicatorsObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsObj.put("CoMorbidity", "N");
            InsuredDetailsObj.put("HealthIndicators", HealthIndicatorsObj);

            JSONObject CoverDetailsObj = new JSONObject();
            JSONArray CoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversObj = new JSONObject();
            BasicInsuranceCoversObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversObj.put("CoverRate", "0");
            BasicInsuranceCoversObj.put("CoverPremium", "0");
            BasicInsuranceCoversObj.put("CoverGroups", "Basic Insurance Cover");
            CoversArray.put(BasicInsuranceCoversObj);

            JSONObject PersonalAccidentCoversObj = new JSONObject();
            PersonalAccidentCoversObj.put("Applicable", "False");
            PersonalAccidentCoversObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversObj.put("CoverRate", "0");
            PersonalAccidentCoversObj.put("CoverPremium", "0");
            PersonalAccidentCoversObj.put("CoverGroups", "Personal Accident Cover");
            CoversArray.put(PersonalAccidentCoversObj);

            JSONObject CriticalIllnessCoversObj = new JSONObject();
            CriticalIllnessCoversObj.put("Applicable", "False");
            CriticalIllnessCoversObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversObj.put("CoverRate", "0");
            CriticalIllnessCoversObj.put("CoverPremium", "0");
            CriticalIllnessCoversObj.put("CoverGroups", "Critical Illness Cover");
            CoversArray.put(CriticalIllnessCoversObj);


            JSONObject DailyHospitalCoversObj = new JSONObject();
            DailyHospitalCoversObj.put("Applicable", "False");
            DailyHospitalCoversObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversObj.put("CoverRate", "0");
            DailyHospitalCoversObj.put("CoverPremium", "0");
            DailyHospitalCoversObj.put("CoverGroups", "Daily Hospital Cash Cover");
            CoversArray.put(DailyHospitalCoversObj);

            JSONObject ModernCoversObj = new JSONObject();
            ModernCoversObj.put("Applicable", "False");
            ModernCoversObj.put("CoverSI", strSumInsured);
            ModernCoversObj.put("CoverRate", "0");
            ModernCoversObj.put("CoverPremium", "0");
            ModernCoversObj.put("CoverGroups", "Modern Treatments");
            CoversArray.put(ModernCoversObj);
            JSONObject ExtensionPreHospitalizationCoversObj = new JSONObject();
            ExtensionPreHospitalizationCoversObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            CoversArray.put(ExtensionPreHospitalizationCoversObj);

            JSONObject ExtensionPostHospitalizationCoversObj = new JSONObject();
            ExtensionPostHospitalizationCoversObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversObj.put("CoverGroups", "Extension under Post-Hospitalization");
            CoversArray.put(ExtensionPostHospitalizationCoversObj);


            JSONObject MaternityAndChildcareCoversObj = new JSONObject();
            MaternityAndChildcareCoversObj.put("Applicable", "False");
            MaternityAndChildcareCoversObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversObj.put("CoverRate", "0");
            MaternityAndChildcareCoversObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            CoversArray.put(MaternityAndChildcareCoversObj);

            JSONObject CoverageForNonMedicalCoversObj = new JSONObject();
            CoverageForNonMedicalCoversObj.put("Applicable", "False");
            CoverageForNonMedicalCoversObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversObj.put("CoverGroups", "Coverage for Non-Medical Items");
            CoversArray.put(CoverageForNonMedicalCoversObj);

            JSONObject ConditionWaiverCoversObj = new JSONObject();
            ConditionWaiverCoversObj.put("Applicable", "False");
            ConditionWaiverCoversObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversObj.put("CoverRate", "0");
            ConditionWaiverCoversObj.put("CoverPremium", "0");
            ConditionWaiverCoversObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            CoversArray.put(ConditionWaiverCoversObj);

            JSONObject PreExistingDiseaseCoversObj = new JSONObject();
            PreExistingDiseaseCoversObj.put("Applicable", "False");
            PreExistingDiseaseCoversObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversObj.put("CoverRate", "0");
            PreExistingDiseaseCoversObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            CoversArray.put(PreExistingDiseaseCoversObj);

            JSONObject OutpatientDentalWaitingCoversObj = new JSONObject();
            OutpatientDentalWaitingCoversObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            CoversArray.put(OutpatientDentalWaitingCoversObj);

            JSONObject EmergencyTravellingAllowanceCoversObj = new JSONObject();
            EmergencyTravellingAllowanceCoversObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversObj.put("CoverGroups", "Emergency Travelling Allowance");
            CoversArray.put(EmergencyTravellingAllowanceCoversObj);

            JSONObject SecondOpinionCoversObj = new JSONObject();
            SecondOpinionCoversObj.put("Applicable", "False");
            SecondOpinionCoversObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversObj.put("CoverRate", "0");
            SecondOpinionCoversObj.put("CoverPremium", "0");
            SecondOpinionCoversObj.put("CoverGroups", "Second Opinion");
            CoversArray.put(SecondOpinionCoversObj);

            JSONObject RestCureCoversObj = new JSONObject();
            RestCureCoversObj.put("Applicable", "False");
            RestCureCoversObj.put("CoverSI", strSumInsured);
            RestCureCoversObj.put("CoverRate", "0");
            RestCureCoversObj.put("CoverPremium", "0");
            RestCureCoversObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            CoversArray.put(RestCureCoversObj);

            JSONObject ObesityWeightCoversObj = new JSONObject();
            ObesityWeightCoversObj.put("Applicable", "False");
            ObesityWeightCoversObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversObj.put("CoverRate", "0");
            ObesityWeightCoversObj.put("CoverPremium", "0");
            ObesityWeightCoversObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            CoversArray.put(ObesityWeightCoversObj);

            JSONObject SterilityInfertilityCoversObj = new JSONObject();
            SterilityInfertilityCoversObj.put("Applicable", "False");
            SterilityInfertilityCoversObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversObj.put("CoverRate", "0");
            SterilityInfertilityCoversObj.put("CoverPremium", "0");
            SterilityInfertilityCoversObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            CoversArray.put(SterilityInfertilityCoversObj);

            JSONObject EnhancedOrganDonorCoversObj = new JSONObject();
            EnhancedOrganDonorCoversObj.put("Applicable", "False");
            EnhancedOrganDonorCoversObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            CoversArray.put(EnhancedOrganDonorCoversObj);

            JSONObject PremiumWaiverCoversObj = new JSONObject();
            PremiumWaiverCoversObj.put("Applicable", "False");
            PremiumWaiverCoversObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversObj.put("CoverRate", "0");
            PremiumWaiverCoversObj.put("CoverPremium", "0");
            PremiumWaiverCoversObj.put("CoverGroups", "Premium Waiver");
            CoversArray.put(PremiumWaiverCoversObj);

            JSONObject GlobalCoversObj = new JSONObject();
            GlobalCoversObj.put("Applicable", "False");
            GlobalCoversObj.put("CoverSI", strSumInsured);
            GlobalCoversObj.put("CoverRate", "0");
            GlobalCoversObj.put("CoverPremium", "0");
            GlobalCoversObj.put("CoverGroups", "Global Cover");
            CoversArray.put(GlobalCoversObj);


            JSONObject MedicallyAdvisedCoversObj = new JSONObject();
            MedicallyAdvisedCoversObj.put("Applicable", "False");
            MedicallyAdvisedCoversObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversObj.put("CoverRate", "0");
            MedicallyAdvisedCoversObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversObj.put("CoverGroups", "Medically Advised Support Devices");
            CoversArray.put(MedicallyAdvisedCoversObj);

            JSONObject EmergencyCoversObj = new JSONObject();
            EmergencyCoversObj.put("Applicable", "False");
            EmergencyCoversObj.put("CoverSI", strSumInsured);
            EmergencyCoversObj.put("CoverRate", "0");
            EmergencyCoversObj.put("CoverPremium", "0");
            EmergencyCoversObj.put("CoverGroups", "Emergency Assistance Service");
            CoversArray.put(EmergencyCoversObj);

            JSONObject HomeCareTreatmentCoversObj = new JSONObject();
            HomeCareTreatmentCoversObj.put("Applicable", "False");
            HomeCareTreatmentCoversObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversObj.put("CoverRate", "0");
            HomeCareTreatmentCoversObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversObj.put("CoverGroups", "Home Care Treatment");
            CoversArray.put(HomeCareTreatmentCoversObj);

            JSONObject WellnessBenefitCoversObj = new JSONObject();
            WellnessBenefitCoversObj.put("Applicable", "False");
            WellnessBenefitCoversObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversObj.put("CoverRate", "0");
            WellnessBenefitCoversObj.put("CoverPremium", "0");
            WellnessBenefitCoversObj.put("CoverGroups", "Wellness Benefit");
            CoversArray.put(WellnessBenefitCoversObj);

            JSONObject DiseaseManagementCoversObj = new JSONObject();
            DiseaseManagementCoversObj.put("Applicable", "False");
            DiseaseManagementCoversObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversObj.put("CoverRate", "0");
            DiseaseManagementCoversObj.put("CoverPremium", "0");
            DiseaseManagementCoversObj.put("CoverGroups", "Disease Management Program");
            CoversArray.put(DiseaseManagementCoversObj);
            CoverDetailsObj.put("Covers", CoversArray);
            InsuredDetailsObj.put("CoverDetails", CoverDetailsObj);

            //2nd Adult
            JSONObject SecondAdultObj = new JSONObject();
            SecondAdultObj.put("InsuredType", "Adult");
            SecondAdultObj.put("FirstName", "");
            SecondAdultObj.put("LastName", "");
            SecondAdultObj.put("DOB", strSpouseAgeEditText);
            SecondAdultObj.put("Gender", "F");
            SecondAdultObj.put("Relationship", "Spouse");
            SecondAdultObj.put("Occupation", "");
            SecondAdultObj.put("NomineeName", "");
            SecondAdultObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsSecondObj = new JSONObject();
            HealthIndicatorsSecondObj.put("PED", "N");
            HealthIndicatorsSecondObj.put("PEDDeclared", "N");
            HealthIndicatorsSecondObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsSecondObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsSecondObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsSecondObj.put("CholesterolLevel", "NA");
            HealthIndicatorsSecondObj.put("BodyMassIndex", "30");
            HealthIndicatorsSecondObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsSecondObj.put("CoMorbidity", "N");
            SecondAdultObj.put("HealthIndicators", HealthIndicatorsSecondObj);

            JSONObject CoverDetailsSecondObj = new JSONObject();
            JSONArray SecondAdultCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversAdultSecObj = new JSONObject();
            BasicInsuranceCoversAdultSecObj.put("Applicable", "True");
            BasicInsuranceCoversAdultSecObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversAdultSecObj.put("CoverRate", "0");
            BasicInsuranceCoversAdultSecObj.put("CoverPremium", "0");
            BasicInsuranceCoversAdultSecObj.put("CoverGroups", "Basic Insurance Cover");
            SecondAdultCoversArray.put(BasicInsuranceCoversAdultSecObj);

            JSONObject PersonalAccidentCoversSecondAdultObj = new JSONObject();
            PersonalAccidentCoversSecondAdultObj.put("Applicable", "False");
            PersonalAccidentCoversSecondAdultObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversSecondAdultObj.put("CoverRate", "0");
            PersonalAccidentCoversSecondAdultObj.put("CoverPremium", "0");
            PersonalAccidentCoversSecondAdultObj.put("CoverGroups", "Personal Accident Cover");
            SecondAdultCoversArray.put(PersonalAccidentCoversSecondAdultObj);

            JSONObject CriticalIllnessCoversSecondAdultObj = new JSONObject();
            CriticalIllnessCoversSecondAdultObj.put("Applicable", "False");
            CriticalIllnessCoversSecondAdultObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversSecondAdultObj.put("CoverRate", "0");
            CriticalIllnessCoversSecondAdultObj.put("CoverPremium", "0");
            CriticalIllnessCoversSecondAdultObj.put("CoverGroups", "Critical Illness Cover");
            SecondAdultCoversArray.put(CriticalIllnessCoversSecondAdultObj);


            JSONObject DailyHospitalCoversSecondAdultObj = new JSONObject();
            DailyHospitalCoversSecondAdultObj.put("Applicable", "False");
            DailyHospitalCoversSecondAdultObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversSecondAdultObj.put("CoverRate", "0");
            DailyHospitalCoversSecondAdultObj.put("CoverPremium", "0");
            DailyHospitalCoversSecondAdultObj.put("CoverGroups", "Daily Hospital Cash Cover");
            SecondAdultCoversArray.put(DailyHospitalCoversSecondAdultObj);

            JSONObject ModernCoversSecondAdultObj = new JSONObject();
            ModernCoversSecondAdultObj.put("Applicable", "False");
            ModernCoversSecondAdultObj.put("CoverSI", strSumInsured);
            ModernCoversSecondAdultObj.put("CoverRate", "0");
            ModernCoversSecondAdultObj.put("CoverPremium", "0");
            ModernCoversSecondAdultObj.put("CoverGroups", "Modern Treatments");
            SecondAdultCoversArray.put(ModernCoversSecondAdultObj);
            JSONObject ExtensionPreHospitalizationCoversSecondAdultObj = new JSONObject();
            ExtensionPreHospitalizationCoversSecondAdultObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            SecondAdultCoversArray.put(ExtensionPreHospitalizationCoversSecondAdultObj);

            JSONObject ExtensionPostHospitalizationCoversSecondAdultObj = new JSONObject();
            ExtensionPostHospitalizationCoversSecondAdultObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverGroups", "Extension under Post-Hospitalization");
            SecondAdultCoversArray.put(ExtensionPostHospitalizationCoversSecondAdultObj);


            JSONObject MaternityAndChildcareCoversSecAdultObj = new JSONObject();
            MaternityAndChildcareCoversSecAdultObj.put("Applicable", "False");
            MaternityAndChildcareCoversSecAdultObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversSecAdultObj.put("CoverRate", "0");
            MaternityAndChildcareCoversSecAdultObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversSecAdultObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            SecondAdultCoversArray.put(MaternityAndChildcareCoversSecAdultObj);

            JSONObject CoverageForNonMedicalCoversSecAdultObj = new JSONObject();
            CoverageForNonMedicalCoversSecAdultObj.put("Applicable", "False");
            CoverageForNonMedicalCoversSecAdultObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversSecAdultObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversSecAdultObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversSecAdultObj.put("CoverGroups", "Coverage for Non-Medical Items");
            SecondAdultCoversArray.put(CoverageForNonMedicalCoversSecAdultObj);

            JSONObject ConditionWaiverCoversSecAdultObj = new JSONObject();
            ConditionWaiverCoversSecAdultObj.put("Applicable", "False");
            ConditionWaiverCoversSecAdultObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversSecAdultObj.put("CoverRate", "0");
            ConditionWaiverCoversSecAdultObj.put("CoverPremium", "0");
            ConditionWaiverCoversSecAdultObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            SecondAdultCoversArray.put(ConditionWaiverCoversSecAdultObj);

            JSONObject PreExistingDiseaseCoversSecAdultObj = new JSONObject();
            PreExistingDiseaseCoversSecAdultObj.put("Applicable", "False");
            PreExistingDiseaseCoversSecAdultObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversSecAdultObj.put("CoverRate", "0");
            PreExistingDiseaseCoversSecAdultObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversSecAdultObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            SecondAdultCoversArray.put(PreExistingDiseaseCoversSecAdultObj);

            JSONObject OutpatientDentalWaitingCoversSecAdultObj = new JSONObject();
            OutpatientDentalWaitingCoversSecAdultObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            SecondAdultCoversArray.put(OutpatientDentalWaitingCoversSecAdultObj);

            JSONObject EmergencyTravellingAllowanceCoversSecAdultObj = new JSONObject();
            EmergencyTravellingAllowanceCoversSecAdultObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverGroups", "Emergency Travelling Allowance");
            SecondAdultCoversArray.put(EmergencyTravellingAllowanceCoversSecAdultObj);

            JSONObject SecondOpinionCoversSecAdultObj = new JSONObject();
            SecondOpinionCoversSecAdultObj.put("Applicable", "False");
            SecondOpinionCoversSecAdultObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversSecAdultObj.put("CoverRate", "0");
            SecondOpinionCoversSecAdultObj.put("CoverPremium", "0");
            SecondOpinionCoversSecAdultObj.put("CoverGroups", "Second Opinion");
            SecondAdultCoversArray.put(SecondOpinionCoversSecAdultObj);

            JSONObject RestCureCoversSecAdultObj = new JSONObject();
            RestCureCoversSecAdultObj.put("Applicable", "False");
            RestCureCoversSecAdultObj.put("CoverSI", strSumInsured);
            RestCureCoversSecAdultObj.put("CoverRate", "0");
            RestCureCoversSecAdultObj.put("CoverPremium", "0");
            RestCureCoversSecAdultObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            SecondAdultCoversArray.put(RestCureCoversSecAdultObj);

            JSONObject ObesityWeightCoversSecAdultObj = new JSONObject();
            ObesityWeightCoversSecAdultObj.put("Applicable", "False");
            ObesityWeightCoversSecAdultObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversSecAdultObj.put("CoverRate", "0");
            ObesityWeightCoversSecAdultObj.put("CoverPremium", "0");
            ObesityWeightCoversSecAdultObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            SecondAdultCoversArray.put(ObesityWeightCoversSecAdultObj);

            JSONObject SterilityInfertilityCoversSecAdultObj = new JSONObject();
            SterilityInfertilityCoversSecAdultObj.put("Applicable", "False");
            SterilityInfertilityCoversSecAdultObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversSecAdultObj.put("CoverRate", "0");
            SterilityInfertilityCoversSecAdultObj.put("CoverPremium", "0");
            SterilityInfertilityCoversSecAdultObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            SecondAdultCoversArray.put(SterilityInfertilityCoversSecAdultObj);

            JSONObject EnhancedOrganDonorCoversSecAdultObj = new JSONObject();
            EnhancedOrganDonorCoversSecAdultObj.put("Applicable", "False");
            EnhancedOrganDonorCoversSecAdultObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversSecAdultObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversSecAdultObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversSecAdultObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            SecondAdultCoversArray.put(EnhancedOrganDonorCoversSecAdultObj);

            JSONObject PremiumWaiverCoversSecAdultObj = new JSONObject();
            PremiumWaiverCoversSecAdultObj.put("Applicable", "False");
            PremiumWaiverCoversSecAdultObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversSecAdultObj.put("CoverRate", "0");
            PremiumWaiverCoversSecAdultObj.put("CoverPremium", "0");
            PremiumWaiverCoversSecAdultObj.put("CoverGroups", "Premium Waiver");
            SecondAdultCoversArray.put(PremiumWaiverCoversSecAdultObj);

            JSONObject GlobalCoversSecAdultObj = new JSONObject();
            GlobalCoversSecAdultObj.put("Applicable", "False");
            GlobalCoversSecAdultObj.put("CoverSI", strSumInsured);
            GlobalCoversSecAdultObj.put("CoverRate", "0");
            GlobalCoversSecAdultObj.put("CoverPremium", "0");
            GlobalCoversSecAdultObj.put("CoverGroups", "Global Cover");
            SecondAdultCoversArray.put(GlobalCoversSecAdultObj);


            JSONObject MedicallyAdvisedCoversSecAdultObj = new JSONObject();
            MedicallyAdvisedCoversSecAdultObj.put("Applicable", "False");
            MedicallyAdvisedCoversSecAdultObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversSecAdultObj.put("CoverRate", "0");
            MedicallyAdvisedCoversSecAdultObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversSecAdultObj.put("CoverGroups", "Medically Advised Support Devices");
            SecondAdultCoversArray.put(MedicallyAdvisedCoversSecAdultObj);

            JSONObject EmergencyCoversSecAdultObj = new JSONObject();
            EmergencyCoversSecAdultObj.put("Applicable", "False");
            EmergencyCoversSecAdultObj.put("CoverSI", strSumInsured);
            EmergencyCoversSecAdultObj.put("CoverRate", "0");
            EmergencyCoversSecAdultObj.put("CoverPremium", "0");
            EmergencyCoversSecAdultObj.put("CoverGroups", "Emergency Assistance Service");
            SecondAdultCoversArray.put(EmergencyCoversSecAdultObj);

            JSONObject HomeCareTreatmentCoversSecAdultObj = new JSONObject();
            HomeCareTreatmentCoversSecAdultObj.put("Applicable", "False");
            HomeCareTreatmentCoversSecAdultObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversSecAdultObj.put("CoverRate", "0");
            HomeCareTreatmentCoversSecAdultObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversSecAdultObj.put("CoverGroups", "Home Care Treatment");
            SecondAdultCoversArray.put(HomeCareTreatmentCoversSecAdultObj);

            JSONObject WellnessBenefitCoversSecAdultObj = new JSONObject();
            WellnessBenefitCoversSecAdultObj.put("Applicable", "False");
            WellnessBenefitCoversSecAdultObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversSecAdultObj.put("CoverRate", "0");
            WellnessBenefitCoversSecAdultObj.put("CoverPremium", "0");
            WellnessBenefitCoversSecAdultObj.put("CoverGroups", "Wellness Benefit");
            SecondAdultCoversArray.put(WellnessBenefitCoversSecAdultObj);

            JSONObject DiseaseManagementCoversSecAdultObj = new JSONObject();
            DiseaseManagementCoversSecAdultObj.put("Applicable", "False");
            DiseaseManagementCoversSecAdultObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversSecAdultObj.put("CoverRate", "0");
            DiseaseManagementCoversSecAdultObj.put("CoverPremium", "0");
            DiseaseManagementCoversSecAdultObj.put("CoverGroups", "Disease Management Program");
            SecondAdultCoversArray.put(DiseaseManagementCoversSecAdultObj);
            CoverDetailsSecondObj.put("Covers", SecondAdultCoversArray);
            SecondAdultObj.put("CoverDetails", CoverDetailsSecondObj);

            //ChildFirst
            JSONObject FirstChildObj = new JSONObject();
            FirstChildObj.put("InsuredType", "Child");
            FirstChildObj.put("FirstName", "");
            FirstChildObj.put("LastName", "");
            FirstChildObj.put("DOB", strFirstSonAgeEditText);
            FirstChildObj.put("Gender", "M");
            FirstChildObj.put("Relationship", "");
            FirstChildObj.put("Occupation", "");
            FirstChildObj.put("NomineeName", "");
            FirstChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFirstChildObj = new JSONObject();
            HealthIndicatorsFirstChildObj.put("PED", "N");
            HealthIndicatorsFirstChildObj.put("PEDDeclared", "N");
            HealthIndicatorsFirstChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFirstChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFirstChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFirstChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFirstChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsFirstChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFirstChildObj.put("CoMorbidity", "N");
            FirstChildObj.put("HealthIndicators", HealthIndicatorsFirstChildObj);

            JSONObject CoverDetailsFirstChildObj = new JSONObject();
            JSONArray FirstChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversChildFirstObj = new JSONObject();
            BasicInsuranceCoversChildFirstObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversChildFirstObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversChildFirstObj.put("CoverRate", "0");
            BasicInsuranceCoversChildFirstObj.put("CoverPremium", "0");
            BasicInsuranceCoversChildFirstObj.put("CoverGroups", "Basic Insurance Cover");
            FirstChildCoversArray.put(BasicInsuranceCoversChildFirstObj);

            JSONObject PersonalAccidentCoversFirstObj = new JSONObject();
            PersonalAccidentCoversFirstObj.put("Applicable", "False");
            PersonalAccidentCoversFirstObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFirstObj.put("CoverRate", "0");
            PersonalAccidentCoversFirstObj.put("CoverPremium", "0");
            PersonalAccidentCoversFirstObj.put("CoverGroups", "Personal Accident Cover");
            FirstChildCoversArray.put(PersonalAccidentCoversFirstObj);

            JSONObject CriticalIllnessCoversFirstObj = new JSONObject();
            CriticalIllnessCoversFirstObj.put("Applicable", "False");
            CriticalIllnessCoversFirstObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFirstObj.put("CoverRate", "0");
            CriticalIllnessCoversFirstObj.put("CoverPremium", "0");
            CriticalIllnessCoversFirstObj.put("CoverGroups", "Critical Illness Cover");
            FirstChildCoversArray.put(CriticalIllnessCoversFirstObj);


            JSONObject DailyHospitalCoversFirstObj = new JSONObject();
            DailyHospitalCoversFirstObj.put("Applicable", "False");
            DailyHospitalCoversFirstObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFirstObj.put("CoverRate", "0");
            DailyHospitalCoversFirstObj.put("CoverPremium", "0");
            DailyHospitalCoversFirstObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FirstChildCoversArray.put(DailyHospitalCoversFirstObj);

            JSONObject ModernCoversFirstObj = new JSONObject();
            ModernCoversFirstObj.put("Applicable", "False");
            ModernCoversFirstObj.put("CoverSI", strSumInsured);
            ModernCoversFirstObj.put("CoverRate", "0");
            ModernCoversFirstObj.put("CoverPremium", "0");
            ModernCoversFirstObj.put("CoverGroups", "Modern Treatments");
            FirstChildCoversArray.put(ModernCoversFirstObj);
            JSONObject ExtensionPreHospitalizationCoversFirstObj = new JSONObject();
            ExtensionPreHospitalizationCoversFirstObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversFirstObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFirstObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFirstObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFirstObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FirstChildCoversArray.put(ExtensionPreHospitalizationCoversFirstObj);

            JSONObject ExtensionPostHospitalizationCoversFirstObj = new JSONObject();
            ExtensionPostHospitalizationCoversFirstObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversFirstObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFirstObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFirstObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFirstObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FirstChildCoversArray.put(ExtensionPostHospitalizationCoversFirstObj);


            JSONObject MaternityAndChildcareCoversFirstObj = new JSONObject();
            MaternityAndChildcareCoversFirstObj.put("Applicable", "False");
            MaternityAndChildcareCoversFirstObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFirstObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFirstObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFirstObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FirstChildCoversArray.put(MaternityAndChildcareCoversFirstObj);

            JSONObject CoverageForNonMedicalCoversFirstObj = new JSONObject();
            CoverageForNonMedicalCoversFirstObj.put("Applicable", "False");
            CoverageForNonMedicalCoversFirstObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFirstObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFirstObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFirstObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FirstChildCoversArray.put(CoverageForNonMedicalCoversFirstObj);

            JSONObject ConditionWaiverCoversFirstObj = new JSONObject();
            ConditionWaiverCoversFirstObj.put("Applicable", "False");
            ConditionWaiverCoversFirstObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFirstObj.put("CoverRate", "0");
            ConditionWaiverCoversFirstObj.put("CoverPremium", "0");
            ConditionWaiverCoversFirstObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FirstChildCoversArray.put(ConditionWaiverCoversFirstObj);

            JSONObject PreExistingDiseaseCoversFirstObj = new JSONObject();
            PreExistingDiseaseCoversFirstObj.put("Applicable", "False");
            PreExistingDiseaseCoversFirstObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFirstObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFirstObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFirstObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FirstChildCoversArray.put(PreExistingDiseaseCoversFirstObj);

            JSONObject OutpatientDentalWaitingCoversFirstObj = new JSONObject();
            OutpatientDentalWaitingCoversFirstObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversFirstObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFirstObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFirstObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFirstObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FirstChildCoversArray.put(OutpatientDentalWaitingCoversFirstObj);

            JSONObject EmergencyTravellingAllowanceCoversFirstObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFirstObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverGroups", "Emergency Travelling Allowance");
            FirstChildCoversArray.put(EmergencyTravellingAllowanceCoversFirstObj);

            JSONObject SecondOpinionCoversFirstObj = new JSONObject();
            SecondOpinionCoversFirstObj.put("Applicable", "False");
            SecondOpinionCoversFirstObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFirstObj.put("CoverRate", "0");
            SecondOpinionCoversFirstObj.put("CoverPremium", "0");
            SecondOpinionCoversFirstObj.put("CoverGroups", "Second Opinion");
            FirstChildCoversArray.put(SecondOpinionCoversFirstObj);

            JSONObject RestCureCoversFirstObj = new JSONObject();
            RestCureCoversFirstObj.put("Applicable", "False");
            RestCureCoversFirstObj.put("CoverSI", strSumInsured);
            RestCureCoversFirstObj.put("CoverRate", "0");
            RestCureCoversFirstObj.put("CoverPremium", "0");
            RestCureCoversFirstObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FirstChildCoversArray.put(RestCureCoversFirstObj);

            JSONObject ObesityWeightCoversFirstObj = new JSONObject();
            ObesityWeightCoversFirstObj.put("Applicable", "False");
            ObesityWeightCoversFirstObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFirstObj.put("CoverRate", "0");
            ObesityWeightCoversFirstObj.put("CoverPremium", "0");
            ObesityWeightCoversFirstObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FirstChildCoversArray.put(ObesityWeightCoversFirstObj);

            JSONObject SterilityInfertilityCoversFirstObj = new JSONObject();
            SterilityInfertilityCoversFirstObj.put("Applicable", "False");
            SterilityInfertilityCoversFirstObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFirstObj.put("CoverRate", "0");
            SterilityInfertilityCoversFirstObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFirstObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FirstChildCoversArray.put(SterilityInfertilityCoversFirstObj);

            JSONObject EnhancedOrganDonorCoversFirstObj = new JSONObject();
            EnhancedOrganDonorCoversFirstObj.put("Applicable", "False");
            EnhancedOrganDonorCoversFirstObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFirstObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFirstObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFirstObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FirstChildCoversArray.put(EnhancedOrganDonorCoversFirstObj);

            JSONObject PremiumWaiverCoversFirstObj = new JSONObject();
            PremiumWaiverCoversFirstObj.put("Applicable", "False");
            PremiumWaiverCoversFirstObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFirstObj.put("CoverRate", "0");
            PremiumWaiverCoversFirstObj.put("CoverPremium", "0");
            PremiumWaiverCoversFirstObj.put("CoverGroups", "Premium Waiver");
            FirstChildCoversArray.put(PremiumWaiverCoversFirstObj);

            JSONObject GlobalCoversFirstObj = new JSONObject();
            GlobalCoversFirstObj.put("Applicable", "False");
            GlobalCoversFirstObj.put("CoverSI", strSumInsured);
            GlobalCoversFirstObj.put("CoverRate", "0");
            GlobalCoversFirstObj.put("CoverPremium", "0");
            GlobalCoversFirstObj.put("CoverGroups", "Global Cover");
            FirstChildCoversArray.put(GlobalCoversFirstObj);


            JSONObject MedicallyAdvisedCoversFirstObj = new JSONObject();
            MedicallyAdvisedCoversFirstObj.put("Applicable", "False");
            MedicallyAdvisedCoversFirstObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFirstObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFirstObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFirstObj.put("CoverGroups", "Medically Advised Support Devices");
            FirstChildCoversArray.put(MedicallyAdvisedCoversFirstObj);

            JSONObject EmergencyCoversFirstObj = new JSONObject();
            EmergencyCoversFirstObj.put("Applicable", "False");
            EmergencyCoversFirstObj.put("CoverSI", strSumInsured);
            EmergencyCoversFirstObj.put("CoverRate", "0");
            EmergencyCoversFirstObj.put("CoverPremium", "0");
            EmergencyCoversFirstObj.put("CoverGroups", "Emergency Assistance Service");
            FirstChildCoversArray.put(EmergencyCoversFirstObj);

            JSONObject HomeCareTreatmentCoversFirstObj = new JSONObject();
            HomeCareTreatmentCoversFirstObj.put("Applicable", "False");
            HomeCareTreatmentCoversFirstObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFirstObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFirstObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFirstObj.put("CoverGroups", "Home Care Treatment");
            FirstChildCoversArray.put(HomeCareTreatmentCoversFirstObj);

            JSONObject WellnessBenefitCoversFirstObj = new JSONObject();
            WellnessBenefitCoversFirstObj.put("Applicable", "False");
            WellnessBenefitCoversFirstObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFirstObj.put("CoverRate", "0");
            WellnessBenefitCoversFirstObj.put("CoverPremium", "0");
            WellnessBenefitCoversFirstObj.put("CoverGroups", "Wellness Benefit");
            FirstChildCoversArray.put(WellnessBenefitCoversFirstObj);

            JSONObject DiseaseManagementCoversFirstObj = new JSONObject();
            DiseaseManagementCoversFirstObj.put("Applicable", "False");
            DiseaseManagementCoversFirstObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFirstObj.put("CoverRate", "0");
            DiseaseManagementCoversFirstObj.put("CoverPremium", "0");
            DiseaseManagementCoversFirstObj.put("CoverGroups", "Disease Management Program");
            FirstChildCoversArray.put(DiseaseManagementCoversFirstObj);
            CoverDetailsFirstChildObj.put("Covers", FirstChildCoversArray);
            FirstChildObj.put("CoverDetails", CoverDetailsFirstChildObj);
            //childTwo
            JSONObject SecondChildObj = new JSONObject();
            SecondChildObj.put("InsuredType", "Child");
            SecondChildObj.put("FirstName", "");
            SecondChildObj.put("LastName", "");
            SecondChildObj.put("DOB", strSecondSonAgeEditText);
            SecondChildObj.put("Gender", "M");
            SecondChildObj.put("Relationship", "");
            SecondChildObj.put("Occupation", "");
            SecondChildObj.put("NomineeName", "");
            SecondChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsSecondChildObj = new JSONObject();
            HealthIndicatorsSecondChildObj.put("PED", "N");
            HealthIndicatorsSecondChildObj.put("PEDDeclared", "N");
            HealthIndicatorsSecondChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsSecondChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsSecondChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsSecondChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsSecondChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsSecondChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsSecondChildObj.put("CoMorbidity", "N");
            SecondChildObj.put("HealthIndicators", HealthIndicatorsSecondChildObj);

            JSONObject CoverDetailsSecondChildObj = new JSONObject();
            JSONArray SecondChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversSecChildObj = new JSONObject();
            BasicInsuranceCoversSecChildObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversSecChildObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversSecChildObj.put("CoverRate", "0");
            BasicInsuranceCoversSecChildObj.put("CoverPremium", "0");
            BasicInsuranceCoversSecChildObj.put("CoverGroups", "Basic Insurance Cover");
            SecondChildCoversArray.put(BasicInsuranceCoversSecChildObj);

            JSONObject PersonalAccidentCoversSecondChildObj = new JSONObject();
            PersonalAccidentCoversSecondChildObj.put("Applicable", "False");
            PersonalAccidentCoversSecondChildObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversSecondChildObj.put("CoverRate", "0");
            PersonalAccidentCoversSecondChildObj.put("CoverPremium", "0");
            PersonalAccidentCoversSecondChildObj.put("CoverGroups", "Personal Accident Cover");
            SecondChildCoversArray.put(PersonalAccidentCoversSecondChildObj);

            JSONObject CriticalIllnessCoversSecondChildObj = new JSONObject();
            CriticalIllnessCoversSecondChildObj.put("Applicable", "False");
            CriticalIllnessCoversSecondChildObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversSecondChildObj.put("CoverRate", "0");
            CriticalIllnessCoversSecondChildObj.put("CoverPremium", "0");
            CriticalIllnessCoversSecondChildObj.put("CoverGroups", "Critical Illness Cover");
            SecondChildCoversArray.put(CriticalIllnessCoversSecondChildObj);


            JSONObject DailyHospitalCoversSecondChildObj = new JSONObject();
            DailyHospitalCoversSecondChildObj.put("Applicable", "False");
            DailyHospitalCoversSecondChildObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversSecondChildObj.put("CoverRate", "0");
            DailyHospitalCoversSecondChildObj.put("CoverPremium", "0");
            DailyHospitalCoversSecondChildObj.put("CoverGroups", "Daily Hospital Cash Cover");
            SecondChildCoversArray.put(DailyHospitalCoversSecondChildObj);

            JSONObject ModernCoversSecondChildObj = new JSONObject();
            ModernCoversSecondChildObj.put("Applicable", "False");
            ModernCoversSecondChildObj.put("CoverSI", strSumInsured);
            ModernCoversSecondChildObj.put("CoverRate", "0");
            ModernCoversSecondChildObj.put("CoverPremium", "0");
            ModernCoversSecondChildObj.put("CoverGroups", "Modern Treatments");
            SecondChildCoversArray.put(ModernCoversSecondChildObj);
            JSONObject ExtensionPreHospitalizationCoversSecondChildObj = new JSONObject();
            ExtensionPreHospitalizationCoversSecondChildObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            SecondChildCoversArray.put(ExtensionPreHospitalizationCoversSecondChildObj);

            JSONObject ExtensionPostHospitalizationCoversSecondChildObj = new JSONObject();
            ExtensionPostHospitalizationCoversSecondChildObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverGroups", "Extension under Post-Hospitalization");
            SecondChildCoversArray.put(ExtensionPostHospitalizationCoversSecondChildObj);


            JSONObject MaternityAndChildcareCoversSecChildObj = new JSONObject();
            MaternityAndChildcareCoversSecChildObj.put("Applicable", "False");
            MaternityAndChildcareCoversSecChildObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversSecChildObj.put("CoverRate", "0");
            MaternityAndChildcareCoversSecChildObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversSecChildObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            SecondChildCoversArray.put(MaternityAndChildcareCoversSecChildObj);

            JSONObject CoverageForNonMedicalCoversSecChildObj = new JSONObject();
            CoverageForNonMedicalCoversSecChildObj.put("Applicable", "False");
            CoverageForNonMedicalCoversSecChildObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversSecChildObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversSecChildObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversSecChildObj.put("CoverGroups", "Coverage for Non-Medical Items");
            SecondChildCoversArray.put(CoverageForNonMedicalCoversSecChildObj);

            JSONObject ConditionWaiverCoversSecChildObj = new JSONObject();
            ConditionWaiverCoversSecChildObj.put("Applicable", "False");
            ConditionWaiverCoversSecChildObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversSecChildObj.put("CoverRate", "0");
            ConditionWaiverCoversSecChildObj.put("CoverPremium", "0");
            ConditionWaiverCoversSecChildObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            SecondChildCoversArray.put(ConditionWaiverCoversSecChildObj);

            JSONObject PreExistingDiseaseCoversSecChildObj = new JSONObject();
            PreExistingDiseaseCoversSecChildObj.put("Applicable", "False");
            PreExistingDiseaseCoversSecChildObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversSecChildObj.put("CoverRate", "0");
            PreExistingDiseaseCoversSecChildObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversSecChildObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            SecondChildCoversArray.put(PreExistingDiseaseCoversSecChildObj);

            JSONObject OutpatientDentalWaitingCoversSecChildObj = new JSONObject();
            OutpatientDentalWaitingCoversSecChildObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversSecChildObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversSecChildObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversSecChildObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversSecChildObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            SecondChildCoversArray.put(OutpatientDentalWaitingCoversSecChildObj);

            JSONObject EmergencyTravellingAllowanceCoversSecChildObj = new JSONObject();
            EmergencyTravellingAllowanceCoversSecChildObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverGroups", "Emergency Travelling Allowance");
            SecondChildCoversArray.put(EmergencyTravellingAllowanceCoversSecChildObj);

            JSONObject SecondOpinionCoversSecChildObj = new JSONObject();
            SecondOpinionCoversSecChildObj.put("Applicable", "False");
            SecondOpinionCoversSecChildObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversSecChildObj.put("CoverRate", "0");
            SecondOpinionCoversSecChildObj.put("CoverPremium", "0");
            SecondOpinionCoversSecChildObj.put("CoverGroups", "Second Opinion");
            SecondChildCoversArray.put(SecondOpinionCoversSecChildObj);

            JSONObject RestCureCoversSecChildObj = new JSONObject();
            RestCureCoversSecChildObj.put("Applicable", "False");
            RestCureCoversSecChildObj.put("CoverSI", strSumInsured);
            RestCureCoversSecChildObj.put("CoverRate", "0");
            RestCureCoversSecChildObj.put("CoverPremium", "0");
            RestCureCoversSecChildObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            SecondChildCoversArray.put(RestCureCoversSecChildObj);

            JSONObject ObesityWeightCoversSecChildObj = new JSONObject();
            ObesityWeightCoversSecChildObj.put("Applicable", "False");
            ObesityWeightCoversSecChildObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversSecChildObj.put("CoverRate", "0");
            ObesityWeightCoversSecChildObj.put("CoverPremium", "0");
            ObesityWeightCoversSecChildObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            SecondChildCoversArray.put(ObesityWeightCoversSecChildObj);

            JSONObject SterilityInfertilityCoversSecChildObj = new JSONObject();
            SterilityInfertilityCoversSecChildObj.put("Applicable", "False");
            SterilityInfertilityCoversSecChildObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversSecChildObj.put("CoverRate", "0");
            SterilityInfertilityCoversSecChildObj.put("CoverPremium", "0");
            SterilityInfertilityCoversSecChildObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            SecondChildCoversArray.put(SterilityInfertilityCoversSecChildObj);

            JSONObject EnhancedOrganDonorCoversSecChildObj = new JSONObject();
            EnhancedOrganDonorCoversSecChildObj.put("Applicable", "False");
            EnhancedOrganDonorCoversSecChildObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversSecChildObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversSecChildObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversSecChildObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            SecondChildCoversArray.put(EnhancedOrganDonorCoversSecChildObj);

            JSONObject PremiumWaiverCoversSecChildObj = new JSONObject();
            PremiumWaiverCoversSecChildObj.put("Applicable", "False");
            PremiumWaiverCoversSecChildObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversSecChildObj.put("CoverRate", "0");
            PremiumWaiverCoversSecChildObj.put("CoverPremium", "0");
            PremiumWaiverCoversSecChildObj.put("CoverGroups", "Premium Waiver");
            SecondChildCoversArray.put(PremiumWaiverCoversSecChildObj);

            JSONObject GlobalCoversSecChildObj = new JSONObject();
            GlobalCoversSecChildObj.put("Applicable", "False");
            GlobalCoversSecChildObj.put("CoverSI", strSumInsured);
            GlobalCoversSecChildObj.put("CoverRate", "0");
            GlobalCoversSecChildObj.put("CoverPremium", "0");
            GlobalCoversSecChildObj.put("CoverGroups", "Global Cover");
            SecondChildCoversArray.put(GlobalCoversSecChildObj);


            JSONObject MedicallyAdvisedCoversSecChildObj = new JSONObject();
            MedicallyAdvisedCoversSecChildObj.put("Applicable", "False");
            MedicallyAdvisedCoversSecChildObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversSecChildObj.put("CoverRate", "0");
            MedicallyAdvisedCoversSecChildObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversSecChildObj.put("CoverGroups", "Medically Advised Support Devices");
            SecondChildCoversArray.put(MedicallyAdvisedCoversSecChildObj);

            JSONObject EmergencyCoversSecChildObj = new JSONObject();
            EmergencyCoversSecChildObj.put("Applicable", "False");
            EmergencyCoversSecChildObj.put("CoverSI", strSumInsured);
            EmergencyCoversSecChildObj.put("CoverRate", "0");
            EmergencyCoversSecChildObj.put("CoverPremium", "0");
            EmergencyCoversSecChildObj.put("CoverGroups", "Emergency Assistance Service");
            SecondChildCoversArray.put(EmergencyCoversSecChildObj);

            JSONObject HomeCareTreatmentCoversSecChildObj = new JSONObject();
            HomeCareTreatmentCoversSecChildObj.put("Applicable", "False");
            HomeCareTreatmentCoversSecChildObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversSecChildObj.put("CoverRate", "0");
            HomeCareTreatmentCoversSecChildObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversSecChildObj.put("CoverGroups", "Home Care Treatment");
            SecondChildCoversArray.put(HomeCareTreatmentCoversSecChildObj);

            JSONObject WellnessBenefitCoversSecChildObj = new JSONObject();
            WellnessBenefitCoversSecChildObj.put("Applicable", "False");
            WellnessBenefitCoversSecChildObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversSecChildObj.put("CoverRate", "0");
            WellnessBenefitCoversSecChildObj.put("CoverPremium", "0");
            WellnessBenefitCoversSecChildObj.put("CoverGroups", "Wellness Benefit");
            SecondChildCoversArray.put(WellnessBenefitCoversSecChildObj);

            JSONObject DiseaseManagementCoversSecChildObj = new JSONObject();
            DiseaseManagementCoversSecChildObj.put("Applicable", "False");
            DiseaseManagementCoversSecChildObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversSecChildObj.put("CoverRate", "0");
            DiseaseManagementCoversSecChildObj.put("CoverPremium", "0");
            DiseaseManagementCoversSecChildObj.put("CoverGroups", "Disease Management Program");
            SecondChildCoversArray.put(DiseaseManagementCoversSecChildObj);
            CoverDetailsSecondChildObj.put("Covers", SecondChildCoversArray);
            SecondChildObj.put("CoverDetails", CoverDetailsSecondChildObj);

            //Third child
            JSONObject ThirdChildObj = new JSONObject();
            ThirdChildObj.put("InsuredType", "Child");
            ThirdChildObj.put("FirstName", "");
            ThirdChildObj.put("LastName", "");
            ThirdChildObj.put("DOB", strThirdSonAgeEditText);
            ThirdChildObj.put("Gender", "M");
            ThirdChildObj.put("Relationship", "");
            ThirdChildObj.put("Occupation", "");
            ThirdChildObj.put("NomineeName", "");
            ThirdChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsThirdChildObj = new JSONObject();
            HealthIndicatorsThirdChildObj.put("PED", "N");
            HealthIndicatorsThirdChildObj.put("PEDDeclared", "N");
            HealthIndicatorsThirdChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsThirdChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsThirdChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsThirdChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsThirdChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsThirdChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsThirdChildObj.put("CoMorbidity", "N");
            ThirdChildObj.put("HealthIndicators", HealthIndicatorsThirdChildObj);

            JSONObject CoverDetailsThirdChildObj = new JSONObject();
            JSONArray ThirdChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversThirdChildObj = new JSONObject();
            BasicInsuranceCoversThirdChildObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversThirdChildObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversThirdChildObj.put("CoverRate", "0");
            BasicInsuranceCoversThirdChildObj.put("CoverPremium", "0");
            BasicInsuranceCoversThirdChildObj.put("CoverGroups", "Basic Insurance Cover");
            ThirdChildCoversArray.put(BasicInsuranceCoversThirdChildObj);

            JSONObject PersonalAccidentCoversThirdChildObj = new JSONObject();
            PersonalAccidentCoversThirdChildObj.put("Applicable", "False");
            PersonalAccidentCoversThirdChildObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversThirdChildObj.put("CoverRate", "0");
            PersonalAccidentCoversThirdChildObj.put("CoverPremium", "0");
            PersonalAccidentCoversThirdChildObj.put("CoverGroups", "Personal Accident Cover");
            ThirdChildCoversArray.put(PersonalAccidentCoversThirdChildObj);

            JSONObject CriticalIllnessCoversThirdChildObj = new JSONObject();
            CriticalIllnessCoversThirdChildObj.put("Applicable", "False");
            CriticalIllnessCoversThirdChildObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversThirdChildObj.put("CoverRate", "0");
            CriticalIllnessCoversThirdChildObj.put("CoverPremium", "0");
            CriticalIllnessCoversThirdChildObj.put("CoverGroups", "Critical Illness Cover");
            ThirdChildCoversArray.put(CriticalIllnessCoversThirdChildObj);


            JSONObject DailyHospitalCoversThirdChildObj = new JSONObject();
            DailyHospitalCoversThirdChildObj.put("Applicable", "False");
            DailyHospitalCoversThirdChildObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversThirdChildObj.put("CoverRate", "0");
            DailyHospitalCoversThirdChildObj.put("CoverPremium", "0");
            DailyHospitalCoversThirdChildObj.put("CoverGroups", "Daily Hospital Cash Cover");
            ThirdChildCoversArray.put(DailyHospitalCoversThirdChildObj);

            JSONObject ModernCoversThirdChildObj = new JSONObject();
            ModernCoversThirdChildObj.put("Applicable", "False");
            ModernCoversThirdChildObj.put("CoverSI", strSumInsured);
            ModernCoversThirdChildObj.put("CoverRate", "0");
            ModernCoversThirdChildObj.put("CoverPremium", "0");
            ModernCoversThirdChildObj.put("CoverGroups", "Modern Treatments");
            ThirdChildCoversArray.put(ModernCoversThirdChildObj);
            JSONObject ExtensionPreHospitalizationCoversThirdChildObj = new JSONObject();
            ExtensionPreHospitalizationCoversThirdChildObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            ThirdChildCoversArray.put(ExtensionPreHospitalizationCoversThirdChildObj);

            JSONObject ExtensionPostHospitalizationCoversThirdChildObj = new JSONObject();
            ExtensionPostHospitalizationCoversThirdChildObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverGroups", "Extension under Post-Hospitalization");
            ThirdChildCoversArray.put(ExtensionPostHospitalizationCoversThirdChildObj);


            JSONObject MaternityAndChildcareCoversThirdChildObj = new JSONObject();
            MaternityAndChildcareCoversThirdChildObj.put("Applicable", "False");
            MaternityAndChildcareCoversThirdChildObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversThirdChildObj.put("CoverRate", "0");
            MaternityAndChildcareCoversThirdChildObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversThirdChildObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            ThirdChildCoversArray.put(MaternityAndChildcareCoversThirdChildObj);

            JSONObject CoverageForNonMedicalCoversThirdChildObj = new JSONObject();
            CoverageForNonMedicalCoversThirdChildObj.put("Applicable", "False");
            CoverageForNonMedicalCoversThirdChildObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversThirdChildObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversThirdChildObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversThirdChildObj.put("CoverGroups", "Coverage for Non-Medical Items");
            ThirdChildCoversArray.put(CoverageForNonMedicalCoversThirdChildObj);

            JSONObject ConditionWaiverCoversThirdChildObj = new JSONObject();
            ConditionWaiverCoversThirdChildObj.put("Applicable", "False");
            ConditionWaiverCoversThirdChildObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversThirdChildObj.put("CoverRate", "0");
            ConditionWaiverCoversThirdChildObj.put("CoverPremium", "0");
            ConditionWaiverCoversThirdChildObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            ThirdChildCoversArray.put(ConditionWaiverCoversThirdChildObj);

            JSONObject PreExistingDiseaseCoversThirdChildObj = new JSONObject();
            PreExistingDiseaseCoversThirdChildObj.put("Applicable", "False");
            PreExistingDiseaseCoversThirdChildObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversThirdChildObj.put("CoverRate", "0");
            PreExistingDiseaseCoversThirdChildObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversThirdChildObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            ThirdChildCoversArray.put(PreExistingDiseaseCoversThirdChildObj);

            JSONObject OutpatientDentalWaitingCoversThirdChildObj = new JSONObject();
            OutpatientDentalWaitingCoversThirdChildObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            ThirdChildCoversArray.put(OutpatientDentalWaitingCoversThirdChildObj);

            JSONObject EmergencyTravellingAllowanceCoversThirdChildObj = new JSONObject();
            EmergencyTravellingAllowanceCoversThirdChildObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverGroups", "Emergency Travelling Allowance");
            ThirdChildCoversArray.put(EmergencyTravellingAllowanceCoversThirdChildObj);

            JSONObject SecondOpinionCoversThirdChildObj = new JSONObject();
            SecondOpinionCoversThirdChildObj.put("Applicable", "False");
            SecondOpinionCoversThirdChildObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversThirdChildObj.put("CoverRate", "0");
            SecondOpinionCoversThirdChildObj.put("CoverPremium", "0");
            SecondOpinionCoversThirdChildObj.put("CoverGroups", "Second Opinion");
            ThirdChildCoversArray.put(SecondOpinionCoversThirdChildObj);

            JSONObject RestCureCoversThirdChildObj = new JSONObject();
            RestCureCoversThirdChildObj.put("Applicable", "False");
            RestCureCoversThirdChildObj.put("CoverSI", strSumInsured);
            RestCureCoversThirdChildObj.put("CoverRate", "0");
            RestCureCoversThirdChildObj.put("CoverPremium", "0");
            RestCureCoversThirdChildObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            ThirdChildCoversArray.put(RestCureCoversThirdChildObj);

            JSONObject ObesityWeightCoversThirdChildObj = new JSONObject();
            ObesityWeightCoversThirdChildObj.put("Applicable", "False");
            ObesityWeightCoversThirdChildObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversThirdChildObj.put("CoverRate", "0");
            ObesityWeightCoversThirdChildObj.put("CoverPremium", "0");
            ObesityWeightCoversThirdChildObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            ThirdChildCoversArray.put(ObesityWeightCoversThirdChildObj);

            JSONObject SterilityInfertilityCoversThirdChildObj = new JSONObject();
            SterilityInfertilityCoversThirdChildObj.put("Applicable", "False");
            SterilityInfertilityCoversThirdChildObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversThirdChildObj.put("CoverRate", "0");
            SterilityInfertilityCoversThirdChildObj.put("CoverPremium", "0");
            SterilityInfertilityCoversThirdChildObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            ThirdChildCoversArray.put(SterilityInfertilityCoversThirdChildObj);

            JSONObject EnhancedOrganDonorCoversThirdChildObj = new JSONObject();
            EnhancedOrganDonorCoversThirdChildObj.put("Applicable", "False");
            EnhancedOrganDonorCoversThirdChildObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversThirdChildObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversThirdChildObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversThirdChildObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            ThirdChildCoversArray.put(EnhancedOrganDonorCoversThirdChildObj);

            JSONObject PremiumWaiverCoversThirdChildObj = new JSONObject();
            PremiumWaiverCoversThirdChildObj.put("Applicable", "False");
            PremiumWaiverCoversThirdChildObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversThirdChildObj.put("CoverRate", "0");
            PremiumWaiverCoversThirdChildObj.put("CoverPremium", "0");
            PremiumWaiverCoversThirdChildObj.put("CoverGroups", "Premium Waiver");
            ThirdChildCoversArray.put(PremiumWaiverCoversThirdChildObj);

            JSONObject GlobalCoversThirdChildObj = new JSONObject();
            GlobalCoversThirdChildObj.put("Applicable", "False");
            GlobalCoversThirdChildObj.put("CoverSI", strSumInsured);
            GlobalCoversThirdChildObj.put("CoverRate", "0");
            GlobalCoversThirdChildObj.put("CoverPremium", "0");
            GlobalCoversThirdChildObj.put("CoverGroups", "Global Cover");
            ThirdChildCoversArray.put(GlobalCoversThirdChildObj);


            JSONObject MedicallyAdvisedCoversThirdChildObj = new JSONObject();
            MedicallyAdvisedCoversThirdChildObj.put("Applicable", "False");
            MedicallyAdvisedCoversThirdChildObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversThirdChildObj.put("CoverRate", "0");
            MedicallyAdvisedCoversThirdChildObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversThirdChildObj.put("CoverGroups", "Medically Advised Support Devices");
            ThirdChildCoversArray.put(MedicallyAdvisedCoversThirdChildObj);

            JSONObject EmergencyCoversThirdChildObj = new JSONObject();
            EmergencyCoversThirdChildObj.put("Applicable", "False");
            EmergencyCoversThirdChildObj.put("CoverSI", strSumInsured);
            EmergencyCoversThirdChildObj.put("CoverRate", "0");
            EmergencyCoversThirdChildObj.put("CoverPremium", "0");
            EmergencyCoversThirdChildObj.put("CoverGroups", "Emergency Assistance Service");
            ThirdChildCoversArray.put(EmergencyCoversThirdChildObj);

            JSONObject HomeCareTreatmentCoversThirdChildObj = new JSONObject();
            HomeCareTreatmentCoversThirdChildObj.put("Applicable", "False");
            HomeCareTreatmentCoversThirdChildObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversThirdChildObj.put("CoverRate", "0");
            HomeCareTreatmentCoversThirdChildObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversThirdChildObj.put("CoverGroups", "Home Care Treatment");
            ThirdChildCoversArray.put(HomeCareTreatmentCoversThirdChildObj);

            JSONObject WellnessBenefitCoversThirdChildObj = new JSONObject();
            WellnessBenefitCoversThirdChildObj.put("Applicable", "False");
            WellnessBenefitCoversThirdChildObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversThirdChildObj.put("CoverRate", "0");
            WellnessBenefitCoversThirdChildObj.put("CoverPremium", "0");
            WellnessBenefitCoversThirdChildObj.put("CoverGroups", "Wellness Benefit");
            ThirdChildCoversArray.put(WellnessBenefitCoversThirdChildObj);

            JSONObject DiseaseManagementCoversThirdChildObj = new JSONObject();
            DiseaseManagementCoversThirdChildObj.put("Applicable", "False");
            DiseaseManagementCoversThirdChildObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversThirdChildObj.put("CoverRate", "0");
            DiseaseManagementCoversThirdChildObj.put("CoverPremium", "0");
            DiseaseManagementCoversThirdChildObj.put("CoverGroups", "Disease Management Program");
            ThirdChildCoversArray.put(DiseaseManagementCoversThirdChildObj);
            CoverDetailsThirdChildObj.put("Covers", ThirdChildCoversArray);
            ThirdChildObj.put("CoverDetails", CoverDetailsThirdChildObj);


            //fourChild
            JSONObject FourthChildObj = new JSONObject();
            FourthChildObj.put("InsuredType", "Child");
            FourthChildObj.put("FirstName", "");
            FourthChildObj.put("LastName", "");
            FourthChildObj.put("DOB", strFourSonAgeEditText);
            FourthChildObj.put("Gender", "M");
            FourthChildObj.put("Relationship", "");
            FourthChildObj.put("Occupation", "");
            FourthChildObj.put("NomineeName", "");
            FourthChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFourthChildObj = new JSONObject();
            HealthIndicatorsFourthChildObj.put("PED", "N");
            HealthIndicatorsFourthChildObj.put("PEDDeclared", "N");
            HealthIndicatorsFourthChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFourthChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFourthChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFourthChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFourthChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsFourthChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFourthChildObj.put("CoMorbidity", "N");
            FourthChildObj.put("HealthIndicators", HealthIndicatorsFourthChildObj);

            JSONObject CoverDetailsFourthChildObj = new JSONObject();
            JSONArray FourthChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversFourthChildObj = new JSONObject();
            BasicInsuranceCoversFourthChildObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversFourthChildObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversFourthChildObj.put("CoverRate", "0");
            BasicInsuranceCoversFourthChildObj.put("CoverPremium", "0");
            BasicInsuranceCoversFourthChildObj.put("CoverGroups", "Basic Insurance Cover");
            FourthChildCoversArray.put(BasicInsuranceCoversFourthChildObj);

            JSONObject PersonalAccidentCoversFourthChildObj = new JSONObject();
            PersonalAccidentCoversFourthChildObj.put("Applicable", "False");
            PersonalAccidentCoversFourthChildObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFourthChildObj.put("CoverRate", "0");
            PersonalAccidentCoversFourthChildObj.put("CoverPremium", "0");
            PersonalAccidentCoversFourthChildObj.put("CoverGroups", "Personal Accident Cover");
            FourthChildCoversArray.put(PersonalAccidentCoversFourthChildObj);

            JSONObject CriticalIllnessCoversFourthChildObj = new JSONObject();
            CriticalIllnessCoversFourthChildObj.put("Applicable", "False");
            CriticalIllnessCoversFourthChildObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFourthChildObj.put("CoverRate", "0");
            CriticalIllnessCoversFourthChildObj.put("CoverPremium", "0");
            CriticalIllnessCoversFourthChildObj.put("CoverGroups", "Critical Illness Cover");
            FourthChildCoversArray.put(CriticalIllnessCoversFourthChildObj);


            JSONObject DailyHospitalCoversFourthChildObj = new JSONObject();
            DailyHospitalCoversFourthChildObj.put("Applicable", "False");
            DailyHospitalCoversFourthChildObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFourthChildObj.put("CoverRate", "0");
            DailyHospitalCoversFourthChildObj.put("CoverPremium", "0");
            DailyHospitalCoversFourthChildObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FourthChildCoversArray.put(DailyHospitalCoversFourthChildObj);

            JSONObject ModernCoversFourthChildObj = new JSONObject();
            ModernCoversFourthChildObj.put("Applicable", "False");
            ModernCoversFourthChildObj.put("CoverSI", strSumInsured);
            ModernCoversFourthChildObj.put("CoverRate", "0");
            ModernCoversFourthChildObj.put("CoverPremium", "0");
            ModernCoversFourthChildObj.put("CoverGroups", "Modern Treatments");
            FourthChildCoversArray.put(ModernCoversFourthChildObj);
            JSONObject ExtensionPreHospitalizationCoversFourthChildObj = new JSONObject();
            ExtensionPreHospitalizationCoversFourthChildObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FourthChildCoversArray.put(ExtensionPreHospitalizationCoversFourthChildObj);

            JSONObject ExtensionPostHospitalizationCoversFourthChildObj = new JSONObject();
            ExtensionPostHospitalizationCoversFourthChildObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FourthChildCoversArray.put(ExtensionPostHospitalizationCoversFourthChildObj);


            JSONObject MaternityAndChildcareCoversFourthChildObj = new JSONObject();
            MaternityAndChildcareCoversFourthChildObj.put("Applicable", "False");
            MaternityAndChildcareCoversFourthChildObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFourthChildObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFourthChildObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFourthChildObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FourthChildCoversArray.put(MaternityAndChildcareCoversFourthChildObj);

            JSONObject CoverageForNonMedicalCoversFourthChildObj = new JSONObject();
            CoverageForNonMedicalCoversFourthChildObj.put("Applicable", "False");
            CoverageForNonMedicalCoversFourthChildObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFourthChildObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFourthChildObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFourthChildObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FourthChildCoversArray.put(CoverageForNonMedicalCoversFourthChildObj);

            JSONObject ConditionWaiverCoversFourthChildObj = new JSONObject();
            ConditionWaiverCoversFourthChildObj.put("Applicable", "False");
            ConditionWaiverCoversFourthChildObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFourthChildObj.put("CoverRate", "0");
            ConditionWaiverCoversFourthChildObj.put("CoverPremium", "0");
            ConditionWaiverCoversFourthChildObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FourthChildCoversArray.put(ConditionWaiverCoversFourthChildObj);

            JSONObject PreExistingDiseaseCoversFourthChildObj = new JSONObject();
            PreExistingDiseaseCoversFourthChildObj.put("Applicable", "False");
            PreExistingDiseaseCoversFourthChildObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFourthChildObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFourthChildObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFourthChildObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FourthChildCoversArray.put(PreExistingDiseaseCoversFourthChildObj);

            JSONObject OutpatientDentalWaitingCoversFourthChildObj = new JSONObject();
            OutpatientDentalWaitingCoversFourthChildObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FourthChildCoversArray.put(OutpatientDentalWaitingCoversFourthChildObj);

            JSONObject EmergencyTravellingAllowanceCoversFourthChildObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFourthChildObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverGroups", "Emergency Travelling Allowance");
            FourthChildCoversArray.put(EmergencyTravellingAllowanceCoversFourthChildObj);

            JSONObject SecondOpinionCoversFourthChildObj = new JSONObject();
            SecondOpinionCoversFourthChildObj.put("Applicable", "False");
            SecondOpinionCoversFourthChildObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFourthChildObj.put("CoverRate", "0");
            SecondOpinionCoversFourthChildObj.put("CoverPremium", "0");
            SecondOpinionCoversFourthChildObj.put("CoverGroups", "Second Opinion");
            FourthChildCoversArray.put(SecondOpinionCoversFourthChildObj);

            JSONObject RestCureCoversFourthChildObj = new JSONObject();
            RestCureCoversFourthChildObj.put("Applicable", "False");
            RestCureCoversFourthChildObj.put("CoverSI", strSumInsured);
            RestCureCoversFourthChildObj.put("CoverRate", "0");
            RestCureCoversFourthChildObj.put("CoverPremium", "0");
            RestCureCoversFourthChildObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FourthChildCoversArray.put(RestCureCoversFourthChildObj);

            JSONObject ObesityWeightCoversFourthChildObj = new JSONObject();
            ObesityWeightCoversFourthChildObj.put("Applicable", "False");
            ObesityWeightCoversFourthChildObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFourthChildObj.put("CoverRate", "0");
            ObesityWeightCoversFourthChildObj.put("CoverPremium", "0");
            ObesityWeightCoversFourthChildObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FourthChildCoversArray.put(ObesityWeightCoversFourthChildObj);

            JSONObject SterilityInfertilityCoversFourthChildObj = new JSONObject();
            SterilityInfertilityCoversFourthChildObj.put("Applicable", "False");
            SterilityInfertilityCoversFourthChildObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFourthChildObj.put("CoverRate", "0");
            SterilityInfertilityCoversFourthChildObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFourthChildObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FourthChildCoversArray.put(SterilityInfertilityCoversFourthChildObj);

            JSONObject EnhancedOrganDonorCoversFourthChildObj = new JSONObject();
            EnhancedOrganDonorCoversFourthChildObj.put("Applicable", "False");
            EnhancedOrganDonorCoversFourthChildObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFourthChildObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFourthChildObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFourthChildObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FourthChildCoversArray.put(EnhancedOrganDonorCoversFourthChildObj);

            JSONObject PremiumWaiverCoversFourthChildObj = new JSONObject();
            PremiumWaiverCoversFourthChildObj.put("Applicable", "False");
            PremiumWaiverCoversFourthChildObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFourthChildObj.put("CoverRate", "0");
            PremiumWaiverCoversFourthChildObj.put("CoverPremium", "0");
            PremiumWaiverCoversFourthChildObj.put("CoverGroups", "Premium Waiver");
            FourthChildCoversArray.put(PremiumWaiverCoversFourthChildObj);

            JSONObject GlobalCoversFourthChildObj = new JSONObject();
            GlobalCoversFourthChildObj.put("Applicable", "False");
            GlobalCoversFourthChildObj.put("CoverSI", strSumInsured);
            GlobalCoversFourthChildObj.put("CoverRate", "0");
            GlobalCoversFourthChildObj.put("CoverPremium", "0");
            GlobalCoversFourthChildObj.put("CoverGroups", "Global Cover");
            FourthChildCoversArray.put(GlobalCoversFourthChildObj);


            JSONObject MedicallyAdvisedCoversFourthChildObj = new JSONObject();
            MedicallyAdvisedCoversFourthChildObj.put("Applicable", "False");
            MedicallyAdvisedCoversFourthChildObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFourthChildObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFourthChildObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFourthChildObj.put("CoverGroups", "Medically Advised Support Devices");
            FourthChildCoversArray.put(MedicallyAdvisedCoversFourthChildObj);

            JSONObject EmergencyCoversFourthChildObj = new JSONObject();
            EmergencyCoversFourthChildObj.put("Applicable", "False");
            EmergencyCoversFourthChildObj.put("CoverSI", strSumInsured);
            EmergencyCoversFourthChildObj.put("CoverRate", "0");
            EmergencyCoversFourthChildObj.put("CoverPremium", "0");
            EmergencyCoversFourthChildObj.put("CoverGroups", "Emergency Assistance Service");
            FourthChildCoversArray.put(EmergencyCoversFourthChildObj);

            JSONObject HomeCareTreatmentCoversFourthChildObj = new JSONObject();
            HomeCareTreatmentCoversFourthChildObj.put("Applicable", "False");
            HomeCareTreatmentCoversFourthChildObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFourthChildObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFourthChildObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFourthChildObj.put("CoverGroups", "Home Care Treatment");
            FourthChildCoversArray.put(HomeCareTreatmentCoversFourthChildObj);

            JSONObject WellnessBenefitCoversFourthChildObj = new JSONObject();
            WellnessBenefitCoversFourthChildObj.put("Applicable", "False");
            WellnessBenefitCoversFourthChildObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFourthChildObj.put("CoverRate", "0");
            WellnessBenefitCoversFourthChildObj.put("CoverPremium", "0");
            WellnessBenefitCoversFourthChildObj.put("CoverGroups", "Wellness Benefit");
            FourthChildCoversArray.put(WellnessBenefitCoversFourthChildObj);

            JSONObject DiseaseManagementCoversFourthChildObj = new JSONObject();
            DiseaseManagementCoversFourthChildObj.put("Applicable", "False");
            DiseaseManagementCoversFourthChildObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFourthChildObj.put("CoverRate", "0");
            DiseaseManagementCoversFourthChildObj.put("CoverPremium", "0");
            DiseaseManagementCoversFourthChildObj.put("CoverGroups", "Disease Management Program");
            FourthChildCoversArray.put(DiseaseManagementCoversFourthChildObj);
            CoverDetailsFourthChildObj.put("Covers", FourthChildCoversArray);
            FourthChildObj.put("CoverDetails", CoverDetailsFourthChildObj);

            //Mother
            JSONObject MotherObj = new JSONObject();
            MotherObj.put("InsuredType", "Parent");
            MotherObj.put("FirstName", "");
            MotherObj.put("LastName", "");
            MotherObj.put("DOB", strMotherAgeEditText);
            MotherObj.put("Gender", "F");
            MotherObj.put("Relationship", "");
            MotherObj.put("Occupation", "");
            MotherObj.put("NomineeName", "");
            MotherObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsMotherObj = new JSONObject();
            HealthIndicatorsMotherObj.put("PED", "N");
            HealthIndicatorsMotherObj.put("PEDDeclared", "N");
            HealthIndicatorsMotherObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsMotherObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsMotherObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsMotherObj.put("CholesterolLevel", "NA");
            HealthIndicatorsMotherObj.put("BodyMassIndex", "30");
            HealthIndicatorsMotherObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsMotherObj.put("CoMorbidity", "N");
            MotherObj.put("HealthIndicators", HealthIndicatorsMotherObj);

            JSONObject CoverDetailsMotherObj = new JSONObject();
            JSONArray MotherCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversMotherObj = new JSONObject();
            BasicInsuranceCoversMotherObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversMotherObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversMotherObj.put("CoverRate", "0");
            BasicInsuranceCoversMotherObj.put("CoverPremium", "0");
            BasicInsuranceCoversMotherObj.put("CoverGroups", "Basic Insurance Cover");
            MotherCoversArray.put(BasicInsuranceCoversMotherObj);

            JSONObject PersonalAccidentCoversMotherObj = new JSONObject();
            PersonalAccidentCoversMotherObj.put("Applicable", "False");
            PersonalAccidentCoversMotherObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversMotherObj.put("CoverRate", "0");
            PersonalAccidentCoversMotherObj.put("CoverPremium", "0");
            PersonalAccidentCoversMotherObj.put("CoverGroups", "Personal Accident Cover");
            MotherCoversArray.put(PersonalAccidentCoversMotherObj);

            JSONObject CriticalIllnessCoversMotherObj = new JSONObject();
            CriticalIllnessCoversMotherObj.put("Applicable", "False");
            CriticalIllnessCoversMotherObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversMotherObj.put("CoverRate", "0");
            CriticalIllnessCoversMotherObj.put("CoverPremium", "0");
            CriticalIllnessCoversMotherObj.put("CoverGroups", "Critical Illness Cover");
            MotherCoversArray.put(CriticalIllnessCoversMotherObj);


            JSONObject DailyHospitalCoversMotherObj = new JSONObject();
            DailyHospitalCoversMotherObj.put("Applicable", "False");
            DailyHospitalCoversMotherObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversMotherObj.put("CoverRate", "0");
            DailyHospitalCoversMotherObj.put("CoverPremium", "0");
            DailyHospitalCoversMotherObj.put("CoverGroups", "Daily Hospital Cash Cover");
            MotherCoversArray.put(DailyHospitalCoversMotherObj);

            JSONObject ModernCoversMotherObj = new JSONObject();
            ModernCoversMotherObj.put("Applicable", "False");
            ModernCoversMotherObj.put("CoverSI", strSumInsured);
            ModernCoversMotherObj.put("CoverRate", "0");
            ModernCoversMotherObj.put("CoverPremium", "0");
            ModernCoversMotherObj.put("CoverGroups", "Modern Treatments");
            MotherCoversArray.put(ModernCoversMotherObj);
            JSONObject ExtensionPreHospitalizationCoversMotherObj = new JSONObject();
            ExtensionPreHospitalizationCoversMotherObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversMotherObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversMotherObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversMotherObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversMotherObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            MotherCoversArray.put(ExtensionPreHospitalizationCoversMotherObj);

            JSONObject ExtensionPostHospitalizationCoversMotherObj = new JSONObject();
            ExtensionPostHospitalizationCoversMotherObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversMotherObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversMotherObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversMotherObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversMotherObj.put("CoverGroups", "Extension under Post-Hospitalization");
            MotherCoversArray.put(ExtensionPostHospitalizationCoversMotherObj);


            JSONObject MaternityAndChildcareCoversMotherObj = new JSONObject();
            MaternityAndChildcareCoversMotherObj.put("Applicable", "False");
            MaternityAndChildcareCoversMotherObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversMotherObj.put("CoverRate", "0");
            MaternityAndChildcareCoversMotherObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversMotherObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            MotherCoversArray.put(MaternityAndChildcareCoversMotherObj);

            JSONObject CoverageForNonMedicalCoversMotherObj = new JSONObject();
            CoverageForNonMedicalCoversMotherObj.put("Applicable", "False");
            CoverageForNonMedicalCoversMotherObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversMotherObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversMotherObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversMotherObj.put("CoverGroups", "Coverage for Non-Medical Items");
            MotherCoversArray.put(CoverageForNonMedicalCoversMotherObj);

            JSONObject ConditionWaiverCoversMotherObj = new JSONObject();
            ConditionWaiverCoversMotherObj.put("Applicable", "False");
            ConditionWaiverCoversMotherObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversMotherObj.put("CoverRate", "0");
            ConditionWaiverCoversMotherObj.put("CoverPremium", "0");
            ConditionWaiverCoversMotherObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            MotherCoversArray.put(ConditionWaiverCoversMotherObj);

            JSONObject PreExistingDiseaseCoversMotherObj = new JSONObject();
            PreExistingDiseaseCoversMotherObj.put("Applicable", "False");
            PreExistingDiseaseCoversMotherObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversMotherObj.put("CoverRate", "0");
            PreExistingDiseaseCoversMotherObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversMotherObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            MotherCoversArray.put(PreExistingDiseaseCoversMotherObj);

            JSONObject OutpatientDentalWaitingCoversMotherObj = new JSONObject();
            OutpatientDentalWaitingCoversMotherObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversMotherObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversMotherObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversMotherObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversMotherObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            MotherCoversArray.put(OutpatientDentalWaitingCoversMotherObj);

            JSONObject EmergencyTravellingAllowanceCoversMotherObj = new JSONObject();
            EmergencyTravellingAllowanceCoversMotherObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverGroups", "Emergency Travelling Allowance");
            MotherCoversArray.put(EmergencyTravellingAllowanceCoversMotherObj);

            JSONObject SecondOpinionCoversMotherObj = new JSONObject();
            SecondOpinionCoversMotherObj.put("Applicable", "False");
            SecondOpinionCoversMotherObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversMotherObj.put("CoverRate", "0");
            SecondOpinionCoversMotherObj.put("CoverPremium", "0");
            SecondOpinionCoversMotherObj.put("CoverGroups", "Second Opinion");
            MotherCoversArray.put(SecondOpinionCoversMotherObj);

            JSONObject RestCureCoversMotherObj = new JSONObject();
            RestCureCoversMotherObj.put("Applicable", "False");
            RestCureCoversMotherObj.put("CoverSI", strSumInsured);
            RestCureCoversMotherObj.put("CoverRate", "0");
            RestCureCoversMotherObj.put("CoverPremium", "0");
            RestCureCoversMotherObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            MotherCoversArray.put(RestCureCoversMotherObj);

            JSONObject ObesityWeightCoversMotherObj = new JSONObject();
            ObesityWeightCoversMotherObj.put("Applicable", "False");
            ObesityWeightCoversMotherObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversMotherObj.put("CoverRate", "0");
            ObesityWeightCoversMotherObj.put("CoverPremium", "0");
            ObesityWeightCoversMotherObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            MotherCoversArray.put(ObesityWeightCoversMotherObj);

            JSONObject SterilityInfertilityCoversMotherObj = new JSONObject();
            SterilityInfertilityCoversMotherObj.put("Applicable", "False");
            SterilityInfertilityCoversMotherObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversMotherObj.put("CoverRate", "0");
            SterilityInfertilityCoversMotherObj.put("CoverPremium", "0");
            SterilityInfertilityCoversMotherObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            MotherCoversArray.put(SterilityInfertilityCoversMotherObj);

            JSONObject EnhancedOrganDonorCoversMotherObj = new JSONObject();
            EnhancedOrganDonorCoversMotherObj.put("Applicable", "False");
            EnhancedOrganDonorCoversMotherObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversMotherObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversMotherObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversMotherObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            MotherCoversArray.put(EnhancedOrganDonorCoversMotherObj);

            JSONObject PremiumWaiverCoversMotherObj = new JSONObject();
            PremiumWaiverCoversMotherObj.put("Applicable", "False");
            PremiumWaiverCoversMotherObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversMotherObj.put("CoverRate", "0");
            PremiumWaiverCoversMotherObj.put("CoverPremium", "0");
            PremiumWaiverCoversMotherObj.put("CoverGroups", "Premium Waiver");
            MotherCoversArray.put(PremiumWaiverCoversMotherObj);

            JSONObject GlobalCoversMotherObj = new JSONObject();
            GlobalCoversMotherObj.put("Applicable", "False");
            GlobalCoversMotherObj.put("CoverSI", strSumInsured);
            GlobalCoversMotherObj.put("CoverRate", "0");
            GlobalCoversMotherObj.put("CoverPremium", "0");
            GlobalCoversMotherObj.put("CoverGroups", "Global Cover");
            MotherCoversArray.put(GlobalCoversMotherObj);


            JSONObject MedicallyAdvisedCoversMotherObj = new JSONObject();
            MedicallyAdvisedCoversMotherObj.put("Applicable", "False");
            MedicallyAdvisedCoversMotherObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversMotherObj.put("CoverRate", "0");
            MedicallyAdvisedCoversMotherObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversMotherObj.put("CoverGroups", "Medically Advised Support Devices");
            MotherCoversArray.put(MedicallyAdvisedCoversMotherObj);

            JSONObject EmergencyCoversMotherObj = new JSONObject();
            EmergencyCoversMotherObj.put("Applicable", "False");
            EmergencyCoversMotherObj.put("CoverSI", strSumInsured);
            EmergencyCoversMotherObj.put("CoverRate", "0");
            EmergencyCoversMotherObj.put("CoverPremium", "0");
            EmergencyCoversMotherObj.put("CoverGroups", "Emergency Assistance Service");
            MotherCoversArray.put(EmergencyCoversMotherObj);

            JSONObject HomeCareTreatmentCoversMotherObj = new JSONObject();
            HomeCareTreatmentCoversMotherObj.put("Applicable", "False");
            HomeCareTreatmentCoversMotherObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversMotherObj.put("CoverRate", "0");
            HomeCareTreatmentCoversMotherObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversMotherObj.put("CoverGroups", "Home Care Treatment");
            MotherCoversArray.put(HomeCareTreatmentCoversMotherObj);

            JSONObject WellnessBenefitCoversMotherObj = new JSONObject();
            WellnessBenefitCoversMotherObj.put("Applicable", "False");
            WellnessBenefitCoversMotherObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversMotherObj.put("CoverRate", "0");
            WellnessBenefitCoversMotherObj.put("CoverPremium", "0");
            WellnessBenefitCoversMotherObj.put("CoverGroups", "Wellness Benefit");
            MotherCoversArray.put(WellnessBenefitCoversMotherObj);

            JSONObject DiseaseManagementCoversMotherObj = new JSONObject();
            DiseaseManagementCoversMotherObj.put("Applicable", "False");
            DiseaseManagementCoversMotherObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversMotherObj.put("CoverRate", "0");
            DiseaseManagementCoversMotherObj.put("CoverPremium", "0");
            DiseaseManagementCoversMotherObj.put("CoverGroups", "Disease Management Program");
            MotherCoversArray.put(DiseaseManagementCoversMotherObj);
            CoverDetailsMotherObj.put("Covers", MotherCoversArray);
            MotherObj.put("CoverDetails", CoverDetailsMotherObj);
            //father
            JSONObject FatherObj = new JSONObject();
            FatherObj.put("InsuredType", "Parent");
            FatherObj.put("FirstName", "");
            FatherObj.put("LastName", "");
            FatherObj.put("DOB", strFatherAgeEditText);
            FatherObj.put("Gender", "M");
            FatherObj.put("Relationship", "");
            FatherObj.put("Occupation", "");
            FatherObj.put("NomineeName", "");
            FatherObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFatherObj = new JSONObject();
            HealthIndicatorsFatherObj.put("PED", "N");
            HealthIndicatorsFatherObj.put("PEDDeclared", "N");
            HealthIndicatorsFatherObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFatherObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFatherObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFatherObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFatherObj.put("BodyMassIndex", "30");
            HealthIndicatorsFatherObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFatherObj.put("CoMorbidity", "N");
            FatherObj.put("HealthIndicators", HealthIndicatorsFatherObj);

            JSONObject CoverDetailsFatherObj = new JSONObject();
            JSONArray FatherCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversFatherObj = new JSONObject();
            BasicInsuranceCoversFatherObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversFatherObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversFatherObj.put("CoverRate", "0");
            BasicInsuranceCoversFatherObj.put("CoverPremium", "0");
            BasicInsuranceCoversFatherObj.put("CoverGroups", "Basic Insurance Cover");
            FatherCoversArray.put(BasicInsuranceCoversFatherObj);

            JSONObject PersonalAccidentCoversFatherObj = new JSONObject();
            PersonalAccidentCoversFatherObj.put("Applicable", "False");
            PersonalAccidentCoversFatherObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFatherObj.put("CoverRate", "0");
            PersonalAccidentCoversFatherObj.put("CoverPremium", "0");
            PersonalAccidentCoversFatherObj.put("CoverGroups", "Personal Accident Cover");
            FatherCoversArray.put(PersonalAccidentCoversFatherObj);

            JSONObject CriticalIllnessCoversFatherObj = new JSONObject();
            CriticalIllnessCoversFatherObj.put("Applicable", "False");
            CriticalIllnessCoversFatherObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFatherObj.put("CoverRate", "0");
            CriticalIllnessCoversFatherObj.put("CoverPremium", "0");
            CriticalIllnessCoversFatherObj.put("CoverGroups", "Critical Illness Cover");
            FatherCoversArray.put(CriticalIllnessCoversFatherObj);


            JSONObject DailyHospitalCoversFatherObj = new JSONObject();
            DailyHospitalCoversFatherObj.put("Applicable", "False");
            DailyHospitalCoversFatherObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFatherObj.put("CoverRate", "0");
            DailyHospitalCoversFatherObj.put("CoverPremium", "0");
            DailyHospitalCoversFatherObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FatherCoversArray.put(DailyHospitalCoversFatherObj);

            JSONObject ModernCoversFatherObj = new JSONObject();
            ModernCoversFatherObj.put("Applicable", "False");
            ModernCoversFatherObj.put("CoverSI", strSumInsured);
            ModernCoversFatherObj.put("CoverRate", "0");
            ModernCoversFatherObj.put("CoverPremium", "0");
            ModernCoversFatherObj.put("CoverGroups", "Modern Treatments");
            FatherCoversArray.put(ModernCoversFatherObj);
            JSONObject ExtensionPreHospitalizationCoversFatherObj = new JSONObject();
            ExtensionPreHospitalizationCoversFatherObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversFatherObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFatherObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFatherObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFatherObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FatherCoversArray.put(ExtensionPreHospitalizationCoversFatherObj);

            JSONObject ExtensionPostHospitalizationCoversFatherObj = new JSONObject();
            ExtensionPostHospitalizationCoversFatherObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversFatherObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFatherObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFatherObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFatherObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FatherCoversArray.put(ExtensionPostHospitalizationCoversFatherObj);


            JSONObject MaternityAndChildcareCoversFatherObj = new JSONObject();
            MaternityAndChildcareCoversFatherObj.put("Applicable", "False");
            MaternityAndChildcareCoversFatherObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFatherObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFatherObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFatherObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FatherCoversArray.put(MaternityAndChildcareCoversFatherObj);

            JSONObject CoverageForNonMedicalCoversFatherObj = new JSONObject();
            CoverageForNonMedicalCoversFatherObj.put("Applicable", "False");
            CoverageForNonMedicalCoversFatherObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFatherObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFatherObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFatherObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FatherCoversArray.put(CoverageForNonMedicalCoversFatherObj);

            JSONObject ConditionWaiverCoversFatherObj = new JSONObject();
            ConditionWaiverCoversFatherObj.put("Applicable", "False");
            ConditionWaiverCoversFatherObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFatherObj.put("CoverRate", "0");
            ConditionWaiverCoversFatherObj.put("CoverPremium", "0");
            ConditionWaiverCoversFatherObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FatherCoversArray.put(ConditionWaiverCoversFatherObj);

            JSONObject PreExistingDiseaseCoversFatherObj = new JSONObject();
            PreExistingDiseaseCoversFatherObj.put("Applicable", "False");
            PreExistingDiseaseCoversFatherObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFatherObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFatherObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFatherObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FatherCoversArray.put(PreExistingDiseaseCoversFatherObj);

            JSONObject OutpatientDentalWaitingCoversFatherObj = new JSONObject();
            OutpatientDentalWaitingCoversFatherObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversFatherObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFatherObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFatherObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFatherObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FatherCoversArray.put(OutpatientDentalWaitingCoversFatherObj);

            JSONObject EmergencyTravellingAllowanceCoversFatherObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFatherObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverGroups", "Emergency Travelling Allowance");
            FatherCoversArray.put(EmergencyTravellingAllowanceCoversFatherObj);

            JSONObject SecondOpinionCoversFatherObj = new JSONObject();
            SecondOpinionCoversFatherObj.put("Applicable", "False");
            SecondOpinionCoversFatherObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFatherObj.put("CoverRate", "0");
            SecondOpinionCoversFatherObj.put("CoverPremium", "0");
            SecondOpinionCoversFatherObj.put("CoverGroups", "Second Opinion");
            FatherCoversArray.put(SecondOpinionCoversFatherObj);

            JSONObject RestCureCoversFatherObj = new JSONObject();
            RestCureCoversFatherObj.put("Applicable", "False");
            RestCureCoversFatherObj.put("CoverSI", strSumInsured);
            RestCureCoversFatherObj.put("CoverRate", "0");
            RestCureCoversFatherObj.put("CoverPremium", "0");
            RestCureCoversFatherObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FatherCoversArray.put(RestCureCoversFatherObj);

            JSONObject ObesityWeightCoversFatherObj = new JSONObject();
            ObesityWeightCoversFatherObj.put("Applicable", "False");
            ObesityWeightCoversFatherObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFatherObj.put("CoverRate", "0");
            ObesityWeightCoversFatherObj.put("CoverPremium", "0");
            ObesityWeightCoversFatherObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FatherCoversArray.put(ObesityWeightCoversFatherObj);

            JSONObject SterilityInfertilityCoversFatherObj = new JSONObject();
            SterilityInfertilityCoversFatherObj.put("Applicable", "False");
            SterilityInfertilityCoversFatherObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFatherObj.put("CoverRate", "0");
            SterilityInfertilityCoversFatherObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFatherObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FatherCoversArray.put(SterilityInfertilityCoversFatherObj);

            JSONObject EnhancedOrganDonorCoversFatherObj = new JSONObject();
            EnhancedOrganDonorCoversFatherObj.put("Applicable", "False");
            EnhancedOrganDonorCoversFatherObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFatherObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFatherObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFatherObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FatherCoversArray.put(EnhancedOrganDonorCoversFatherObj);

            JSONObject PremiumWaiverCoversFatherObj = new JSONObject();
            PremiumWaiverCoversFatherObj.put("Applicable", "False");
            PremiumWaiverCoversFatherObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFatherObj.put("CoverRate", "0");
            PremiumWaiverCoversFatherObj.put("CoverPremium", "0");
            PremiumWaiverCoversFatherObj.put("CoverGroups", "Premium Waiver");
            FatherCoversArray.put(PremiumWaiverCoversFatherObj);

            JSONObject GlobalCoversFatherObj = new JSONObject();
            GlobalCoversFatherObj.put("Applicable", "False");
            GlobalCoversFatherObj.put("CoverSI", strSumInsured);
            GlobalCoversFatherObj.put("CoverRate", "0");
            GlobalCoversFatherObj.put("CoverPremium", "0");
            GlobalCoversFatherObj.put("CoverGroups", "Global Cover");
            FatherCoversArray.put(GlobalCoversFatherObj);


            JSONObject MedicallyAdvisedCoversFatherObj = new JSONObject();
            MedicallyAdvisedCoversFatherObj.put("Applicable", "False");
            MedicallyAdvisedCoversFatherObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFatherObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFatherObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFatherObj.put("CoverGroups", "Medically Advised Support Devices");
            FatherCoversArray.put(MedicallyAdvisedCoversFatherObj);

            JSONObject EmergencyCoversFatherObj = new JSONObject();
            EmergencyCoversFatherObj.put("Applicable", "False");
            EmergencyCoversFatherObj.put("CoverSI", strSumInsured);
            EmergencyCoversFatherObj.put("CoverRate", "0");
            EmergencyCoversFatherObj.put("CoverPremium", "0");
            EmergencyCoversFatherObj.put("CoverGroups", "Emergency Assistance Service");
            FatherCoversArray.put(EmergencyCoversFatherObj);

            JSONObject HomeCareTreatmentCoversFatherObj = new JSONObject();
            HomeCareTreatmentCoversFatherObj.put("Applicable", "False");
            HomeCareTreatmentCoversFatherObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFatherObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFatherObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFatherObj.put("CoverGroups", "Home Care Treatment");
            FatherCoversArray.put(HomeCareTreatmentCoversFatherObj);

            JSONObject WellnessBenefitCoversFatherObj = new JSONObject();
            WellnessBenefitCoversFatherObj.put("Applicable", "False");
            WellnessBenefitCoversFatherObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFatherObj.put("CoverRate", "0");
            WellnessBenefitCoversFatherObj.put("CoverPremium", "0");
            WellnessBenefitCoversFatherObj.put("CoverGroups", "Wellness Benefit");
            FatherCoversArray.put(WellnessBenefitCoversFatherObj);

            JSONObject DiseaseManagementCoversFatherObj = new JSONObject();
            DiseaseManagementCoversFatherObj.put("Applicable", "False");
            DiseaseManagementCoversFatherObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFatherObj.put("CoverRate", "0");
            DiseaseManagementCoversFatherObj.put("CoverPremium", "0");
            DiseaseManagementCoversFatherObj.put("CoverGroups", "Disease Management Program");
            FatherCoversArray.put(DiseaseManagementCoversFatherObj);
            CoverDetailsFatherObj.put("Covers", FatherCoversArray);
            FatherObj.put("CoverDetails", CoverDetailsFatherObj);

            //motherLaw
            JSONObject MotherLawObj = new JSONObject();
            MotherLawObj.put("InsuredType", "Parent");
            MotherLawObj.put("FirstName", "");
            MotherLawObj.put("LastName", "");
            MotherLawObj.put("DOB", strMotherLawAgeEditText);
            MotherLawObj.put("Gender", "F");
            MotherLawObj.put("Relationship", "");
            MotherLawObj.put("Occupation", "");
            MotherLawObj.put("NomineeName", "");
            MotherLawObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsMotherLawObj = new JSONObject();
            HealthIndicatorsMotherLawObj.put("PED", "N");
            HealthIndicatorsMotherLawObj.put("PEDDeclared", "N");
            HealthIndicatorsMotherLawObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsMotherLawObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsMotherLawObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsMotherLawObj.put("CholesterolLevel", "NA");
            HealthIndicatorsMotherLawObj.put("BodyMassIndex", "30");
            HealthIndicatorsMotherLawObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsMotherLawObj.put("CoMorbidity", "N");
            MotherLawObj.put("HealthIndicators", HealthIndicatorsMotherLawObj);

            JSONObject CoverDetailsMotherLawObj = new JSONObject();
            JSONArray MotherLawCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversMotherLawObj = new JSONObject();
            BasicInsuranceCoversMotherLawObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversMotherLawObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversMotherLawObj.put("CoverRate", "0");
            BasicInsuranceCoversMotherLawObj.put("CoverPremium", "0");
            BasicInsuranceCoversMotherLawObj.put("CoverGroups", "Basic Insurance Cover");
            MotherLawCoversArray.put(BasicInsuranceCoversMotherLawObj);

            JSONObject PersonalAccidentCoversMotherLawObj = new JSONObject();
            PersonalAccidentCoversMotherLawObj.put("Applicable", "False");
            PersonalAccidentCoversMotherLawObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversMotherLawObj.put("CoverRate", "0");
            PersonalAccidentCoversMotherLawObj.put("CoverPremium", "0");
            PersonalAccidentCoversMotherLawObj.put("CoverGroups", "Personal Accident Cover");
            MotherLawCoversArray.put(PersonalAccidentCoversMotherLawObj);

            JSONObject CriticalIllnessCoversMotherLawObj = new JSONObject();
            CriticalIllnessCoversMotherLawObj.put("Applicable", "False");
            CriticalIllnessCoversMotherLawObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversMotherLawObj.put("CoverRate", "0");
            CriticalIllnessCoversMotherLawObj.put("CoverPremium", "0");
            CriticalIllnessCoversMotherLawObj.put("CoverGroups", "Critical Illness Cover");
            MotherLawCoversArray.put(CriticalIllnessCoversMotherLawObj);


            JSONObject DailyHospitalCoversMotherLawObj = new JSONObject();
            DailyHospitalCoversMotherLawObj.put("Applicable", "False");
            DailyHospitalCoversMotherLawObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversMotherLawObj.put("CoverRate", "0");
            DailyHospitalCoversMotherLawObj.put("CoverPremium", "0");
            DailyHospitalCoversMotherLawObj.put("CoverGroups", "Daily Hospital Cash Cover");
            MotherLawCoversArray.put(DailyHospitalCoversMotherLawObj);

            JSONObject ModernCoversMotherLawObj = new JSONObject();
            ModernCoversMotherLawObj.put("Applicable", "False");
            ModernCoversMotherLawObj.put("CoverSI", strSumInsured);
            ModernCoversMotherLawObj.put("CoverRate", "0");
            ModernCoversMotherLawObj.put("CoverPremium", "0");
            ModernCoversMotherLawObj.put("CoverGroups", "Modern Treatments");
            MotherLawCoversArray.put(ModernCoversMotherLawObj);
            JSONObject ExtensionPreHospitalizationCoversMotherLawObj = new JSONObject();
            ExtensionPreHospitalizationCoversMotherLawObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            MotherLawCoversArray.put(ExtensionPreHospitalizationCoversMotherLawObj);

            JSONObject ExtensionPostHospitalizationCoversMotherLawObj = new JSONObject();
            ExtensionPostHospitalizationCoversMotherLawObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverGroups", "Extension under Post-Hospitalization");
            MotherLawCoversArray.put(ExtensionPostHospitalizationCoversMotherLawObj);


            JSONObject MaternityAndChildcareCoversMotherLawObj = new JSONObject();
            MaternityAndChildcareCoversMotherLawObj.put("Applicable", "False");
            MaternityAndChildcareCoversMotherLawObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversMotherLawObj.put("CoverRate", "0");
            MaternityAndChildcareCoversMotherLawObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversMotherLawObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            MotherLawCoversArray.put(MaternityAndChildcareCoversMotherLawObj);

            JSONObject CoverageForNonMedicalCoversMotherLawObj = new JSONObject();
            CoverageForNonMedicalCoversMotherLawObj.put("Applicable", "False");
            CoverageForNonMedicalCoversMotherLawObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversMotherLawObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversMotherLawObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversMotherLawObj.put("CoverGroups", "Coverage for Non-Medical Items");
            MotherLawCoversArray.put(CoverageForNonMedicalCoversMotherLawObj);

            JSONObject ConditionWaiverCoversMotherLawObj = new JSONObject();
            ConditionWaiverCoversMotherLawObj.put("Applicable", "False");
            ConditionWaiverCoversMotherLawObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversMotherLawObj.put("CoverRate", "0");
            ConditionWaiverCoversMotherLawObj.put("CoverPremium", "0");
            ConditionWaiverCoversMotherLawObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            MotherLawCoversArray.put(ConditionWaiverCoversMotherLawObj);

            JSONObject PreExistingDiseaseCoversMotherLawObj = new JSONObject();
            PreExistingDiseaseCoversMotherLawObj.put("Applicable", "False");
            PreExistingDiseaseCoversMotherLawObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversMotherLawObj.put("CoverRate", "0");
            PreExistingDiseaseCoversMotherLawObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversMotherLawObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            MotherLawCoversArray.put(PreExistingDiseaseCoversMotherLawObj);

            JSONObject OutpatientDentalWaitingCoversMotherLawObj = new JSONObject();
            OutpatientDentalWaitingCoversMotherLawObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            MotherLawCoversArray.put(OutpatientDentalWaitingCoversMotherLawObj);

            JSONObject EmergencyTravellingAllowanceCoversMotherLawObj = new JSONObject();
            EmergencyTravellingAllowanceCoversMotherLawObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverGroups", "Emergency Travelling Allowance");
            MotherLawCoversArray.put(EmergencyTravellingAllowanceCoversMotherLawObj);

            JSONObject SecondOpinionCoversMotherLawObj = new JSONObject();
            SecondOpinionCoversMotherLawObj.put("Applicable", "False");
            SecondOpinionCoversMotherLawObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversMotherLawObj.put("CoverRate", "0");
            SecondOpinionCoversMotherLawObj.put("CoverPremium", "0");
            SecondOpinionCoversMotherLawObj.put("CoverGroups", "Second Opinion");
            MotherLawCoversArray.put(SecondOpinionCoversMotherLawObj);

            JSONObject RestCureCoversMotherLawObj = new JSONObject();
            RestCureCoversMotherLawObj.put("Applicable", "False");
            RestCureCoversMotherLawObj.put("CoverSI", strSumInsured);
            RestCureCoversMotherLawObj.put("CoverRate", "0");
            RestCureCoversMotherLawObj.put("CoverPremium", "0");
            RestCureCoversMotherLawObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            MotherLawCoversArray.put(RestCureCoversMotherLawObj);

            JSONObject ObesityWeightCoversMotherLawObj = new JSONObject();
            ObesityWeightCoversMotherLawObj.put("Applicable", "False");
            ObesityWeightCoversMotherLawObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversMotherLawObj.put("CoverRate", "0");
            ObesityWeightCoversMotherLawObj.put("CoverPremium", "0");
            ObesityWeightCoversMotherLawObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            MotherLawCoversArray.put(ObesityWeightCoversMotherLawObj);

            JSONObject SterilityInfertilityCoversMotherLawObj = new JSONObject();
            SterilityInfertilityCoversMotherLawObj.put("Applicable", "False");
            SterilityInfertilityCoversMotherLawObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversMotherLawObj.put("CoverRate", "0");
            SterilityInfertilityCoversMotherLawObj.put("CoverPremium", "0");
            SterilityInfertilityCoversMotherLawObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            MotherLawCoversArray.put(SterilityInfertilityCoversMotherLawObj);

            JSONObject EnhancedOrganDonorCoversMotherLawObj = new JSONObject();
            EnhancedOrganDonorCoversMotherLawObj.put("Applicable", "False");
            EnhancedOrganDonorCoversMotherLawObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversMotherLawObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversMotherLawObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversMotherLawObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            MotherLawCoversArray.put(EnhancedOrganDonorCoversMotherLawObj);

            JSONObject PremiumWaiverCoversMotherLawObj = new JSONObject();
            PremiumWaiverCoversMotherLawObj.put("Applicable", "False");
            PremiumWaiverCoversMotherLawObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversMotherLawObj.put("CoverRate", "0");
            PremiumWaiverCoversMotherLawObj.put("CoverPremium", "0");
            PremiumWaiverCoversMotherLawObj.put("CoverGroups", "Premium Waiver");
            MotherLawCoversArray.put(PremiumWaiverCoversMotherLawObj);

            JSONObject GlobalCoversMotherLawObj = new JSONObject();
            GlobalCoversMotherLawObj.put("Applicable", "False");
            GlobalCoversMotherLawObj.put("CoverSI", strSumInsured);
            GlobalCoversMotherLawObj.put("CoverRate", "0");
            GlobalCoversMotherLawObj.put("CoverPremium", "0");
            GlobalCoversMotherLawObj.put("CoverGroups", "Global Cover");
            MotherLawCoversArray.put(GlobalCoversMotherLawObj);


            JSONObject MedicallyAdvisedCoversMotherLawObj = new JSONObject();
            MedicallyAdvisedCoversMotherLawObj.put("Applicable", "False");
            MedicallyAdvisedCoversMotherLawObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversMotherLawObj.put("CoverRate", "0");
            MedicallyAdvisedCoversMotherLawObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversMotherLawObj.put("CoverGroups", "Medically Advised Support Devices");
            MotherLawCoversArray.put(MedicallyAdvisedCoversMotherLawObj);

            JSONObject EmergencyCoversMotherLawObj = new JSONObject();
            EmergencyCoversMotherLawObj.put("Applicable", "False");
            EmergencyCoversMotherLawObj.put("CoverSI", strSumInsured);
            EmergencyCoversMotherLawObj.put("CoverRate", "0");
            EmergencyCoversMotherLawObj.put("CoverPremium", "0");
            EmergencyCoversMotherLawObj.put("CoverGroups", "Emergency Assistance Service");
            MotherLawCoversArray.put(EmergencyCoversMotherLawObj);

            JSONObject HomeCareTreatmentCoversMotherLawObj = new JSONObject();
            HomeCareTreatmentCoversMotherLawObj.put("Applicable", "False");
            HomeCareTreatmentCoversMotherLawObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversMotherLawObj.put("CoverRate", "0");
            HomeCareTreatmentCoversMotherLawObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversMotherLawObj.put("CoverGroups", "Home Care Treatment");
            MotherLawCoversArray.put(HomeCareTreatmentCoversMotherLawObj);

            JSONObject WellnessBenefitCoversMotherLawObj = new JSONObject();
            WellnessBenefitCoversMotherLawObj.put("Applicable", "False");
            WellnessBenefitCoversMotherLawObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversMotherLawObj.put("CoverRate", "0");
            WellnessBenefitCoversMotherLawObj.put("CoverPremium", "0");
            WellnessBenefitCoversMotherLawObj.put("CoverGroups", "Wellness Benefit");
            MotherLawCoversArray.put(WellnessBenefitCoversMotherLawObj);

            JSONObject DiseaseManagementCoversMotherLawObj = new JSONObject();
            DiseaseManagementCoversMotherLawObj.put("Applicable", "False");
            DiseaseManagementCoversMotherLawObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversMotherLawObj.put("CoverRate", "0");
            DiseaseManagementCoversMotherLawObj.put("CoverPremium", "0");
            DiseaseManagementCoversMotherLawObj.put("CoverGroups", "Disease Management Program");
            MotherLawCoversArray.put(DiseaseManagementCoversMotherLawObj);
            CoverDetailsMotherLawObj.put("Covers", MotherLawCoversArray);
            MotherLawObj.put("CoverDetails", CoverDetailsMotherLawObj);


            //FatherLaw
            JSONObject FatherLawObj = new JSONObject();
            FatherLawObj.put("InsuredType", "Parent");
            FatherLawObj.put("FirstName", "");
            FatherLawObj.put("LastName", "");
            FatherLawObj.put("DOB", strFatherLawAgeEditText);
            FatherLawObj.put("Gender", "M");
            FatherLawObj.put("Relationship", "");
            FatherLawObj.put("Occupation", "");
            FatherLawObj.put("NomineeName", "");
            FatherLawObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFatherLawObj = new JSONObject();
            HealthIndicatorsFatherLawObj.put("PED", "N");
            HealthIndicatorsFatherLawObj.put("PEDDeclared", "N");
            HealthIndicatorsFatherLawObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFatherLawObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFatherLawObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFatherLawObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFatherLawObj.put("BodyMassIndex", "30");
            HealthIndicatorsFatherLawObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFatherLawObj.put("CoMorbidity", "N");
            FatherLawObj.put("HealthIndicators", HealthIndicatorsFatherLawObj);

            JSONObject CoverDetailsFatherLawObj = new JSONObject();
            JSONArray FatherLawCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversFatherLawObj = new JSONObject();
            BasicInsuranceCoversFatherLawObj.put("Applicable", BasicStatus);
            BasicInsuranceCoversFatherLawObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversFatherLawObj.put("CoverRate", "0");
            BasicInsuranceCoversFatherLawObj.put("CoverPremium", "0");
            BasicInsuranceCoversFatherLawObj.put("CoverGroups", "Basic Insurance Cover");
            FatherLawCoversArray.put(BasicInsuranceCoversFatherLawObj);

            JSONObject PersonalAccidentCoversFatherLawObj = new JSONObject();
            PersonalAccidentCoversFatherLawObj.put("Applicable", "False");
            PersonalAccidentCoversFatherLawObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFatherLawObj.put("CoverRate", "0");
            PersonalAccidentCoversFatherLawObj.put("CoverPremium", "0");
            PersonalAccidentCoversFatherLawObj.put("CoverGroups", "Personal Accident Cover");
            FatherLawCoversArray.put(PersonalAccidentCoversFatherLawObj);

            JSONObject CriticalIllnessCoversFatherLawObj = new JSONObject();
            CriticalIllnessCoversFatherLawObj.put("Applicable", "False");
            CriticalIllnessCoversFatherLawObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFatherLawObj.put("CoverRate", "0");
            CriticalIllnessCoversFatherLawObj.put("CoverPremium", "0");
            CriticalIllnessCoversFatherLawObj.put("CoverGroups", "Critical Illness Cover");
            FatherLawCoversArray.put(CriticalIllnessCoversFatherLawObj);


            JSONObject DailyHospitalCoversFatherLawObj = new JSONObject();
            DailyHospitalCoversFatherLawObj.put("Applicable", "False");
            DailyHospitalCoversFatherLawObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFatherLawObj.put("CoverRate", "0");
            DailyHospitalCoversFatherLawObj.put("CoverPremium", "0");
            DailyHospitalCoversFatherLawObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FatherLawCoversArray.put(DailyHospitalCoversFatherLawObj);

            JSONObject ModernCoversFatherLawObj = new JSONObject();
            ModernCoversFatherLawObj.put("Applicable", "False");
            ModernCoversFatherLawObj.put("CoverSI", strSumInsured);
            ModernCoversFatherLawObj.put("CoverRate", "0");
            ModernCoversFatherLawObj.put("CoverPremium", "0");
            ModernCoversFatherLawObj.put("CoverGroups", "Modern Treatments");
            FatherLawCoversArray.put(ModernCoversFatherLawObj);
            JSONObject ExtensionPreHospitalizationCoversFatherLawObj = new JSONObject();
            ExtensionPreHospitalizationCoversFatherLawObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FatherLawCoversArray.put(ExtensionPreHospitalizationCoversFatherLawObj);

            JSONObject ExtensionPostHospitalizationCoversFatherLawObj = new JSONObject();
            ExtensionPostHospitalizationCoversFatherLawObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FatherLawCoversArray.put(ExtensionPostHospitalizationCoversFatherLawObj);


            JSONObject MaternityAndChildcareCoversFatherLawObj = new JSONObject();
            MaternityAndChildcareCoversFatherLawObj.put("Applicable", "False");
            MaternityAndChildcareCoversFatherLawObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFatherLawObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFatherLawObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFatherLawObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FatherLawCoversArray.put(MaternityAndChildcareCoversFatherLawObj);

            JSONObject CoverageForNonMedicalCoversFatherLawObj = new JSONObject();
            CoverageForNonMedicalCoversFatherLawObj.put("Applicable", "False");
            CoverageForNonMedicalCoversFatherLawObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFatherLawObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFatherLawObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFatherLawObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FatherLawCoversArray.put(CoverageForNonMedicalCoversFatherLawObj);

            JSONObject ConditionWaiverCoversFatherLawObj = new JSONObject();
            ConditionWaiverCoversFatherLawObj.put("Applicable", "False");
            ConditionWaiverCoversFatherLawObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFatherLawObj.put("CoverRate", "0");
            ConditionWaiverCoversFatherLawObj.put("CoverPremium", "0");
            ConditionWaiverCoversFatherLawObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FatherLawCoversArray.put(ConditionWaiverCoversFatherLawObj);

            JSONObject PreExistingDiseaseCoversFatherLawObj = new JSONObject();
            PreExistingDiseaseCoversFatherLawObj.put("Applicable", "False");
            PreExistingDiseaseCoversFatherLawObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFatherLawObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFatherLawObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFatherLawObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FatherLawCoversArray.put(PreExistingDiseaseCoversFatherLawObj);

            JSONObject OutpatientDentalWaitingCoversFatherLawObj = new JSONObject();
            OutpatientDentalWaitingCoversFatherLawObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FatherLawCoversArray.put(OutpatientDentalWaitingCoversFatherLawObj);

            JSONObject EmergencyTravellingAllowanceCoversFatherLawObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFatherLawObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverGroups", "Emergency Travelling Allowance");
            FatherLawCoversArray.put(EmergencyTravellingAllowanceCoversFatherLawObj);

            JSONObject SecondOpinionCoversFatherLawObj = new JSONObject();
            SecondOpinionCoversFatherLawObj.put("Applicable", "False");
            SecondOpinionCoversFatherLawObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFatherLawObj.put("CoverRate", "0");
            SecondOpinionCoversFatherLawObj.put("CoverPremium", "0");
            SecondOpinionCoversFatherLawObj.put("CoverGroups", "Second Opinion");
            FatherLawCoversArray.put(SecondOpinionCoversFatherLawObj);

            JSONObject RestCureCoversFatherLawObj = new JSONObject();
            RestCureCoversFatherLawObj.put("Applicable", "False");
            RestCureCoversFatherLawObj.put("CoverSI", strSumInsured);
            RestCureCoversFatherLawObj.put("CoverRate", "0");
            RestCureCoversFatherLawObj.put("CoverPremium", "0");
            RestCureCoversFatherLawObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FatherLawCoversArray.put(RestCureCoversFatherLawObj);

            JSONObject ObesityWeightCoversFatherLawObj = new JSONObject();
            ObesityWeightCoversFatherLawObj.put("Applicable", "False");
            ObesityWeightCoversFatherLawObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFatherLawObj.put("CoverRate", "0");
            ObesityWeightCoversFatherLawObj.put("CoverPremium", "0");
            ObesityWeightCoversFatherLawObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FatherLawCoversArray.put(ObesityWeightCoversFatherLawObj);

            JSONObject SterilityInfertilityCoversFatherLawObj = new JSONObject();
            SterilityInfertilityCoversFatherLawObj.put("Applicable", "False");
            SterilityInfertilityCoversFatherLawObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFatherLawObj.put("CoverRate", "0");
            SterilityInfertilityCoversFatherLawObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFatherLawObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FatherLawCoversArray.put(SterilityInfertilityCoversFatherLawObj);

            JSONObject EnhancedOrganDonorCoversFatherLawObj = new JSONObject();
            EnhancedOrganDonorCoversFatherLawObj.put("Applicable", "False");
            EnhancedOrganDonorCoversFatherLawObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFatherLawObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFatherLawObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFatherLawObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FatherLawCoversArray.put(EnhancedOrganDonorCoversFatherLawObj);

            JSONObject PremiumWaiverCoversFatherLawObj = new JSONObject();
            PremiumWaiverCoversFatherLawObj.put("Applicable", "False");
            PremiumWaiverCoversFatherLawObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFatherLawObj.put("CoverRate", "0");
            PremiumWaiverCoversFatherLawObj.put("CoverPremium", "0");
            PremiumWaiverCoversFatherLawObj.put("CoverGroups", "Premium Waiver");
            FatherLawCoversArray.put(PremiumWaiverCoversFatherLawObj);

            JSONObject GlobalCoversFatherLawObj = new JSONObject();
            GlobalCoversFatherLawObj.put("Applicable", "False");
            GlobalCoversFatherLawObj.put("CoverSI", strSumInsured);
            GlobalCoversFatherLawObj.put("CoverRate", "0");
            GlobalCoversFatherLawObj.put("CoverPremium", "0");
            GlobalCoversFatherLawObj.put("CoverGroups", "Global Cover");
            FatherLawCoversArray.put(GlobalCoversFatherLawObj);


            JSONObject MedicallyAdvisedCoversFatherLawObj = new JSONObject();
            MedicallyAdvisedCoversFatherLawObj.put("Applicable", "False");
            MedicallyAdvisedCoversFatherLawObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFatherLawObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFatherLawObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFatherLawObj.put("CoverGroups", "Medically Advised Support Devices");
            FatherLawCoversArray.put(MedicallyAdvisedCoversFatherLawObj);

            JSONObject EmergencyCoversFatherLawObj = new JSONObject();
            EmergencyCoversFatherLawObj.put("Applicable", "False");
            EmergencyCoversFatherLawObj.put("CoverSI", strSumInsured);
            EmergencyCoversFatherLawObj.put("CoverRate", "0");
            EmergencyCoversFatherLawObj.put("CoverPremium", "0");
            EmergencyCoversFatherLawObj.put("CoverGroups", "Emergency Assistance Service");
            FatherLawCoversArray.put(EmergencyCoversFatherLawObj);

            JSONObject HomeCareTreatmentCoversFatherLawObj = new JSONObject();
            HomeCareTreatmentCoversFatherLawObj.put("Applicable", "False");
            HomeCareTreatmentCoversFatherLawObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFatherLawObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFatherLawObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFatherLawObj.put("CoverGroups", "Home Care Treatment");
            FatherLawCoversArray.put(HomeCareTreatmentCoversFatherLawObj);

            JSONObject WellnessBenefitCoversFatherLawObj = new JSONObject();
            WellnessBenefitCoversFatherLawObj.put("Applicable", "False");
            WellnessBenefitCoversFatherLawObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFatherLawObj.put("CoverRate", "0");
            WellnessBenefitCoversFatherLawObj.put("CoverPremium", "0");
            WellnessBenefitCoversFatherLawObj.put("CoverGroups", "Wellness Benefit");
            FatherLawCoversArray.put(WellnessBenefitCoversFatherLawObj);

            JSONObject DiseaseManagementCoversFatherLawObj = new JSONObject();
            DiseaseManagementCoversFatherLawObj.put("Applicable", "False");
            DiseaseManagementCoversFatherLawObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFatherLawObj.put("CoverRate", "0");
            DiseaseManagementCoversFatherLawObj.put("CoverPremium", "0");
            DiseaseManagementCoversFatherLawObj.put("CoverGroups", "Disease Management Program");
            FatherLawCoversArray.put(DiseaseManagementCoversFatherLawObj);
            CoverDetailsFatherLawObj.put("Covers", FatherLawCoversArray);
            FatherLawObj.put("CoverDetails", CoverDetailsFatherLawObj);

            if (str_policyType_spinner.equals("Individual")) {
                if (strCheckBoxSelf.equals("Checked") || strCheckBoxSpouse.equals("Checked") || strCheckBoxMother.equals("Checked") || strCheckBoxFather.equals("Checked") || strCheckBoxMotherLaw.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                    InsuredDetailsGroupArray.put(InsuredDetailsObj);
                }
            } else {
                if (strCheckBoxSelf.equals("Checked")) {
                    InsuredDetailsGroupArray.put(InsuredDetailsObj);
                }
                if (strCheckBoxSpouse.equals("Checked")) {
                    InsuredDetailsGroupArray.put(SecondAdultObj);
                }
                if (mCounter == 1) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                }
                if (mCounter == 2) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                    InsuredDetailsGroupArray.put(SecondChildObj);
                }
                if (mCounter == 3) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                    InsuredDetailsGroupArray.put(SecondChildObj);
                    InsuredDetailsGroupArray.put(ThirdChildObj);
                }
                if (mCounter == 4) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                    InsuredDetailsGroupArray.put(SecondChildObj);
                    InsuredDetailsGroupArray.put(ThirdChildObj);
                    InsuredDetailsGroupArray.put(FourthChildObj);
                }
                if (strCheckBoxMother.equals("Checked")) {
                    InsuredDetailsGroupArray.put(MotherObj);
                }
                if (strCheckBoxFather.equals("Checked")) {
                    InsuredDetailsGroupArray.put(FatherObj);
                }
                if (strCheckBoxMotherLaw.equals("Checked")) {
                    InsuredDetailsGroupArray.put(MotherLawObj);
                }
                if (strCheckBoxFatherLaw.equals("Checked")) {
                    InsuredDetailsGroupArray.put(FatherLawObj);
                }
            }
//            InsuredDetailsGroupArray.put(InsuredDetailsObj);
            InsuredDetailsObject.put("InsuredDetailsGroup", InsuredDetailsGroupArray);
            RisksDataObject.put("InsuredDetails", InsuredDetailsObject);

            //otherLoading
            JSONObject OtherLoadingsObject = new JSONObject();
            JSONObject OtherLoadingGroupObject = new JSONObject();
            JSONObject OtherLoadingGroupDataObject = new JSONObject();
            OtherLoadingGroupDataObject.put("LoadingAmount", "0");
            OtherLoadingGroupDataObject.put("LoadingRate", "0");
            OtherLoadingGroupDataObject.put("SumInsured", "0");
            OtherLoadingGroupDataObject.put("Rate", "0");
            OtherLoadingGroupDataObject.put("Premium", "0");
            OtherLoadingGroupDataObject.put("Applicable", "False");
            OtherLoadingGroupDataObject.put("Description", "NULL");
            OtherLoadingGroupObject.put("OtherLoadingGroupData", OtherLoadingGroupDataObject);
            OtherLoadingsObject.put("OtherLoadingGroup", OtherLoadingGroupObject);

            RisksDataObject.put("OtherLoadings", OtherLoadingsObject);
//            RiskObject.put("RisksData",RisksDataObject);
//            RisksObject.put("Risks",RiskObject);
            //OtherDiscounts
            JSONObject OtherDiscountsObject = new JSONObject();
            JSONArray OtherDiscountGroupArray = new JSONArray();
            JSONObject TreatmentObject = new JSONObject();
            TreatmentObject.put("DiscountAmount", "0");
            TreatmentObject.put("DiscountRate", "0");
            TreatmentObject.put("SumInsured", strSumInsured);
            TreatmentObject.put("Rate", "0");
            TreatmentObject.put("Premium", "0");
            TreatmentObject.put("Applicable", "False");
            TreatmentObject.put("Description", "Treatment only in tiered network");
            OtherDiscountGroupArray.put(TreatmentObject);

            JSONObject CoPaymentObject = new JSONObject();
            CoPaymentObject.put("DiscountAmount", "0");
            CoPaymentObject.put("DiscountRate", "0");
            CoPaymentObject.put("SumInsured", strSumInsured);
            CoPaymentObject.put("Rate", "0");
            CoPaymentObject.put("Premium", "0");
            CoPaymentObject.put("Applicable", "False");
            CoPaymentObject.put("Description", "Co-payment");
            OtherDiscountGroupArray.put(CoPaymentObject);


            JSONObject LongObject = new JSONObject();
            LongObject.put("DiscountAmount", "0");
            LongObject.put("DiscountRate", "0");
            LongObject.put("SumInsured", strSumInsured);
            LongObject.put("Rate", "0");
            LongObject.put("Premium", "0");
            LongObject.put("Applicable", "False");
            LongObject.put("Description", "Long term discount");
            OtherDiscountGroupArray.put(LongObject);

            JSONObject FamilyDiscountObject = new JSONObject();
            FamilyDiscountObject.put("DiscountAmount", "0");
            FamilyDiscountObject.put("DiscountRate", "0");
            FamilyDiscountObject.put("SumInsured", strSumInsured);
            FamilyDiscountObject.put("Rate", "0");
            FamilyDiscountObject.put("Premium", "0");
            FamilyDiscountObject.put("Applicable", "False");
            FamilyDiscountObject.put("Description", "Family Discount");
            OtherDiscountGroupArray.put(FamilyDiscountObject);

            JSONObject SubCategoryObject = new JSONObject();
            SubCategoryObject.put("DiscountAmount", "0");
            SubCategoryObject.put("DiscountRate", "0");
            SubCategoryObject.put("SumInsured", strSumInsured);
            SubCategoryObject.put("Rate", "0");
            SubCategoryObject.put("Premium", "0");
            SubCategoryObject.put("Applicable", "False");
            SubCategoryObject.put("Description", "Sub Category Discount");
            OtherDiscountGroupArray.put(SubCategoryObject);


            JSONObject DirectPolicyObject = new JSONObject();
            DirectPolicyObject.put("DiscountAmount", "0");
            DirectPolicyObject.put("DiscountRate", "0");
            DirectPolicyObject.put("SumInsured", strSumInsured);
            DirectPolicyObject.put("Rate", "0");
            DirectPolicyObject.put("Premium", "0");
            DirectPolicyObject.put("Applicable", "True");
            DirectPolicyObject.put("Description", "Direct Policy Discount");
            OtherDiscountGroupArray.put(DirectPolicyObject);

            JSONObject LoyaltyDiscountObject = new JSONObject();
            LoyaltyDiscountObject.put("DiscountAmount", "0");
            LoyaltyDiscountObject.put("DiscountRate", "0");
            LoyaltyDiscountObject.put("SumInsured", strSumInsured);
            LoyaltyDiscountObject.put("Rate", "0");
            LoyaltyDiscountObject.put("Premium", "0");
            LoyaltyDiscountObject.put("Applicable", "False");
            LoyaltyDiscountObject.put("Description", "Loyalty Discount");
            OtherDiscountGroupArray.put(LoyaltyDiscountObject);

            JSONObject EmployeeDiscountObject = new JSONObject();
            EmployeeDiscountObject.put("DiscountAmount", "0");
            EmployeeDiscountObject.put("DiscountRate", "0");
            EmployeeDiscountObject.put("SumInsured", strSumInsured);
            EmployeeDiscountObject.put("Rate", "0");
            EmployeeDiscountObject.put("Premium", "0");
            EmployeeDiscountObject.put("Applicable", "False");
            EmployeeDiscountObject.put("Description", "Employee Discount");
            OtherDiscountGroupArray.put(EmployeeDiscountObject);

            JSONObject OrganDonorDiscountObject = new JSONObject();
            OrganDonorDiscountObject.put("DiscountAmount", "0");
            OrganDonorDiscountObject.put("DiscountRate", "0");
            OrganDonorDiscountObject.put("SumInsured", strSumInsured);
            OrganDonorDiscountObject.put("Rate", "0");
            OrganDonorDiscountObject.put("Premium", "0");
            OrganDonorDiscountObject.put("Applicable", "False");
            OrganDonorDiscountObject.put("Description", "Organ Donor Discount");
            OtherDiscountGroupArray.put(OrganDonorDiscountObject);

            OtherDiscountsObject.put("OtherDiscountGroup", OtherDiscountGroupArray);
            RisksDataObject.put("OtherDiscounts", OtherDiscountsObject);
            RiskObject.put("RisksData", RisksDataObject);
            RisksObject.put("Risk", RiskObject);
            ProductObject.put("Risks", RisksObject);

            RootObject.put("Product", ProductObject);
            //PaymentDetails
            JSONObject PaymentDetailsObj = new JSONObject();
            JSONObject PaymentEntryObj = new JSONObject();
            PaymentEntryObj.put("PaymentId", "NULL");
            PaymentEntryObj.put("MICRCheque", "NULL");
            PaymentEntryObj.put("InstrumentDate", "NULL");
            PaymentEntryObj.put("DraweeBankName", "NULL");
            PaymentEntryObj.put("HOUSEBANKNAME", "NULL");
            PaymentEntryObj.put("AmountPaid", "NULL");
            PaymentEntryObj.put("PaymentType", "NULL");
            PaymentEntryObj.put("PaymentMode", "NULL");
            PaymentEntryObj.put("InstrumentNo", "NULL");
            PaymentEntryObj.put("Status", "NULL");
            PaymentEntryObj.put("DepositSlipNo", "NULL");
            PaymentEntryObj.put("PayerType", "NULL");
            PaymentDetailsObj.put("PaymentEntry", PaymentEntryObj);
            RootObject.put("PaymentDetails", PaymentDetailsObj);
            //Error
            JSONObject ErrorsObj = new JSONObject();
            ErrorsObj.put("ErrorCode", "0");
            ErrorsObj.put("ErrDescription", "NULL");
            RootObject.put("Errors", ErrorsObj);

            //mainObject
            object.put("Root", RootObject);
            Log.e("objectApi", String.valueOf(object));
        }
        catch (Exception e) {
            e.printStackTrace();
        }
        ProjectVolleyRequest req = new ProjectVolleyRequest(NewCHIAddOns.this, object, UrlHealthConstants.revisedCHIURL, new ResponseListener() {
            @Override
            public void onSuccess(JSONObject object, int Tag) {
                try {
                    JSONObject RootJsonObject = object.getJSONObject("Root");
                    JSONObject ErrorsJsonObject = RootJsonObject.getJSONObject("Errors");
                    String ErrDescription = ErrorsJsonObject.getString("ErrDescription");
                    if (ErrDescription.equals("")) {
                        if (Tag == RequestHealthConstants.RevisedCHIQuotation) {
                            try {
                                JSONObject CustomerJsonObject = RootJsonObject.getJSONObject("Customer");
                                Log.e("CustomerJsonObject", CustomerJsonObject.toString());
                                JSONObject ProductJsonObject = RootJsonObject.getJSONObject("Product");
                                Log.e("ProductJsonObject", ProductJsonObject.toString());
                                JSONObject PremiumCalculationJsonObject = ProductJsonObject.getJSONObject("PremiumCalculation");
                                String strTotalPremiumSecond = PremiumCalculationJsonObject.getString("TotalPremium");
                                TotalPremiumSecond.setText(strTotalPremiumSecond + " " + "(1Year)");
                                Log.e("strTotalPremiumSecond", strTotalPremiumSecond);

                            } catch (JSONException e) {
                                e.printStackTrace();
                            }
                        }
                    } else {
                        Toast.makeText(getApplication(), "" + ErrDescription, Toast.LENGTH_SHORT).show();
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }

            @Override
            public void onError(VolleyError error, int Tag) {

            }
        }, RequestHealthConstants.RevisedCHIQuotation);
        req.execute();
    }
    private void HealthQuoteCardAmount() {
        if (str_policyType_spinner.equals("Individual")) {
            if (strCheckBoxSpouse.equals("Checked")) {
                strGender = "F";
                strSelfAgeEditText = strSpouseAgeEditText;
            } else if (strCheckBoxMother.equals("Checked")) {
                strGender = "F";
                strSelfAgeEditText = strMotherAgeEditText;
            } else if (strCheckBoxFather.equals("Checked")) {
                strGender = "M";
                strSelfAgeEditText = strFatherAgeEditText;
            } else if (strCheckBoxMotherLaw.equals("Checked")) {
                strGender = "F";
                strSelfAgeEditText = strMotherLawAgeEditText;
            } else if (strCheckBoxFatherLaw.equals("Checked")) {
                strGender = "M";
                strSelfAgeEditText = strFatherLawAgeEditText;
            }
        }

        if (strCheckBoxSelf.equals("Checked") && strCheckBoxSpouse.equals("Checked")) {
            str_policyType_spinner1 = str_policyType_spinner;
        } else {
            if (strCheckBoxSelf.equals("Checked") || strCheckBoxSpouse.equals("Checked")) {
                if (strCheckBoxMother.equals("Checked") && strCheckBoxFather.equals("Checked")) {
                    str_policyType_spinner1 = "Family Floater";
                }else if(strCheckBoxMotherLaw.equals("Checked") && strCheckBoxFatherLaw.equals("Checked")){
                    str_policyType_spinner1 = "Family Floater";
                }else if (strCheckBoxMother.equals("Checked") || strCheckBoxFather.equals("Checked") || strCheckBoxMotherLaw.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                    str_policyType_spinner1 = "Individual";
                } else {
                    str_policyType_spinner1 = str_policyType_spinner;
                }
            } else {
                str_policyType_spinner1 = str_policyType_spinner;
            }
        }
        JSONObject object = new JSONObject();
        try {
            JSONObject RootObject = new JSONObject();
            //Authentication
            JSONObject AuthenticationObject = new JSONObject();
//            AuthenticationObject.put("WACode", "20000001");
//            AuthenticationObject.put("WAAppCode", "30000011");
            AuthenticationObject.put("WACode","20000149");
            AuthenticationObject.put("WAAppCode","30000149");
            AuthenticationObject.put("WAUserID", "USER01");
            AuthenticationObject.put("WAUserPwd", "pass@123");
            AuthenticationObject.put("WAType", "0");
            RootObject.put("Authentication", AuthenticationObject);
            //Customer
            JSONObject CustomerObject = new JSONObject();
            CustomerObject.put("CustomerType", "");
            CustomerObject.put("CustomerName", "");
            CustomerObject.put("DOB", "");
            CustomerObject.put("Gender", "");
            CustomerObject.put("CanBeParent", "");
            CustomerObject.put("ContactTelephoneSTD", "");
            CustomerObject.put("MobileNo", "");
            CustomerObject.put("Emailid", "");
            CustomerObject.put("PresentAddressLine1", "");
            CustomerObject.put("PresentAddressLine2", "");
            CustomerObject.put("PresentStateCode", "");
            CustomerObject.put("PresentCityDistCode", "");
            CustomerObject.put("PresentPinCode", "");
            CustomerObject.put("PermanentAddressLine1", "");
            CustomerObject.put("PermanentAddressLine2", "");
            CustomerObject.put("PermanentStateCode", "");
            CustomerObject.put("PermanentCityDistCode", "");
            CustomerObject.put("PermanentPinCode", "");
            CustomerObject.put("CustGSTNo", "NULL");
            CustomerObject.put("ProductName", "Complete HealthCare Insurance");
            CustomerObject.put("InstrumentNo", "NULL");
            CustomerObject.put("InstrumentDate", "NULL");
            CustomerObject.put("BankID", "NULL");
            CustomerObject.put("PosPolicyNo", "");
            CustomerObject.put("ProductCode", "2825");
            CustomerObject.put("WAURN", "NULL");
            CustomerObject.put("NomineeName", "");
            CustomerObject.put("NomineeRelation", "");
            CustomerObject.put("PANNo", "NULL");
            CustomerObject.put("AadhaarNo", "");
            CustomerObject.put("EIA", "NULL");
            CustomerObject.put("CKYCNo", "");
            CustomerObject.put("Ref_No_Unique_KYC", "");
            RootObject.put("Customer", CustomerObject);
            //POSAGENT
            JSONObject POSAGENTObject = new JSONObject();
            POSAGENTObject.put("Name", "NULL");
            POSAGENTObject.put("PAN", "NULL");
            POSAGENTObject.put("Aadhar", "NULL");
            POSAGENTObject.put("Email", "NULL");
            POSAGENTObject.put("MobileNo", "NULL");
//            POSAGENTObject.put("Location", "NULL");
            POSAGENTObject.put("Location", "MUMBAI CORPORATE OFFICE");
            POSAGENTObject.put("Information1", "NULL");
            POSAGENTObject.put("Information2", "NULL");
            RootObject.put("POSAGENT", POSAGENTObject);

            JSONObject ProductObject = new JSONObject();
            JSONObject GeneralProposalObject = new JSONObject();
            JSONObject GeneralProposalGroupObject = new JSONObject();
            JSONObject DistributionChannelObject = new JSONObject();
            //Branch
            JSONObject BranchDetailsObject = new JSONObject();

            BranchDetailsObject.put("IMDBranchName", "NULL");
            BranchDetailsObject.put("IMDBranchCode", "NULL");
            DistributionChannelObject.put("BranchDetails", BranchDetailsObject);
            //SpDetails
            JSONObject SPDetailsObject = new JSONObject();
            SPDetailsObject.put("SPName", "NULL");
            SPDetailsObject.put("SPCode", "NULL");
            DistributionChannelObject.put("SPDetails", SPDetailsObject);
            GeneralProposalGroupObject.put("DistributionChannel", DistributionChannelObject);

            //GeneralProposalInformation
            JSONObject GeneralProposalInformationObject = new JSONObject();
            GeneralProposalInformationObject.put("TypeOfBusiness", "");
            GeneralProposalInformationObject.put("ServiceTaxExemptionCategory", "");
            GeneralProposalInformationObject.put("BusinessType", "New");
            GeneralProposalInformationObject.put("Sector", "");
            GeneralProposalInformationObject.put("DealId", "INTR-2312-0019722");
            GeneralProposalInformationObject.put("PolicyType", str_policyType_spinner1);
            GeneralProposalInformationObject.put("FamilyComposition", FamilyComposition);
            GeneralProposalInformationObject.put("ParentComposition", ParentComposition);
            GeneralProposalInformationObject.put("PlanType", PlanType);
            GeneralProposalInformationObject.put("ProposalDate", today);
            GeneralProposalInformationObject.put("PolicyDuration", strPolicyTenure);
            GeneralProposalInformationObject.put("PolicyNumberChar", "NULL");
            //PolicyEffectiveDate
            JSONObject PolicyEffectiveDateObject = new JSONObject();
            PolicyEffectiveDateObject.put("Fromdate", today);
            PolicyEffectiveDateObject.put("Todate", nextYear);
            PolicyEffectiveDateObject.put("Fromhour", "00:01");
            PolicyEffectiveDateObject.put("Tohour", "23:59");
            GeneralProposalInformationObject.put("PolicyEffectiveDate", PolicyEffectiveDateObject);

            GeneralProposalInformationObject.put("SubCategory", "");
            GeneralProposalInformationObject.put("EmployeeCode", "");
            GeneralProposalInformationObject.put("ExsistingPolicyNumber", strPolicyNumber);
            GeneralProposalInformationObject.put("PersonalAccidentCategory", "B");
            GeneralProposalInformationObject.put("CoPaymentLoading", CoPaymentLoading);
            GeneralProposalInformationObject.put("RequestType", "Quotation");
            GeneralProposalGroupObject.put("GeneralProposalInformation", GeneralProposalInformationObject);
            GeneralProposalObject.put("GeneralProposalGroup", GeneralProposalGroupObject);

            //FinancierDetails
            JSONObject FinancierDetailsObject = new JSONObject();
            JSONObject FinancierDtlGrpObject = new JSONObject();
            JSONObject FinancierDtlGrpDataObject = new JSONObject();
            FinancierDtlGrpDataObject.put("FinancierCode", "NULL");
            FinancierDtlGrpDataObject.put("AgreementType", "NULL");
            FinancierDtlGrpDataObject.put("BranchName", "NULL");
            FinancierDtlGrpDataObject.put("FinancierName", "NULL");
            FinancierDtlGrpDataObject.put("SrNo", "NULL");
            FinancierDtlGrpObject.put("FinancierDtlGrpData", FinancierDtlGrpDataObject);
            FinancierDetailsObject.put("FinancierDtlGrp", FinancierDtlGrpObject);
            GeneralProposalObject.put("FinancierDetails", FinancierDetailsObject);

            //PreviousPolicyDetails
            JSONObject PreviousPolicyDetailsObject = new JSONObject();
            JSONObject PreviousPolDtlGroupObject = new JSONObject();
            JSONObject PreviousPolDtlGroupDataObject = new JSONObject();
            PreviousPolDtlGroupDataObject.put("ProductCode", "NULL");
            PreviousPolDtlGroupDataObject.put("ClaimSettled", "NULL");
            PreviousPolDtlGroupDataObject.put("ClaimPremium", "0");
            PreviousPolDtlGroupDataObject.put("ClaimAmount", "0");
            PreviousPolDtlGroupDataObject.put("DateofLoss", "NULL");
            PreviousPolDtlGroupDataObject.put("NatureofLoss", "NULL");
            PreviousPolDtlGroupDataObject.put("ClaimNo", "");
            PreviousPolDtlGroupDataObject.put("PolicyEffectiveTo", "");
            PreviousPolDtlGroupDataObject.put("PolicyEffectiveFrom", "");
            PreviousPolDtlGroupDataObject.put("PolicyPremium", "0");
            PreviousPolDtlGroupDataObject.put("PolicyNo", "NULL");
            PreviousPolDtlGroupDataObject.put("PolicyYear", "NULL");
            PreviousPolDtlGroupDataObject.put("OfficeCode", "NULL");
            PreviousPolDtlGroupDataObject.put("CorporateCustomerId", "NULL");
            PreviousPolDtlGroupDataObject.put("InsurerName", "NULL");
            PreviousPolDtlGroupDataObject.put("InsurerAddress", "NULL");
            PreviousPolDtlGroupObject.put("PreviousPolDtlGroupData", PreviousPolDtlGroupDataObject);
            PreviousPolicyDetailsObject.put("PreviousPolDtlGroup", PreviousPolDtlGroupObject);
            PreviousPolicyDetailsObject.put("PreviousPolicyType", "Package Policy");
            PreviousPolicyDetailsObject.put("OfficeAddress", "NULL");
            GeneralProposalObject.put("PreviousPolicyDetails", PreviousPolicyDetailsObject);
            ProductObject.put("GeneralProposal", GeneralProposalObject);

            //PremiumCalculation
            JSONObject PremiumCalculationObject = new JSONObject();
            PremiumCalculationObject.put("NetPremium", "0");
            PremiumCalculationObject.put("ServiceTax", "0");
            PremiumCalculationObject.put("StampDuty2", "0");
            PremiumCalculationObject.put("TotalPremium", "0");
            PremiumCalculationObject.put("CGST", "0");
            PremiumCalculationObject.put("SGST", "");
            PremiumCalculationObject.put("UGST", "0");
            PremiumCalculationObject.put("IGST", "0");
            ProductObject.put("PremiumCalculation", PremiumCalculationObject);
//            ProductObject.put("PremiumCalculation",PremiumCalculationObject);
//            ProductObject.put("PremiumCalculation",GeneralProposalObject);

            //Risks
            JSONObject RisksObject = new JSONObject();
            JSONObject RiskObject = new JSONObject();
            JSONObject RisksDataObject = new JSONObject();
            JSONObject InsuredDetailsObject = new JSONObject();
            JSONArray InsuredDetailsGroupArray = new JSONArray();
            //Self
            JSONObject InsuredDetailsObj = new JSONObject();
            InsuredDetailsObj.put("InsuredType", "Adult");
            InsuredDetailsObj.put("FirstName", "");
            InsuredDetailsObj.put("LastName", "");
            InsuredDetailsObj.put("DOB", strSelfAgeEditText);
            InsuredDetailsObj.put("Gender", strGender);
            InsuredDetailsObj.put("Relationship", "Self");
            InsuredDetailsObj.put("Occupation", "");
            InsuredDetailsObj.put("NomineeName", "");
            InsuredDetailsObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsObj = new JSONObject();
            HealthIndicatorsObj.put("PED", "N");
            HealthIndicatorsObj.put("PEDDeclared", "N");
            HealthIndicatorsObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsObj.put("CholesterolLevel", "NA");
            HealthIndicatorsObj.put("BodyMassIndex", "30");
            HealthIndicatorsObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsObj.put("CoMorbidity", "N");
            InsuredDetailsObj.put("HealthIndicators", HealthIndicatorsObj);

            JSONObject CoverDetailsObj = new JSONObject();
            JSONArray CoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversObj = new JSONObject();
            BasicInsuranceCoversObj.put("Applicable", "True");
            BasicInsuranceCoversObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversObj.put("CoverRate", "0");
            BasicInsuranceCoversObj.put("CoverPremium", "0");
            BasicInsuranceCoversObj.put("CoverGroups", "Basic Insurance Cover");
            CoversArray.put(BasicInsuranceCoversObj);

            JSONObject PersonalAccidentCoversObj = new JSONObject();
            PersonalAccidentCoversObj.put("Applicable", "False");
            PersonalAccidentCoversObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversObj.put("CoverRate", "0");
            PersonalAccidentCoversObj.put("CoverPremium", "0");
            PersonalAccidentCoversObj.put("CoverGroups", "Personal Accident Cover");
            CoversArray.put(PersonalAccidentCoversObj);

            JSONObject CriticalIllnessCoversObj = new JSONObject();
            CriticalIllnessCoversObj.put("Applicable", "False");
            CriticalIllnessCoversObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversObj.put("CoverRate", "0");
            CriticalIllnessCoversObj.put("CoverPremium", "0");
            CriticalIllnessCoversObj.put("CoverGroups", "Critical Illness Cover");
            CoversArray.put(CriticalIllnessCoversObj);


            JSONObject DailyHospitalCoversObj = new JSONObject();
            DailyHospitalCoversObj.put("Applicable", "False");
            DailyHospitalCoversObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversObj.put("CoverRate", "0");
            DailyHospitalCoversObj.put("CoverPremium", "0");
            DailyHospitalCoversObj.put("CoverGroups", "Daily Hospital Cash Cover");
            CoversArray.put(DailyHospitalCoversObj);

            JSONObject ModernCoversObj = new JSONObject();
            ModernCoversObj.put("Applicable", "False");
            ModernCoversObj.put("CoverSI", strSumInsured);
            ModernCoversObj.put("CoverRate", "0");
            ModernCoversObj.put("CoverPremium", "0");
            ModernCoversObj.put("CoverGroups", "Modern Treatments");
            CoversArray.put(ModernCoversObj);
            JSONObject ExtensionPreHospitalizationCoversObj = new JSONObject();
            ExtensionPreHospitalizationCoversObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            CoversArray.put(ExtensionPreHospitalizationCoversObj);

            JSONObject ExtensionPostHospitalizationCoversObj = new JSONObject();
            ExtensionPostHospitalizationCoversObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversObj.put("CoverGroups", "Extension under Post-Hospitalization");
            CoversArray.put(ExtensionPostHospitalizationCoversObj);


            JSONObject MaternityAndChildcareCoversObj = new JSONObject();
            MaternityAndChildcareCoversObj.put("Applicable", "False");
            MaternityAndChildcareCoversObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversObj.put("CoverRate", "0");
            MaternityAndChildcareCoversObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            CoversArray.put(MaternityAndChildcareCoversObj);

            JSONObject CoverageForNonMedicalCoversObj = new JSONObject();
            CoverageForNonMedicalCoversObj.put("Applicable", "False");
            CoverageForNonMedicalCoversObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversObj.put("CoverGroups", "Coverage for Non-Medical Items");
            CoversArray.put(CoverageForNonMedicalCoversObj);

            JSONObject ConditionWaiverCoversObj = new JSONObject();
            ConditionWaiverCoversObj.put("Applicable", "False");
            ConditionWaiverCoversObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversObj.put("CoverRate", "0");
            ConditionWaiverCoversObj.put("CoverPremium", "0");
            ConditionWaiverCoversObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            CoversArray.put(ConditionWaiverCoversObj);


            JSONObject PreExistingDiseaseCoversObj = new JSONObject();
            PreExistingDiseaseCoversObj.put("Applicable", "False");
            PreExistingDiseaseCoversObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversObj.put("CoverRate", "0");
            PreExistingDiseaseCoversObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            CoversArray.put(PreExistingDiseaseCoversObj);

            JSONObject OutpatientDentalWaitingCoversObj = new JSONObject();
            OutpatientDentalWaitingCoversObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            CoversArray.put(OutpatientDentalWaitingCoversObj);

            JSONObject EmergencyTravellingAllowanceCoversObj = new JSONObject();
            EmergencyTravellingAllowanceCoversObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversObj.put("CoverGroups", "Emergency Travelling Allowance");
            CoversArray.put(EmergencyTravellingAllowanceCoversObj);

            JSONObject SecondOpinionCoversObj = new JSONObject();
            SecondOpinionCoversObj.put("Applicable", "False");
            SecondOpinionCoversObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversObj.put("CoverRate", "0");
            SecondOpinionCoversObj.put("CoverPremium", "0");
            SecondOpinionCoversObj.put("CoverGroups", "Second Opinion");
            CoversArray.put(SecondOpinionCoversObj);

            JSONObject RestCureCoversObj = new JSONObject();
            RestCureCoversObj.put("Applicable", "False");
            RestCureCoversObj.put("CoverSI", strSumInsured);
            RestCureCoversObj.put("CoverRate", "0");
            RestCureCoversObj.put("CoverPremium", "0");
            RestCureCoversObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            CoversArray.put(RestCureCoversObj);

            JSONObject ObesityWeightCoversObj = new JSONObject();
            ObesityWeightCoversObj.put("Applicable", "False");
            ObesityWeightCoversObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversObj.put("CoverRate", "0");
            ObesityWeightCoversObj.put("CoverPremium", "0");
            ObesityWeightCoversObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            CoversArray.put(ObesityWeightCoversObj);

            JSONObject SterilityInfertilityCoversObj = new JSONObject();
            SterilityInfertilityCoversObj.put("Applicable", "False");
            SterilityInfertilityCoversObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversObj.put("CoverRate", "0");
            SterilityInfertilityCoversObj.put("CoverPremium", "0");
            SterilityInfertilityCoversObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            CoversArray.put(SterilityInfertilityCoversObj);

            JSONObject EnhancedOrganDonorCoversObj = new JSONObject();
            EnhancedOrganDonorCoversObj.put("Applicable", "False");
            EnhancedOrganDonorCoversObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            CoversArray.put(EnhancedOrganDonorCoversObj);

            JSONObject PremiumWaiverCoversObj = new JSONObject();
            PremiumWaiverCoversObj.put("Applicable", "False");
            PremiumWaiverCoversObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversObj.put("CoverRate", "0");
            PremiumWaiverCoversObj.put("CoverPremium", "0");
            PremiumWaiverCoversObj.put("CoverGroups", "Premium Waiver");
            CoversArray.put(PremiumWaiverCoversObj);

            JSONObject GlobalCoversObj = new JSONObject();
            GlobalCoversObj.put("Applicable", "False");
            GlobalCoversObj.put("CoverSI", strSumInsured);
            GlobalCoversObj.put("CoverRate", "0");
            GlobalCoversObj.put("CoverPremium", "0");
            GlobalCoversObj.put("CoverGroups", "Global Cover");
            CoversArray.put(GlobalCoversObj);


            JSONObject MedicallyAdvisedCoversObj = new JSONObject();
            MedicallyAdvisedCoversObj.put("Applicable", "False");
            MedicallyAdvisedCoversObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversObj.put("CoverRate", "0");
            MedicallyAdvisedCoversObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversObj.put("CoverGroups", "Medically Advised Support Devices");
            CoversArray.put(MedicallyAdvisedCoversObj);

            JSONObject EmergencyCoversObj = new JSONObject();
            EmergencyCoversObj.put("Applicable", "False");
            EmergencyCoversObj.put("CoverSI", strSumInsured);
            EmergencyCoversObj.put("CoverRate", "0");
            EmergencyCoversObj.put("CoverPremium", "0");
            EmergencyCoversObj.put("CoverGroups", "Emergency Assistance Service");
            CoversArray.put(EmergencyCoversObj);

            JSONObject HomeCareTreatmentCoversObj = new JSONObject();
            HomeCareTreatmentCoversObj.put("Applicable", "False");
            HomeCareTreatmentCoversObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversObj.put("CoverRate", "0");
            HomeCareTreatmentCoversObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversObj.put("CoverGroups", "Home Care Treatment");
            CoversArray.put(HomeCareTreatmentCoversObj);

            JSONObject WellnessBenefitCoversObj = new JSONObject();
            WellnessBenefitCoversObj.put("Applicable", "False");
            WellnessBenefitCoversObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversObj.put("CoverRate", "0");
            WellnessBenefitCoversObj.put("CoverPremium", "0");
            WellnessBenefitCoversObj.put("CoverGroups", "Wellness Benefit");
            CoversArray.put(WellnessBenefitCoversObj);

            JSONObject DiseaseManagementCoversObj = new JSONObject();
            DiseaseManagementCoversObj.put("Applicable", "False");
            DiseaseManagementCoversObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversObj.put("CoverRate", "0");
            DiseaseManagementCoversObj.put("CoverPremium", "0");
            DiseaseManagementCoversObj.put("CoverGroups", "Disease Management Program");
            CoversArray.put(DiseaseManagementCoversObj);
            CoverDetailsObj.put("Covers", CoversArray);
            InsuredDetailsObj.put("CoverDetails", CoverDetailsObj);

            //2nd Adult
            JSONObject SecondAdultObj = new JSONObject();
            SecondAdultObj.put("InsuredType", "Adult");
            SecondAdultObj.put("FirstName", "");
            SecondAdultObj.put("LastName", "");
            SecondAdultObj.put("DOB", strSpouseAgeEditText);
            SecondAdultObj.put("Gender", "F");
            SecondAdultObj.put("Relationship", "Spouse");
            SecondAdultObj.put("Occupation", "");
            SecondAdultObj.put("NomineeName", "");
            SecondAdultObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsSecondObj = new JSONObject();
            HealthIndicatorsSecondObj.put("PED", "N");
            HealthIndicatorsSecondObj.put("PEDDeclared", "N");
            HealthIndicatorsSecondObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsSecondObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsSecondObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsSecondObj.put("CholesterolLevel", "NA");
            HealthIndicatorsSecondObj.put("BodyMassIndex", "30");
            HealthIndicatorsSecondObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsSecondObj.put("CoMorbidity", "N");
            SecondAdultObj.put("HealthIndicators", HealthIndicatorsSecondObj);

            JSONObject CoverDetailsSecondObj = new JSONObject();
            JSONArray SecondAdultCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversAdultSecObj = new JSONObject();
            BasicInsuranceCoversAdultSecObj.put("Applicable", "True");
            BasicInsuranceCoversAdultSecObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversAdultSecObj.put("CoverRate", "0");
            BasicInsuranceCoversAdultSecObj.put("CoverPremium", "0");
            BasicInsuranceCoversAdultSecObj.put("CoverGroups", "Basic Insurance Cover");
            SecondAdultCoversArray.put(BasicInsuranceCoversAdultSecObj);

            JSONObject PersonalAccidentCoversSecondAdultObj = new JSONObject();
            PersonalAccidentCoversSecondAdultObj.put("Applicable", "False");
            PersonalAccidentCoversSecondAdultObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversSecondAdultObj.put("CoverRate", "0");
            PersonalAccidentCoversSecondAdultObj.put("CoverPremium", "0");
            PersonalAccidentCoversSecondAdultObj.put("CoverGroups", "Personal Accident Cover");
            SecondAdultCoversArray.put(PersonalAccidentCoversSecondAdultObj);

            JSONObject CriticalIllnessCoversSecondAdultObj = new JSONObject();
            CriticalIllnessCoversSecondAdultObj.put("Applicable", "False");
            CriticalIllnessCoversSecondAdultObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversSecondAdultObj.put("CoverRate", "0");
            CriticalIllnessCoversSecondAdultObj.put("CoverPremium", "0");
            CriticalIllnessCoversSecondAdultObj.put("CoverGroups", "Critical Illness Cover");
            SecondAdultCoversArray.put(CriticalIllnessCoversSecondAdultObj);


            JSONObject DailyHospitalCoversSecondAdultObj = new JSONObject();
            DailyHospitalCoversSecondAdultObj.put("Applicable", "False");
            DailyHospitalCoversSecondAdultObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversSecondAdultObj.put("CoverRate", "0");
            DailyHospitalCoversSecondAdultObj.put("CoverPremium", "0");
            DailyHospitalCoversSecondAdultObj.put("CoverGroups", "Daily Hospital Cash Cover");
            SecondAdultCoversArray.put(DailyHospitalCoversSecondAdultObj);

            JSONObject ModernCoversSecondAdultObj = new JSONObject();
            ModernCoversSecondAdultObj.put("Applicable", "False");
            ModernCoversSecondAdultObj.put("CoverSI", strSumInsured);
            ModernCoversSecondAdultObj.put("CoverRate", "0");
            ModernCoversSecondAdultObj.put("CoverPremium", "0");
            ModernCoversSecondAdultObj.put("CoverGroups", "Modern Treatments");
            SecondAdultCoversArray.put(ModernCoversSecondAdultObj);
            JSONObject ExtensionPreHospitalizationCoversSecondAdultObj = new JSONObject();
            ExtensionPreHospitalizationCoversSecondAdultObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversSecondAdultObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            SecondAdultCoversArray.put(ExtensionPreHospitalizationCoversSecondAdultObj);

            JSONObject ExtensionPostHospitalizationCoversSecondAdultObj = new JSONObject();
            ExtensionPostHospitalizationCoversSecondAdultObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversSecondAdultObj.put("CoverGroups", "Extension under Post-Hospitalization");
            SecondAdultCoversArray.put(ExtensionPostHospitalizationCoversSecondAdultObj);


            JSONObject MaternityAndChildcareCoversSecAdultObj = new JSONObject();
            MaternityAndChildcareCoversSecAdultObj.put("Applicable", "False");
            MaternityAndChildcareCoversSecAdultObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversSecAdultObj.put("CoverRate", "0");
            MaternityAndChildcareCoversSecAdultObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversSecAdultObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            SecondAdultCoversArray.put(MaternityAndChildcareCoversSecAdultObj);

            JSONObject CoverageForNonMedicalCoversSecAdultObj = new JSONObject();
            CoverageForNonMedicalCoversSecAdultObj.put("Applicable", "False");
            CoverageForNonMedicalCoversSecAdultObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversSecAdultObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversSecAdultObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversSecAdultObj.put("CoverGroups", "Coverage for Non-Medical Items");
            SecondAdultCoversArray.put(CoverageForNonMedicalCoversSecAdultObj);

            JSONObject ConditionWaiverCoversSecAdultObj = new JSONObject();
            ConditionWaiverCoversSecAdultObj.put("Applicable", "False");
            ConditionWaiverCoversSecAdultObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversSecAdultObj.put("CoverRate", "0");
            ConditionWaiverCoversSecAdultObj.put("CoverPremium", "0");
            ConditionWaiverCoversSecAdultObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            SecondAdultCoversArray.put(ConditionWaiverCoversSecAdultObj);

            JSONObject PreExistingDiseaseCoversSecAdultObj = new JSONObject();
            PreExistingDiseaseCoversSecAdultObj.put("Applicable", "False");
            PreExistingDiseaseCoversSecAdultObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversSecAdultObj.put("CoverRate", "0");
            PreExistingDiseaseCoversSecAdultObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversSecAdultObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            SecondAdultCoversArray.put(PreExistingDiseaseCoversSecAdultObj);

            JSONObject OutpatientDentalWaitingCoversSecAdultObj = new JSONObject();
            OutpatientDentalWaitingCoversSecAdultObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversSecAdultObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            SecondAdultCoversArray.put(OutpatientDentalWaitingCoversSecAdultObj);

            JSONObject EmergencyTravellingAllowanceCoversSecAdultObj = new JSONObject();
            EmergencyTravellingAllowanceCoversSecAdultObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversSecAdultObj.put("CoverGroups", "Emergency Travelling Allowance");
            SecondAdultCoversArray.put(EmergencyTravellingAllowanceCoversSecAdultObj);

            JSONObject SecondOpinionCoversSecAdultObj = new JSONObject();
            SecondOpinionCoversSecAdultObj.put("Applicable", "False");
            SecondOpinionCoversSecAdultObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversSecAdultObj.put("CoverRate", "0");
            SecondOpinionCoversSecAdultObj.put("CoverPremium", "0");
            SecondOpinionCoversSecAdultObj.put("CoverGroups", "Second Opinion");
            SecondAdultCoversArray.put(SecondOpinionCoversSecAdultObj);

            JSONObject RestCureCoversSecAdultObj = new JSONObject();
            RestCureCoversSecAdultObj.put("Applicable", "False");
            RestCureCoversSecAdultObj.put("CoverSI", strSumInsured);
            RestCureCoversSecAdultObj.put("CoverRate", "0");
            RestCureCoversSecAdultObj.put("CoverPremium", "0");
            RestCureCoversSecAdultObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            SecondAdultCoversArray.put(RestCureCoversSecAdultObj);

            JSONObject ObesityWeightCoversSecAdultObj = new JSONObject();
            ObesityWeightCoversSecAdultObj.put("Applicable", "False");
            ObesityWeightCoversSecAdultObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversSecAdultObj.put("CoverRate", "0");
            ObesityWeightCoversSecAdultObj.put("CoverPremium", "0");
            ObesityWeightCoversSecAdultObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            SecondAdultCoversArray.put(ObesityWeightCoversSecAdultObj);

            JSONObject SterilityInfertilityCoversSecAdultObj = new JSONObject();
            SterilityInfertilityCoversSecAdultObj.put("Applicable", "False");
            SterilityInfertilityCoversSecAdultObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversSecAdultObj.put("CoverRate", "0");
            SterilityInfertilityCoversSecAdultObj.put("CoverPremium", "0");
            SterilityInfertilityCoversSecAdultObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            SecondAdultCoversArray.put(SterilityInfertilityCoversSecAdultObj);

            JSONObject EnhancedOrganDonorCoversSecAdultObj = new JSONObject();
            EnhancedOrganDonorCoversSecAdultObj.put("Applicable", "False");
            EnhancedOrganDonorCoversSecAdultObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversSecAdultObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversSecAdultObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversSecAdultObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            SecondAdultCoversArray.put(EnhancedOrganDonorCoversSecAdultObj);

            JSONObject PremiumWaiverCoversSecAdultObj = new JSONObject();
            PremiumWaiverCoversSecAdultObj.put("Applicable", "False");
            PremiumWaiverCoversSecAdultObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversSecAdultObj.put("CoverRate", "0");
            PremiumWaiverCoversSecAdultObj.put("CoverPremium", "0");
            PremiumWaiverCoversSecAdultObj.put("CoverGroups", "Premium Waiver");
            SecondAdultCoversArray.put(PremiumWaiverCoversSecAdultObj);

            JSONObject GlobalCoversSecAdultObj = new JSONObject();
            GlobalCoversSecAdultObj.put("Applicable", "False");
            GlobalCoversSecAdultObj.put("CoverSI", strSumInsured);
            GlobalCoversSecAdultObj.put("CoverRate", "0");
            GlobalCoversSecAdultObj.put("CoverPremium", "0");
            GlobalCoversSecAdultObj.put("CoverGroups", "Global Cover");
            SecondAdultCoversArray.put(GlobalCoversSecAdultObj);


            JSONObject MedicallyAdvisedCoversSecAdultObj = new JSONObject();
            MedicallyAdvisedCoversSecAdultObj.put("Applicable", "False");
            MedicallyAdvisedCoversSecAdultObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversSecAdultObj.put("CoverRate", "0");
            MedicallyAdvisedCoversSecAdultObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversSecAdultObj.put("CoverGroups", "Medically Advised Support Devices");
            SecondAdultCoversArray.put(MedicallyAdvisedCoversSecAdultObj);

            JSONObject EmergencyCoversSecAdultObj = new JSONObject();
            EmergencyCoversSecAdultObj.put("Applicable", "False");
            EmergencyCoversSecAdultObj.put("CoverSI", strSumInsured);
            EmergencyCoversSecAdultObj.put("CoverRate", "0");
            EmergencyCoversSecAdultObj.put("CoverPremium", "0");
            EmergencyCoversSecAdultObj.put("CoverGroups", "Emergency Assistance Service");
            SecondAdultCoversArray.put(EmergencyCoversSecAdultObj);

            JSONObject HomeCareTreatmentCoversSecAdultObj = new JSONObject();
            HomeCareTreatmentCoversSecAdultObj.put("Applicable", "False");
            HomeCareTreatmentCoversSecAdultObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversSecAdultObj.put("CoverRate", "0");
            HomeCareTreatmentCoversSecAdultObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversSecAdultObj.put("CoverGroups", "Home Care Treatment");
            SecondAdultCoversArray.put(HomeCareTreatmentCoversSecAdultObj);

            JSONObject WellnessBenefitCoversSecAdultObj = new JSONObject();
            WellnessBenefitCoversSecAdultObj.put("Applicable", "False");
            WellnessBenefitCoversSecAdultObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversSecAdultObj.put("CoverRate", "0");
            WellnessBenefitCoversSecAdultObj.put("CoverPremium", "0");
            WellnessBenefitCoversSecAdultObj.put("CoverGroups", "Wellness Benefit");
            SecondAdultCoversArray.put(WellnessBenefitCoversSecAdultObj);

            JSONObject DiseaseManagementCoversSecAdultObj = new JSONObject();
            DiseaseManagementCoversSecAdultObj.put("Applicable", "False");
            DiseaseManagementCoversSecAdultObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversSecAdultObj.put("CoverRate", "0");
            DiseaseManagementCoversSecAdultObj.put("CoverPremium", "0");
            DiseaseManagementCoversSecAdultObj.put("CoverGroups", "Disease Management Program");
            SecondAdultCoversArray.put(DiseaseManagementCoversSecAdultObj);
            CoverDetailsSecondObj.put("Covers", SecondAdultCoversArray);
            SecondAdultObj.put("CoverDetails", CoverDetailsSecondObj);

            //ChildFirst
            JSONObject FirstChildObj = new JSONObject();
            FirstChildObj.put("InsuredType", "Child");
            FirstChildObj.put("FirstName", "");
            FirstChildObj.put("LastName", "");
            FirstChildObj.put("DOB", strFirstSonAgeEditText);
            FirstChildObj.put("Gender", "M");
            FirstChildObj.put("Relationship", "");
            FirstChildObj.put("Occupation", "");
            FirstChildObj.put("NomineeName", "");
            FirstChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFirstChildObj = new JSONObject();
            HealthIndicatorsFirstChildObj.put("PED", "N");
            HealthIndicatorsFirstChildObj.put("PEDDeclared", "N");
            HealthIndicatorsFirstChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFirstChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFirstChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFirstChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFirstChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsFirstChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFirstChildObj.put("CoMorbidity", "N");
            FirstChildObj.put("HealthIndicators", HealthIndicatorsFirstChildObj);

            JSONObject CoverDetailsFirstChildObj = new JSONObject();
            JSONArray FirstChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversChildFirstObj = new JSONObject();
            BasicInsuranceCoversChildFirstObj.put("Applicable", "True");
            BasicInsuranceCoversChildFirstObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversChildFirstObj.put("CoverRate", "0");
            BasicInsuranceCoversChildFirstObj.put("CoverPremium", "0");
            BasicInsuranceCoversChildFirstObj.put("CoverGroups", "Basic Insurance Cover");
            FirstChildCoversArray.put(BasicInsuranceCoversChildFirstObj);

            JSONObject PersonalAccidentCoversFirstObj = new JSONObject();
            PersonalAccidentCoversFirstObj.put("Applicable", "False");
            PersonalAccidentCoversFirstObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFirstObj.put("CoverRate", "0");
            PersonalAccidentCoversFirstObj.put("CoverPremium", "0");
            PersonalAccidentCoversFirstObj.put("CoverGroups", "Personal Accident Cover");
            FirstChildCoversArray.put(PersonalAccidentCoversFirstObj);

            JSONObject CriticalIllnessCoversFirstObj = new JSONObject();
            CriticalIllnessCoversFirstObj.put("Applicable", "False");
            CriticalIllnessCoversFirstObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFirstObj.put("CoverRate", "0");
            CriticalIllnessCoversFirstObj.put("CoverPremium", "0");
            CriticalIllnessCoversFirstObj.put("CoverGroups", "Critical Illness Cover");
            FirstChildCoversArray.put(CriticalIllnessCoversFirstObj);


            JSONObject DailyHospitalCoversFirstObj = new JSONObject();
            DailyHospitalCoversFirstObj.put("Applicable", "False");
            DailyHospitalCoversFirstObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFirstObj.put("CoverRate", "0");
            DailyHospitalCoversFirstObj.put("CoverPremium", "0");
            DailyHospitalCoversFirstObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FirstChildCoversArray.put(DailyHospitalCoversFirstObj);

            JSONObject ModernCoversFirstObj = new JSONObject();
            ModernCoversFirstObj.put("Applicable", "False");
            ModernCoversFirstObj.put("CoverSI", strSumInsured);
            ModernCoversFirstObj.put("CoverRate", "0");
            ModernCoversFirstObj.put("CoverPremium", "0");
            ModernCoversFirstObj.put("CoverGroups", "Modern Treatments");
            FirstChildCoversArray.put(ModernCoversFirstObj);
            JSONObject ExtensionPreHospitalizationCoversFirstObj = new JSONObject();
            ExtensionPreHospitalizationCoversFirstObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversFirstObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFirstObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFirstObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFirstObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FirstChildCoversArray.put(ExtensionPreHospitalizationCoversFirstObj);

            JSONObject ExtensionPostHospitalizationCoversFirstObj = new JSONObject();
            ExtensionPostHospitalizationCoversFirstObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversFirstObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFirstObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFirstObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFirstObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FirstChildCoversArray.put(ExtensionPostHospitalizationCoversFirstObj);


            JSONObject MaternityAndChildcareCoversFirstObj = new JSONObject();
            MaternityAndChildcareCoversFirstObj.put("Applicable", "False");
            MaternityAndChildcareCoversFirstObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFirstObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFirstObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFirstObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FirstChildCoversArray.put(MaternityAndChildcareCoversFirstObj);

            JSONObject CoverageForNonMedicalCoversFirstObj = new JSONObject();
            CoverageForNonMedicalCoversFirstObj.put("Applicable", "False");
            CoverageForNonMedicalCoversFirstObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFirstObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFirstObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFirstObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FirstChildCoversArray.put(CoverageForNonMedicalCoversFirstObj);

            JSONObject ConditionWaiverCoversFirstObj = new JSONObject();
            ConditionWaiverCoversFirstObj.put("Applicable", "False");
            ConditionWaiverCoversFirstObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFirstObj.put("CoverRate", "0");
            ConditionWaiverCoversFirstObj.put("CoverPremium", "0");
            ConditionWaiverCoversFirstObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FirstChildCoversArray.put(ConditionWaiverCoversFirstObj);


            JSONObject PreExistingDiseaseCoversFirstObj = new JSONObject();
            PreExistingDiseaseCoversFirstObj.put("Applicable", "False");
            PreExistingDiseaseCoversFirstObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFirstObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFirstObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFirstObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FirstChildCoversArray.put(PreExistingDiseaseCoversFirstObj);

            JSONObject OutpatientDentalWaitingCoversFirstObj = new JSONObject();
            OutpatientDentalWaitingCoversFirstObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversFirstObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFirstObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFirstObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFirstObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FirstChildCoversArray.put(OutpatientDentalWaitingCoversFirstObj);

            JSONObject EmergencyTravellingAllowanceCoversFirstObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFirstObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFirstObj.put("CoverGroups", "Emergency Travelling Allowance");
            FirstChildCoversArray.put(EmergencyTravellingAllowanceCoversFirstObj);

            JSONObject SecondOpinionCoversFirstObj = new JSONObject();
            SecondOpinionCoversFirstObj.put("Applicable", "False");
            SecondOpinionCoversFirstObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFirstObj.put("CoverRate", "0");
            SecondOpinionCoversFirstObj.put("CoverPremium", "0");
            SecondOpinionCoversFirstObj.put("CoverGroups", "Second Opinion");
            FirstChildCoversArray.put(SecondOpinionCoversFirstObj);

            JSONObject RestCureCoversFirstObj = new JSONObject();
            RestCureCoversFirstObj.put("Applicable", "False");
            RestCureCoversFirstObj.put("CoverSI", strSumInsured);
            RestCureCoversFirstObj.put("CoverRate", "0");
            RestCureCoversFirstObj.put("CoverPremium", "0");
            RestCureCoversFirstObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FirstChildCoversArray.put(RestCureCoversFirstObj);

            JSONObject ObesityWeightCoversFirstObj = new JSONObject();
            ObesityWeightCoversFirstObj.put("Applicable", "False");
            ObesityWeightCoversFirstObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFirstObj.put("CoverRate", "0");
            ObesityWeightCoversFirstObj.put("CoverPremium", "0");
            ObesityWeightCoversFirstObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FirstChildCoversArray.put(ObesityWeightCoversFirstObj);

            JSONObject SterilityInfertilityCoversFirstObj = new JSONObject();
            SterilityInfertilityCoversFirstObj.put("Applicable", "False");
            SterilityInfertilityCoversFirstObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFirstObj.put("CoverRate", "0");
            SterilityInfertilityCoversFirstObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFirstObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FirstChildCoversArray.put(SterilityInfertilityCoversFirstObj);

            JSONObject EnhancedOrganDonorCoversFirstObj = new JSONObject();
            EnhancedOrganDonorCoversFirstObj.put("Applicable", "False");
            EnhancedOrganDonorCoversFirstObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFirstObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFirstObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFirstObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FirstChildCoversArray.put(EnhancedOrganDonorCoversFirstObj);

            JSONObject PremiumWaiverCoversFirstObj = new JSONObject();
            PremiumWaiverCoversFirstObj.put("Applicable", "False");
            PremiumWaiverCoversFirstObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFirstObj.put("CoverRate", "0");
            PremiumWaiverCoversFirstObj.put("CoverPremium", "0");
            PremiumWaiverCoversFirstObj.put("CoverGroups", "Premium Waiver");
            FirstChildCoversArray.put(PremiumWaiverCoversFirstObj);

            JSONObject GlobalCoversFirstObj = new JSONObject();
            GlobalCoversFirstObj.put("Applicable", "False");
            GlobalCoversFirstObj.put("CoverSI", strSumInsured);
            GlobalCoversFirstObj.put("CoverRate", "0");
            GlobalCoversFirstObj.put("CoverPremium", "0");
            GlobalCoversFirstObj.put("CoverGroups", "Global Cover");
            FirstChildCoversArray.put(GlobalCoversFirstObj);


            JSONObject MedicallyAdvisedCoversFirstObj = new JSONObject();
            MedicallyAdvisedCoversFirstObj.put("Applicable", "False");
            MedicallyAdvisedCoversFirstObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFirstObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFirstObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFirstObj.put("CoverGroups", "Medically Advised Support Devices");
            FirstChildCoversArray.put(MedicallyAdvisedCoversFirstObj);

            JSONObject EmergencyCoversFirstObj = new JSONObject();
            EmergencyCoversFirstObj.put("Applicable", "False");
            EmergencyCoversFirstObj.put("CoverSI", strSumInsured);
            EmergencyCoversFirstObj.put("CoverRate", "0");
            EmergencyCoversFirstObj.put("CoverPremium", "0");
            EmergencyCoversFirstObj.put("CoverGroups", "Emergency Assistance Service");
            FirstChildCoversArray.put(EmergencyCoversFirstObj);

            JSONObject HomeCareTreatmentCoversFirstObj = new JSONObject();
            HomeCareTreatmentCoversFirstObj.put("Applicable", "False");
            HomeCareTreatmentCoversFirstObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFirstObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFirstObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFirstObj.put("CoverGroups", "Home Care Treatment");
            FirstChildCoversArray.put(HomeCareTreatmentCoversFirstObj);

            JSONObject WellnessBenefitCoversFirstObj = new JSONObject();
            WellnessBenefitCoversFirstObj.put("Applicable", "False");
            WellnessBenefitCoversFirstObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFirstObj.put("CoverRate", "0");
            WellnessBenefitCoversFirstObj.put("CoverPremium", "0");
            WellnessBenefitCoversFirstObj.put("CoverGroups", "Wellness Benefit");
            FirstChildCoversArray.put(WellnessBenefitCoversFirstObj);

            JSONObject DiseaseManagementCoversFirstObj = new JSONObject();
            DiseaseManagementCoversFirstObj.put("Applicable", "False");
            DiseaseManagementCoversFirstObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFirstObj.put("CoverRate", "0");
            DiseaseManagementCoversFirstObj.put("CoverPremium", "0");
            DiseaseManagementCoversFirstObj.put("CoverGroups", "Disease Management Program");
            FirstChildCoversArray.put(DiseaseManagementCoversFirstObj);
            CoverDetailsFirstChildObj.put("Covers", FirstChildCoversArray);
            FirstChildObj.put("CoverDetails", CoverDetailsFirstChildObj);
            //childTwo
            JSONObject SecondChildObj = new JSONObject();
            SecondChildObj.put("InsuredType", "Child");
            SecondChildObj.put("FirstName", "");
            SecondChildObj.put("LastName", "");
            SecondChildObj.put("DOB", strSecondSonAgeEditText);
            SecondChildObj.put("Gender", "M");
            SecondChildObj.put("Relationship", "");
            SecondChildObj.put("Occupation", "");
            SecondChildObj.put("NomineeName", "");
            SecondChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsSecondChildObj = new JSONObject();
            HealthIndicatorsSecondChildObj.put("PED", "N");
            HealthIndicatorsSecondChildObj.put("PEDDeclared", "N");
            HealthIndicatorsSecondChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsSecondChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsSecondChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsSecondChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsSecondChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsSecondChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsSecondChildObj.put("CoMorbidity", "N");
            SecondChildObj.put("HealthIndicators", HealthIndicatorsSecondChildObj);

            JSONObject CoverDetailsSecondChildObj = new JSONObject();
            JSONArray SecondChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversSecChildObj = new JSONObject();
            BasicInsuranceCoversSecChildObj.put("Applicable", "True");
            BasicInsuranceCoversSecChildObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversSecChildObj.put("CoverRate", "0");
            BasicInsuranceCoversSecChildObj.put("CoverPremium", "0");
            BasicInsuranceCoversSecChildObj.put("CoverGroups", "Basic Insurance Cover");
            SecondChildCoversArray.put(BasicInsuranceCoversSecChildObj);

            JSONObject PersonalAccidentCoversSecondChildObj = new JSONObject();
            PersonalAccidentCoversSecondChildObj.put("Applicable", "False");
            PersonalAccidentCoversSecondChildObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversSecondChildObj.put("CoverRate", "0");
            PersonalAccidentCoversSecondChildObj.put("CoverPremium", "0");
            PersonalAccidentCoversSecondChildObj.put("CoverGroups", "Personal Accident Cover");
            SecondChildCoversArray.put(PersonalAccidentCoversSecondChildObj);

            JSONObject CriticalIllnessCoversSecondChildObj = new JSONObject();
            CriticalIllnessCoversSecondChildObj.put("Applicable", "False");
            CriticalIllnessCoversSecondChildObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversSecondChildObj.put("CoverRate", "0");
            CriticalIllnessCoversSecondChildObj.put("CoverPremium", "0");
            CriticalIllnessCoversSecondChildObj.put("CoverGroups", "Critical Illness Cover");
            SecondChildCoversArray.put(CriticalIllnessCoversSecondChildObj);


            JSONObject DailyHospitalCoversSecondChildObj = new JSONObject();
            DailyHospitalCoversSecondChildObj.put("Applicable", "False");
            DailyHospitalCoversSecondChildObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversSecondChildObj.put("CoverRate", "0");
            DailyHospitalCoversSecondChildObj.put("CoverPremium", "0");
            DailyHospitalCoversSecondChildObj.put("CoverGroups", "Daily Hospital Cash Cover");
            SecondChildCoversArray.put(DailyHospitalCoversSecondChildObj);

            JSONObject ModernCoversSecondChildObj = new JSONObject();
            ModernCoversSecondChildObj.put("Applicable", "False");
            ModernCoversSecondChildObj.put("CoverSI", strSumInsured);
            ModernCoversSecondChildObj.put("CoverRate", "0");
            ModernCoversSecondChildObj.put("CoverPremium", "0");
            ModernCoversSecondChildObj.put("CoverGroups", "Modern Treatments");
            SecondChildCoversArray.put(ModernCoversSecondChildObj);
            JSONObject ExtensionPreHospitalizationCoversSecondChildObj = new JSONObject();
            ExtensionPreHospitalizationCoversSecondChildObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversSecondChildObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            SecondChildCoversArray.put(ExtensionPreHospitalizationCoversSecondChildObj);

            JSONObject ExtensionPostHospitalizationCoversSecondChildObj = new JSONObject();
            ExtensionPostHospitalizationCoversSecondChildObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversSecondChildObj.put("CoverGroups", "Extension under Post-Hospitalization");
            SecondChildCoversArray.put(ExtensionPostHospitalizationCoversSecondChildObj);


            JSONObject MaternityAndChildcareCoversSecChildObj = new JSONObject();
            MaternityAndChildcareCoversSecChildObj.put("Applicable", "False");
            MaternityAndChildcareCoversSecChildObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversSecChildObj.put("CoverRate", "0");
            MaternityAndChildcareCoversSecChildObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversSecChildObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            SecondChildCoversArray.put(MaternityAndChildcareCoversSecChildObj);

            JSONObject CoverageForNonMedicalCoversSecChildObj = new JSONObject();
            CoverageForNonMedicalCoversSecChildObj.put("Applicable", "False");
            CoverageForNonMedicalCoversSecChildObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversSecChildObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversSecChildObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversSecChildObj.put("CoverGroups", "Coverage for Non-Medical Items");
            SecondChildCoversArray.put(CoverageForNonMedicalCoversSecChildObj);

            JSONObject ConditionWaiverCoversSecChildObj = new JSONObject();
            ConditionWaiverCoversSecChildObj.put("Applicable", "False");
            ConditionWaiverCoversSecChildObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversSecChildObj.put("CoverRate", "0");
            ConditionWaiverCoversSecChildObj.put("CoverPremium", "0");
            ConditionWaiverCoversSecChildObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            SecondChildCoversArray.put(ConditionWaiverCoversSecChildObj);

            JSONObject PreExistingDiseaseCoversSecChildObj = new JSONObject();
            PreExistingDiseaseCoversSecChildObj.put("Applicable", "False");
            PreExistingDiseaseCoversSecChildObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversSecChildObj.put("CoverRate", "0");
            PreExistingDiseaseCoversSecChildObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversSecChildObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            SecondChildCoversArray.put(PreExistingDiseaseCoversSecChildObj);

            JSONObject OutpatientDentalWaitingCoversSecChildObj = new JSONObject();
            OutpatientDentalWaitingCoversSecChildObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversSecChildObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversSecChildObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversSecChildObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversSecChildObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            SecondChildCoversArray.put(OutpatientDentalWaitingCoversSecChildObj);

            JSONObject EmergencyTravellingAllowanceCoversSecChildObj = new JSONObject();
            EmergencyTravellingAllowanceCoversSecChildObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversSecChildObj.put("CoverGroups", "Emergency Travelling Allowance");
            SecondChildCoversArray.put(EmergencyTravellingAllowanceCoversSecChildObj);

            JSONObject SecondOpinionCoversSecChildObj = new JSONObject();
            SecondOpinionCoversSecChildObj.put("Applicable", "False");
            SecondOpinionCoversSecChildObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversSecChildObj.put("CoverRate", "0");
            SecondOpinionCoversSecChildObj.put("CoverPremium", "0");
            SecondOpinionCoversSecChildObj.put("CoverGroups", "Second Opinion");
            SecondChildCoversArray.put(SecondOpinionCoversSecChildObj);

            JSONObject RestCureCoversSecChildObj = new JSONObject();
            RestCureCoversSecChildObj.put("Applicable", "False");
            RestCureCoversSecChildObj.put("CoverSI", strSumInsured);
            RestCureCoversSecChildObj.put("CoverRate", "0");
            RestCureCoversSecChildObj.put("CoverPremium", "0");
            RestCureCoversSecChildObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            SecondChildCoversArray.put(RestCureCoversSecChildObj);

            JSONObject ObesityWeightCoversSecChildObj = new JSONObject();
            ObesityWeightCoversSecChildObj.put("Applicable", "False");
            ObesityWeightCoversSecChildObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversSecChildObj.put("CoverRate", "0");
            ObesityWeightCoversSecChildObj.put("CoverPremium", "0");
            ObesityWeightCoversSecChildObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            SecondChildCoversArray.put(ObesityWeightCoversSecChildObj);

            JSONObject SterilityInfertilityCoversSecChildObj = new JSONObject();
            SterilityInfertilityCoversSecChildObj.put("Applicable", "False");
            SterilityInfertilityCoversSecChildObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversSecChildObj.put("CoverRate", "0");
            SterilityInfertilityCoversSecChildObj.put("CoverPremium", "0");
            SterilityInfertilityCoversSecChildObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            SecondChildCoversArray.put(SterilityInfertilityCoversSecChildObj);

            JSONObject EnhancedOrganDonorCoversSecChildObj = new JSONObject();
            EnhancedOrganDonorCoversSecChildObj.put("Applicable", "False");
            EnhancedOrganDonorCoversSecChildObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversSecChildObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversSecChildObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversSecChildObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            SecondChildCoversArray.put(EnhancedOrganDonorCoversSecChildObj);

            JSONObject PremiumWaiverCoversSecChildObj = new JSONObject();
            PremiumWaiverCoversSecChildObj.put("Applicable", "False");
            PremiumWaiverCoversSecChildObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversSecChildObj.put("CoverRate", "0");
            PremiumWaiverCoversSecChildObj.put("CoverPremium", "0");
            PremiumWaiverCoversSecChildObj.put("CoverGroups", "Premium Waiver");
            SecondChildCoversArray.put(PremiumWaiverCoversSecChildObj);

            JSONObject GlobalCoversSecChildObj = new JSONObject();
            GlobalCoversSecChildObj.put("Applicable", "False");
            GlobalCoversSecChildObj.put("CoverSI", strSumInsured);
            GlobalCoversSecChildObj.put("CoverRate", "0");
            GlobalCoversSecChildObj.put("CoverPremium", "0");
            GlobalCoversSecChildObj.put("CoverGroups", "Global Cover");
            SecondChildCoversArray.put(GlobalCoversSecChildObj);


            JSONObject MedicallyAdvisedCoversSecChildObj = new JSONObject();
            MedicallyAdvisedCoversSecChildObj.put("Applicable", "False");
            MedicallyAdvisedCoversSecChildObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversSecChildObj.put("CoverRate", "0");
            MedicallyAdvisedCoversSecChildObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversSecChildObj.put("CoverGroups", "Medically Advised Support Devices");
            SecondChildCoversArray.put(MedicallyAdvisedCoversSecChildObj);

            JSONObject EmergencyCoversSecChildObj = new JSONObject();
            EmergencyCoversSecChildObj.put("Applicable", "False");
            EmergencyCoversSecChildObj.put("CoverSI", strSumInsured);
            EmergencyCoversSecChildObj.put("CoverRate", "0");
            EmergencyCoversSecChildObj.put("CoverPremium", "0");
            EmergencyCoversSecChildObj.put("CoverGroups", "Emergency Assistance Service");
            SecondChildCoversArray.put(EmergencyCoversSecChildObj);

            JSONObject HomeCareTreatmentCoversSecChildObj = new JSONObject();
            HomeCareTreatmentCoversSecChildObj.put("Applicable", "False");
            HomeCareTreatmentCoversSecChildObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversSecChildObj.put("CoverRate", "0");
            HomeCareTreatmentCoversSecChildObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversSecChildObj.put("CoverGroups", "Home Care Treatment");
            SecondChildCoversArray.put(HomeCareTreatmentCoversSecChildObj);

            JSONObject WellnessBenefitCoversSecChildObj = new JSONObject();
            WellnessBenefitCoversSecChildObj.put("Applicable", "False");
            WellnessBenefitCoversSecChildObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversSecChildObj.put("CoverRate", "0");
            WellnessBenefitCoversSecChildObj.put("CoverPremium", "0");
            WellnessBenefitCoversSecChildObj.put("CoverGroups", "Wellness Benefit");
            SecondChildCoversArray.put(WellnessBenefitCoversSecChildObj);

            JSONObject DiseaseManagementCoversSecChildObj = new JSONObject();
            DiseaseManagementCoversSecChildObj.put("Applicable", "False");
            DiseaseManagementCoversSecChildObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversSecChildObj.put("CoverRate", "0");
            DiseaseManagementCoversSecChildObj.put("CoverPremium", "0");
            DiseaseManagementCoversSecChildObj.put("CoverGroups", "Disease Management Program");
            SecondChildCoversArray.put(DiseaseManagementCoversSecChildObj);
            CoverDetailsSecondChildObj.put("Covers", SecondChildCoversArray);
            SecondChildObj.put("CoverDetails", CoverDetailsSecondChildObj);

            //Third child
            JSONObject ThirdChildObj = new JSONObject();
            ThirdChildObj.put("InsuredType", "Child");
            ThirdChildObj.put("FirstName", "");
            ThirdChildObj.put("LastName", "");
            ThirdChildObj.put("DOB", strThirdSonAgeEditText);
            ThirdChildObj.put("Gender", "M");
            ThirdChildObj.put("Relationship", "");
            ThirdChildObj.put("Occupation", "");
            ThirdChildObj.put("NomineeName", "");
            ThirdChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsThirdChildObj = new JSONObject();
            HealthIndicatorsThirdChildObj.put("PED", "N");
            HealthIndicatorsThirdChildObj.put("PEDDeclared", "N");
            HealthIndicatorsThirdChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsThirdChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsThirdChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsThirdChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsThirdChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsThirdChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsThirdChildObj.put("CoMorbidity", "N");
            ThirdChildObj.put("HealthIndicators", HealthIndicatorsThirdChildObj);

            JSONObject CoverDetailsThirdChildObj = new JSONObject();
            JSONArray ThirdChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversThirdChildObj = new JSONObject();
            BasicInsuranceCoversThirdChildObj.put("Applicable", "True");
            BasicInsuranceCoversThirdChildObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversThirdChildObj.put("CoverRate", "0");
            BasicInsuranceCoversThirdChildObj.put("CoverPremium", "0");
            BasicInsuranceCoversThirdChildObj.put("CoverGroups", "Basic Insurance Cover");
            ThirdChildCoversArray.put(BasicInsuranceCoversThirdChildObj);

            JSONObject PersonalAccidentCoversThirdChildObj = new JSONObject();
            PersonalAccidentCoversThirdChildObj.put("Applicable", "False");
            PersonalAccidentCoversThirdChildObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversThirdChildObj.put("CoverRate", "0");
            PersonalAccidentCoversThirdChildObj.put("CoverPremium", "0");
            PersonalAccidentCoversThirdChildObj.put("CoverGroups", "Personal Accident Cover");
            ThirdChildCoversArray.put(PersonalAccidentCoversThirdChildObj);

            JSONObject CriticalIllnessCoversThirdChildObj = new JSONObject();
            CriticalIllnessCoversThirdChildObj.put("Applicable", "False");
            CriticalIllnessCoversThirdChildObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversThirdChildObj.put("CoverRate", "0");
            CriticalIllnessCoversThirdChildObj.put("CoverPremium", "0");
            CriticalIllnessCoversThirdChildObj.put("CoverGroups", "Critical Illness Cover");
            ThirdChildCoversArray.put(CriticalIllnessCoversThirdChildObj);


            JSONObject DailyHospitalCoversThirdChildObj = new JSONObject();
            DailyHospitalCoversThirdChildObj.put("Applicable", "False");
            DailyHospitalCoversThirdChildObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversThirdChildObj.put("CoverRate", "0");
            DailyHospitalCoversThirdChildObj.put("CoverPremium", "0");
            DailyHospitalCoversThirdChildObj.put("CoverGroups", "Daily Hospital Cash Cover");
            ThirdChildCoversArray.put(DailyHospitalCoversThirdChildObj);

            JSONObject ModernCoversThirdChildObj = new JSONObject();
            ModernCoversThirdChildObj.put("Applicable", "False");
            ModernCoversThirdChildObj.put("CoverSI", strSumInsured);
            ModernCoversThirdChildObj.put("CoverRate", "0");
            ModernCoversThirdChildObj.put("CoverPremium", "0");
            ModernCoversThirdChildObj.put("CoverGroups", "Modern Treatments");
            ThirdChildCoversArray.put(ModernCoversThirdChildObj);
            JSONObject ExtensionPreHospitalizationCoversThirdChildObj = new JSONObject();
            ExtensionPreHospitalizationCoversThirdChildObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversThirdChildObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            ThirdChildCoversArray.put(ExtensionPreHospitalizationCoversThirdChildObj);

            JSONObject ExtensionPostHospitalizationCoversThirdChildObj = new JSONObject();
            ExtensionPostHospitalizationCoversThirdChildObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversThirdChildObj.put("CoverGroups", "Extension under Post-Hospitalization");
            ThirdChildCoversArray.put(ExtensionPostHospitalizationCoversThirdChildObj);


            JSONObject MaternityAndChildcareCoversThirdChildObj = new JSONObject();
            MaternityAndChildcareCoversThirdChildObj.put("Applicable", "False");
            MaternityAndChildcareCoversThirdChildObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversThirdChildObj.put("CoverRate", "0");
            MaternityAndChildcareCoversThirdChildObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversThirdChildObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            ThirdChildCoversArray.put(MaternityAndChildcareCoversThirdChildObj);

            JSONObject CoverageForNonMedicalCoversThirdChildObj = new JSONObject();
            CoverageForNonMedicalCoversThirdChildObj.put("Applicable", "False");
            CoverageForNonMedicalCoversThirdChildObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversThirdChildObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversThirdChildObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversThirdChildObj.put("CoverGroups", "Coverage for Non-Medical Items");
            ThirdChildCoversArray.put(CoverageForNonMedicalCoversThirdChildObj);

            JSONObject ConditionWaiverCoversThirdChildObj = new JSONObject();
            ConditionWaiverCoversThirdChildObj.put("Applicable", "False");
            ConditionWaiverCoversThirdChildObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversThirdChildObj.put("CoverRate", "0");
            ConditionWaiverCoversThirdChildObj.put("CoverPremium", "0");
            ConditionWaiverCoversThirdChildObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            ThirdChildCoversArray.put(ConditionWaiverCoversThirdChildObj);

            JSONObject PreExistingDiseaseCoversThirdChildObj = new JSONObject();
            PreExistingDiseaseCoversThirdChildObj.put("Applicable", "False");
            PreExistingDiseaseCoversThirdChildObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversThirdChildObj.put("CoverRate", "0");
            PreExistingDiseaseCoversThirdChildObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversThirdChildObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            ThirdChildCoversArray.put(PreExistingDiseaseCoversThirdChildObj);

            JSONObject OutpatientDentalWaitingCoversThirdChildObj = new JSONObject();
            OutpatientDentalWaitingCoversThirdChildObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversThirdChildObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            ThirdChildCoversArray.put(OutpatientDentalWaitingCoversThirdChildObj);

            JSONObject EmergencyTravellingAllowanceCoversThirdChildObj = new JSONObject();
            EmergencyTravellingAllowanceCoversThirdChildObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversThirdChildObj.put("CoverGroups", "Emergency Travelling Allowance");
            ThirdChildCoversArray.put(EmergencyTravellingAllowanceCoversThirdChildObj);

            JSONObject SecondOpinionCoversThirdChildObj = new JSONObject();
            SecondOpinionCoversThirdChildObj.put("Applicable", "False");
            SecondOpinionCoversThirdChildObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversThirdChildObj.put("CoverRate", "0");
            SecondOpinionCoversThirdChildObj.put("CoverPremium", "0");
            SecondOpinionCoversThirdChildObj.put("CoverGroups", "Second Opinion");
            ThirdChildCoversArray.put(SecondOpinionCoversThirdChildObj);

            JSONObject RestCureCoversThirdChildObj = new JSONObject();
            RestCureCoversThirdChildObj.put("Applicable", "False");
            RestCureCoversThirdChildObj.put("CoverSI", strSumInsured);
            RestCureCoversThirdChildObj.put("CoverRate", "0");
            RestCureCoversThirdChildObj.put("CoverPremium", "0");
            RestCureCoversThirdChildObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            ThirdChildCoversArray.put(RestCureCoversThirdChildObj);

            JSONObject ObesityWeightCoversThirdChildObj = new JSONObject();
            ObesityWeightCoversThirdChildObj.put("Applicable", "False");
            ObesityWeightCoversThirdChildObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversThirdChildObj.put("CoverRate", "0");
            ObesityWeightCoversThirdChildObj.put("CoverPremium", "0");
            ObesityWeightCoversThirdChildObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            ThirdChildCoversArray.put(ObesityWeightCoversThirdChildObj);

            JSONObject SterilityInfertilityCoversThirdChildObj = new JSONObject();
            SterilityInfertilityCoversThirdChildObj.put("Applicable", "False");
            SterilityInfertilityCoversThirdChildObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversThirdChildObj.put("CoverRate", "0");
            SterilityInfertilityCoversThirdChildObj.put("CoverPremium", "0");
            SterilityInfertilityCoversThirdChildObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            ThirdChildCoversArray.put(SterilityInfertilityCoversThirdChildObj);

            JSONObject EnhancedOrganDonorCoversThirdChildObj = new JSONObject();
            EnhancedOrganDonorCoversThirdChildObj.put("Applicable", "False");
            EnhancedOrganDonorCoversThirdChildObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversThirdChildObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversThirdChildObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversThirdChildObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            ThirdChildCoversArray.put(EnhancedOrganDonorCoversThirdChildObj);

            JSONObject PremiumWaiverCoversThirdChildObj = new JSONObject();
            PremiumWaiverCoversThirdChildObj.put("Applicable", "False");
            PremiumWaiverCoversThirdChildObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversThirdChildObj.put("CoverRate", "0");
            PremiumWaiverCoversThirdChildObj.put("CoverPremium", "0");
            PremiumWaiverCoversThirdChildObj.put("CoverGroups", "Premium Waiver");
            ThirdChildCoversArray.put(PremiumWaiverCoversThirdChildObj);

            JSONObject GlobalCoversThirdChildObj = new JSONObject();
            GlobalCoversThirdChildObj.put("Applicable", "False");
            GlobalCoversThirdChildObj.put("CoverSI", strSumInsured);
            GlobalCoversThirdChildObj.put("CoverRate", "0");
            GlobalCoversThirdChildObj.put("CoverPremium", "0");
            GlobalCoversThirdChildObj.put("CoverGroups", "Global Cover");
            ThirdChildCoversArray.put(GlobalCoversThirdChildObj);


            JSONObject MedicallyAdvisedCoversThirdChildObj = new JSONObject();
            MedicallyAdvisedCoversThirdChildObj.put("Applicable", "False");
            MedicallyAdvisedCoversThirdChildObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversThirdChildObj.put("CoverRate", "0");
            MedicallyAdvisedCoversThirdChildObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversThirdChildObj.put("CoverGroups", "Medically Advised Support Devices");
            ThirdChildCoversArray.put(MedicallyAdvisedCoversThirdChildObj);

            JSONObject EmergencyCoversThirdChildObj = new JSONObject();
            EmergencyCoversThirdChildObj.put("Applicable", "False");
            EmergencyCoversThirdChildObj.put("CoverSI", strSumInsured);
            EmergencyCoversThirdChildObj.put("CoverRate", "0");
            EmergencyCoversThirdChildObj.put("CoverPremium", "0");
            EmergencyCoversThirdChildObj.put("CoverGroups", "Emergency Assistance Service");
            ThirdChildCoversArray.put(EmergencyCoversThirdChildObj);

            JSONObject HomeCareTreatmentCoversThirdChildObj = new JSONObject();
            HomeCareTreatmentCoversThirdChildObj.put("Applicable", "False");
            HomeCareTreatmentCoversThirdChildObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversThirdChildObj.put("CoverRate", "0");
            HomeCareTreatmentCoversThirdChildObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversThirdChildObj.put("CoverGroups", "Home Care Treatment");
            ThirdChildCoversArray.put(HomeCareTreatmentCoversThirdChildObj);

            JSONObject WellnessBenefitCoversThirdChildObj = new JSONObject();
            WellnessBenefitCoversThirdChildObj.put("Applicable", "False");
            WellnessBenefitCoversThirdChildObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversThirdChildObj.put("CoverRate", "0");
            WellnessBenefitCoversThirdChildObj.put("CoverPremium", "0");
            WellnessBenefitCoversThirdChildObj.put("CoverGroups", "Wellness Benefit");
            ThirdChildCoversArray.put(WellnessBenefitCoversThirdChildObj);

            JSONObject DiseaseManagementCoversThirdChildObj = new JSONObject();
            DiseaseManagementCoversThirdChildObj.put("Applicable", "False");
            DiseaseManagementCoversThirdChildObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversThirdChildObj.put("CoverRate", "0");
            DiseaseManagementCoversThirdChildObj.put("CoverPremium", "0");
            DiseaseManagementCoversThirdChildObj.put("CoverGroups", "Disease Management Program");
            ThirdChildCoversArray.put(DiseaseManagementCoversThirdChildObj);
            CoverDetailsThirdChildObj.put("Covers", ThirdChildCoversArray);
            ThirdChildObj.put("CoverDetails", CoverDetailsThirdChildObj);


            //fourChild
            JSONObject FourthChildObj = new JSONObject();
            FourthChildObj.put("InsuredType", "Child");
            FourthChildObj.put("FirstName", "");
            FourthChildObj.put("LastName", "");
            FourthChildObj.put("DOB", strFourSonAgeEditText);
            FourthChildObj.put("Gender", "M");
            FourthChildObj.put("Relationship", "");
            FourthChildObj.put("Occupation", "");
            FourthChildObj.put("NomineeName", "");
            FourthChildObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFourthChildObj = new JSONObject();
            HealthIndicatorsFourthChildObj.put("PED", "N");
            HealthIndicatorsFourthChildObj.put("PEDDeclared", "N");
            HealthIndicatorsFourthChildObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFourthChildObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFourthChildObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFourthChildObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFourthChildObj.put("BodyMassIndex", "30");
            HealthIndicatorsFourthChildObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFourthChildObj.put("CoMorbidity", "N");
            FourthChildObj.put("HealthIndicators", HealthIndicatorsFourthChildObj);

            JSONObject CoverDetailsFourthChildObj = new JSONObject();
            JSONArray FourthChildCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversFourthChildObj = new JSONObject();
            BasicInsuranceCoversFourthChildObj.put("Applicable", "True");
            BasicInsuranceCoversFourthChildObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversFourthChildObj.put("CoverRate", "0");
            BasicInsuranceCoversFourthChildObj.put("CoverPremium", "0");
            BasicInsuranceCoversFourthChildObj.put("CoverGroups", "Basic Insurance Cover");
            FourthChildCoversArray.put(BasicInsuranceCoversFourthChildObj);

            JSONObject PersonalAccidentCoversFourthChildObj = new JSONObject();
            PersonalAccidentCoversFourthChildObj.put("Applicable", "False");
            PersonalAccidentCoversFourthChildObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFourthChildObj.put("CoverRate", "0");
            PersonalAccidentCoversFourthChildObj.put("CoverPremium", "0");
            PersonalAccidentCoversFourthChildObj.put("CoverGroups", "Personal Accident Cover");
            FourthChildCoversArray.put(PersonalAccidentCoversFourthChildObj);

            JSONObject CriticalIllnessCoversFourthChildObj = new JSONObject();
            CriticalIllnessCoversFourthChildObj.put("Applicable", "False");
            CriticalIllnessCoversFourthChildObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFourthChildObj.put("CoverRate", "0");
            CriticalIllnessCoversFourthChildObj.put("CoverPremium", "0");
            CriticalIllnessCoversFourthChildObj.put("CoverGroups", "Critical Illness Cover");
            FourthChildCoversArray.put(CriticalIllnessCoversFourthChildObj);


            JSONObject DailyHospitalCoversFourthChildObj = new JSONObject();
            DailyHospitalCoversFourthChildObj.put("Applicable", "False");
            DailyHospitalCoversFourthChildObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFourthChildObj.put("CoverRate", "0");
            DailyHospitalCoversFourthChildObj.put("CoverPremium", "0");
            DailyHospitalCoversFourthChildObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FourthChildCoversArray.put(DailyHospitalCoversFourthChildObj);

            JSONObject ModernCoversFourthChildObj = new JSONObject();
            ModernCoversFourthChildObj.put("Applicable", "False");
            ModernCoversFourthChildObj.put("CoverSI", strSumInsured);
            ModernCoversFourthChildObj.put("CoverRate", "0");
            ModernCoversFourthChildObj.put("CoverPremium", "0");
            ModernCoversFourthChildObj.put("CoverGroups", "Modern Treatments");
            FourthChildCoversArray.put(ModernCoversFourthChildObj);
            JSONObject ExtensionPreHospitalizationCoversFourthChildObj = new JSONObject();
            ExtensionPreHospitalizationCoversFourthChildObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFourthChildObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FourthChildCoversArray.put(ExtensionPreHospitalizationCoversFourthChildObj);

            JSONObject ExtensionPostHospitalizationCoversFourthChildObj = new JSONObject();
            ExtensionPostHospitalizationCoversFourthChildObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFourthChildObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FourthChildCoversArray.put(ExtensionPostHospitalizationCoversFourthChildObj);


            JSONObject MaternityAndChildcareCoversFourthChildObj = new JSONObject();
            MaternityAndChildcareCoversFourthChildObj.put("Applicable", "False");
            MaternityAndChildcareCoversFourthChildObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFourthChildObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFourthChildObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFourthChildObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FourthChildCoversArray.put(MaternityAndChildcareCoversFourthChildObj);

            JSONObject CoverageForNonMedicalCoversFourthChildObj = new JSONObject();
            CoverageForNonMedicalCoversFourthChildObj.put("Applicable", "False");
            CoverageForNonMedicalCoversFourthChildObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFourthChildObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFourthChildObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFourthChildObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FourthChildCoversArray.put(CoverageForNonMedicalCoversFourthChildObj);

            JSONObject ConditionWaiverCoversFourthChildObj = new JSONObject();
            ConditionWaiverCoversFourthChildObj.put("Applicable", "False");
            ConditionWaiverCoversFourthChildObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFourthChildObj.put("CoverRate", "0");
            ConditionWaiverCoversFourthChildObj.put("CoverPremium", "0");
            ConditionWaiverCoversFourthChildObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FourthChildCoversArray.put(ConditionWaiverCoversFourthChildObj);

            JSONObject PreExistingDiseaseCoversFourthChildObj = new JSONObject();
            PreExistingDiseaseCoversFourthChildObj.put("Applicable", "False");
            PreExistingDiseaseCoversFourthChildObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFourthChildObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFourthChildObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFourthChildObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FourthChildCoversArray.put(PreExistingDiseaseCoversFourthChildObj);

            JSONObject OutpatientDentalWaitingCoversFourthChildObj = new JSONObject();
            OutpatientDentalWaitingCoversFourthChildObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFourthChildObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FourthChildCoversArray.put(OutpatientDentalWaitingCoversFourthChildObj);

            JSONObject EmergencyTravellingAllowanceCoversFourthChildObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFourthChildObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFourthChildObj.put("CoverGroups", "Emergency Travelling Allowance");
            FourthChildCoversArray.put(EmergencyTravellingAllowanceCoversFourthChildObj);

            JSONObject SecondOpinionCoversFourthChildObj = new JSONObject();
            SecondOpinionCoversFourthChildObj.put("Applicable", "False");
            SecondOpinionCoversFourthChildObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFourthChildObj.put("CoverRate", "0");
            SecondOpinionCoversFourthChildObj.put("CoverPremium", "0");
            SecondOpinionCoversFourthChildObj.put("CoverGroups", "Second Opinion");
            FourthChildCoversArray.put(SecondOpinionCoversFourthChildObj);

            JSONObject RestCureCoversFourthChildObj = new JSONObject();
            RestCureCoversFourthChildObj.put("Applicable", "False");
            RestCureCoversFourthChildObj.put("CoverSI", strSumInsured);
            RestCureCoversFourthChildObj.put("CoverRate", "0");
            RestCureCoversFourthChildObj.put("CoverPremium", "0");
            RestCureCoversFourthChildObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FourthChildCoversArray.put(RestCureCoversFourthChildObj);

            JSONObject ObesityWeightCoversFourthChildObj = new JSONObject();
            ObesityWeightCoversFourthChildObj.put("Applicable", "False");
            ObesityWeightCoversFourthChildObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFourthChildObj.put("CoverRate", "0");
            ObesityWeightCoversFourthChildObj.put("CoverPremium", "0");
            ObesityWeightCoversFourthChildObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FourthChildCoversArray.put(ObesityWeightCoversFourthChildObj);

            JSONObject SterilityInfertilityCoversFourthChildObj = new JSONObject();
            SterilityInfertilityCoversFourthChildObj.put("Applicable", "False");
            SterilityInfertilityCoversFourthChildObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFourthChildObj.put("CoverRate", "0");
            SterilityInfertilityCoversFourthChildObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFourthChildObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FourthChildCoversArray.put(SterilityInfertilityCoversFourthChildObj);

            JSONObject EnhancedOrganDonorCoversFourthChildObj = new JSONObject();
            EnhancedOrganDonorCoversFourthChildObj.put("Applicable", "False");
            EnhancedOrganDonorCoversFourthChildObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFourthChildObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFourthChildObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFourthChildObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FourthChildCoversArray.put(EnhancedOrganDonorCoversFourthChildObj);

            JSONObject PremiumWaiverCoversFourthChildObj = new JSONObject();
            PremiumWaiverCoversFourthChildObj.put("Applicable", "False");
            PremiumWaiverCoversFourthChildObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFourthChildObj.put("CoverRate", "0");
            PremiumWaiverCoversFourthChildObj.put("CoverPremium", "0");
            PremiumWaiverCoversFourthChildObj.put("CoverGroups", "Premium Waiver");
            FourthChildCoversArray.put(PremiumWaiverCoversFourthChildObj);

            JSONObject GlobalCoversFourthChildObj = new JSONObject();
            GlobalCoversFourthChildObj.put("Applicable", "False");
            GlobalCoversFourthChildObj.put("CoverSI", strSumInsured);
            GlobalCoversFourthChildObj.put("CoverRate", "0");
            GlobalCoversFourthChildObj.put("CoverPremium", "0");
            GlobalCoversFourthChildObj.put("CoverGroups", "Global Cover");
            FourthChildCoversArray.put(GlobalCoversFourthChildObj);


            JSONObject MedicallyAdvisedCoversFourthChildObj = new JSONObject();
            MedicallyAdvisedCoversFourthChildObj.put("Applicable", "False");
            MedicallyAdvisedCoversFourthChildObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFourthChildObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFourthChildObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFourthChildObj.put("CoverGroups", "Medically Advised Support Devices");
            FourthChildCoversArray.put(MedicallyAdvisedCoversFourthChildObj);

            JSONObject EmergencyCoversFourthChildObj = new JSONObject();
            EmergencyCoversFourthChildObj.put("Applicable", "False");
            EmergencyCoversFourthChildObj.put("CoverSI", strSumInsured);
            EmergencyCoversFourthChildObj.put("CoverRate", "0");
            EmergencyCoversFourthChildObj.put("CoverPremium", "0");
            EmergencyCoversFourthChildObj.put("CoverGroups", "Emergency Assistance Service");
            FourthChildCoversArray.put(EmergencyCoversFourthChildObj);

            JSONObject HomeCareTreatmentCoversFourthChildObj = new JSONObject();
            HomeCareTreatmentCoversFourthChildObj.put("Applicable", "False");
            HomeCareTreatmentCoversFourthChildObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFourthChildObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFourthChildObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFourthChildObj.put("CoverGroups", "Home Care Treatment");
            FourthChildCoversArray.put(HomeCareTreatmentCoversFourthChildObj);

            JSONObject WellnessBenefitCoversFourthChildObj = new JSONObject();
            WellnessBenefitCoversFourthChildObj.put("Applicable", "False");
            WellnessBenefitCoversFourthChildObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFourthChildObj.put("CoverRate", "0");
            WellnessBenefitCoversFourthChildObj.put("CoverPremium", "0");
            WellnessBenefitCoversFourthChildObj.put("CoverGroups", "Wellness Benefit");
            FourthChildCoversArray.put(WellnessBenefitCoversFourthChildObj);

            JSONObject DiseaseManagementCoversFourthChildObj = new JSONObject();
            DiseaseManagementCoversFourthChildObj.put("Applicable", "False");
            DiseaseManagementCoversFourthChildObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFourthChildObj.put("CoverRate", "0");
            DiseaseManagementCoversFourthChildObj.put("CoverPremium", "0");
            DiseaseManagementCoversFourthChildObj.put("CoverGroups", "Disease Management Program");
            FourthChildCoversArray.put(DiseaseManagementCoversFourthChildObj);
            CoverDetailsFourthChildObj.put("Covers", FourthChildCoversArray);
            FourthChildObj.put("CoverDetails", CoverDetailsFourthChildObj);


            //Mother
            JSONObject MotherObj = new JSONObject();
            MotherObj.put("InsuredType", "Parent");
            MotherObj.put("FirstName", "");
            MotherObj.put("LastName", "");
            MotherObj.put("DOB", strMotherAgeEditText);
            MotherObj.put("Gender", "F");
            MotherObj.put("Relationship", "");
            MotherObj.put("Occupation", "");
            MotherObj.put("NomineeName", "");
            MotherObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsMotherObj = new JSONObject();
            HealthIndicatorsMotherObj.put("PED", "N");
            HealthIndicatorsMotherObj.put("PEDDeclared", "N");
            HealthIndicatorsMotherObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsMotherObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsMotherObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsMotherObj.put("CholesterolLevel", "NA");
            HealthIndicatorsMotherObj.put("BodyMassIndex", "30");
            HealthIndicatorsMotherObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsMotherObj.put("CoMorbidity", "N");
            MotherObj.put("HealthIndicators", HealthIndicatorsMotherObj);

            JSONObject CoverDetailsMotherObj = new JSONObject();
            JSONArray MotherCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversMotherObj = new JSONObject();
            BasicInsuranceCoversMotherObj.put("Applicable", "True");
            BasicInsuranceCoversMotherObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversMotherObj.put("CoverRate", "0");
            BasicInsuranceCoversMotherObj.put("CoverPremium", "0");
            BasicInsuranceCoversMotherObj.put("CoverGroups", "Basic Insurance Cover");
            MotherCoversArray.put(BasicInsuranceCoversMotherObj);

            JSONObject PersonalAccidentCoversMotherObj = new JSONObject();
            PersonalAccidentCoversMotherObj.put("Applicable", "False");
            PersonalAccidentCoversMotherObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversMotherObj.put("CoverRate", "0");
            PersonalAccidentCoversMotherObj.put("CoverPremium", "0");
            PersonalAccidentCoversMotherObj.put("CoverGroups", "Personal Accident Cover");
            MotherCoversArray.put(PersonalAccidentCoversMotherObj);

            JSONObject CriticalIllnessCoversMotherObj = new JSONObject();
            CriticalIllnessCoversMotherObj.put("Applicable", "False");
            CriticalIllnessCoversMotherObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversMotherObj.put("CoverRate", "0");
            CriticalIllnessCoversMotherObj.put("CoverPremium", "0");
            CriticalIllnessCoversMotherObj.put("CoverGroups", "Critical Illness Cover");
            MotherCoversArray.put(CriticalIllnessCoversMotherObj);


            JSONObject DailyHospitalCoversMotherObj = new JSONObject();
            DailyHospitalCoversMotherObj.put("Applicable", "False");
            DailyHospitalCoversMotherObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversMotherObj.put("CoverRate", "0");
            DailyHospitalCoversMotherObj.put("CoverPremium", "0");
            DailyHospitalCoversMotherObj.put("CoverGroups", "Daily Hospital Cash Cover");
            MotherCoversArray.put(DailyHospitalCoversMotherObj);

            JSONObject ModernCoversMotherObj = new JSONObject();
            ModernCoversMotherObj.put("Applicable", "False");
            ModernCoversMotherObj.put("CoverSI", strSumInsured);
            ModernCoversMotherObj.put("CoverRate", "0");
            ModernCoversMotherObj.put("CoverPremium", "0");
            ModernCoversMotherObj.put("CoverGroups", "Modern Treatments");
            MotherCoversArray.put(ModernCoversMotherObj);
            JSONObject ExtensionPreHospitalizationCoversMotherObj = new JSONObject();
            ExtensionPreHospitalizationCoversMotherObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversMotherObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversMotherObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversMotherObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversMotherObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            MotherCoversArray.put(ExtensionPreHospitalizationCoversMotherObj);

            JSONObject ExtensionPostHospitalizationCoversMotherObj = new JSONObject();
            ExtensionPostHospitalizationCoversMotherObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversMotherObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversMotherObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversMotherObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversMotherObj.put("CoverGroups", "Extension under Post-Hospitalization");
            MotherCoversArray.put(ExtensionPostHospitalizationCoversMotherObj);


            JSONObject MaternityAndChildcareCoversMotherObj = new JSONObject();
            MaternityAndChildcareCoversMotherObj.put("Applicable", "False");
            MaternityAndChildcareCoversMotherObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversMotherObj.put("CoverRate", "0");
            MaternityAndChildcareCoversMotherObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversMotherObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            MotherCoversArray.put(MaternityAndChildcareCoversMotherObj);

            JSONObject CoverageForNonMedicalCoversMotherObj = new JSONObject();
            CoverageForNonMedicalCoversMotherObj.put("Applicable", "False");
            CoverageForNonMedicalCoversMotherObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversMotherObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversMotherObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversMotherObj.put("CoverGroups", "Coverage for Non-Medical Items");
            MotherCoversArray.put(CoverageForNonMedicalCoversMotherObj);

            JSONObject ConditionWaiverCoversMotherObj = new JSONObject();
            ConditionWaiverCoversMotherObj.put("Applicable", "False");
            ConditionWaiverCoversMotherObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversMotherObj.put("CoverRate", "0");
            ConditionWaiverCoversMotherObj.put("CoverPremium", "0");
            ConditionWaiverCoversMotherObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            MotherCoversArray.put(ConditionWaiverCoversMotherObj);

            JSONObject PreExistingDiseaseCoversMotherObj = new JSONObject();
            PreExistingDiseaseCoversMotherObj.put("Applicable", "False");
            PreExistingDiseaseCoversMotherObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversMotherObj.put("CoverRate", "0");
            PreExistingDiseaseCoversMotherObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversMotherObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            MotherCoversArray.put(PreExistingDiseaseCoversMotherObj);

            JSONObject OutpatientDentalWaitingCoversMotherObj = new JSONObject();
            OutpatientDentalWaitingCoversMotherObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversMotherObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversMotherObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversMotherObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversMotherObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            MotherCoversArray.put(OutpatientDentalWaitingCoversMotherObj);

            JSONObject EmergencyTravellingAllowanceCoversMotherObj = new JSONObject();
            EmergencyTravellingAllowanceCoversMotherObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversMotherObj.put("CoverGroups", "Emergency Travelling Allowance");
            MotherCoversArray.put(EmergencyTravellingAllowanceCoversMotherObj);

            JSONObject SecondOpinionCoversMotherObj = new JSONObject();
            SecondOpinionCoversMotherObj.put("Applicable", "False");
            SecondOpinionCoversMotherObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversMotherObj.put("CoverRate", "0");
            SecondOpinionCoversMotherObj.put("CoverPremium", "0");
            SecondOpinionCoversMotherObj.put("CoverGroups", "Second Opinion");
            MotherCoversArray.put(SecondOpinionCoversMotherObj);

            JSONObject RestCureCoversMotherObj = new JSONObject();
            RestCureCoversMotherObj.put("Applicable", "False");
            RestCureCoversMotherObj.put("CoverSI", strSumInsured);
            RestCureCoversMotherObj.put("CoverRate", "0");
            RestCureCoversMotherObj.put("CoverPremium", "0");
            RestCureCoversMotherObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            MotherCoversArray.put(RestCureCoversMotherObj);

            JSONObject ObesityWeightCoversMotherObj = new JSONObject();
            ObesityWeightCoversMotherObj.put("Applicable", "False");
            ObesityWeightCoversMotherObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversMotherObj.put("CoverRate", "0");
            ObesityWeightCoversMotherObj.put("CoverPremium", "0");
            ObesityWeightCoversMotherObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            MotherCoversArray.put(ObesityWeightCoversMotherObj);

            JSONObject SterilityInfertilityCoversMotherObj = new JSONObject();
            SterilityInfertilityCoversMotherObj.put("Applicable", "False");
            SterilityInfertilityCoversMotherObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversMotherObj.put("CoverRate", "0");
            SterilityInfertilityCoversMotherObj.put("CoverPremium", "0");
            SterilityInfertilityCoversMotherObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            MotherCoversArray.put(SterilityInfertilityCoversMotherObj);

            JSONObject EnhancedOrganDonorCoversMotherObj = new JSONObject();
            EnhancedOrganDonorCoversMotherObj.put("Applicable", "False");
            EnhancedOrganDonorCoversMotherObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversMotherObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversMotherObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversMotherObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            MotherCoversArray.put(EnhancedOrganDonorCoversMotherObj);

            JSONObject PremiumWaiverCoversMotherObj = new JSONObject();
            PremiumWaiverCoversMotherObj.put("Applicable", "False");
            PremiumWaiverCoversMotherObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversMotherObj.put("CoverRate", "0");
            PremiumWaiverCoversMotherObj.put("CoverPremium", "0");
            PremiumWaiverCoversMotherObj.put("CoverGroups", "Premium Waiver");
            MotherCoversArray.put(PremiumWaiverCoversMotherObj);

            JSONObject GlobalCoversMotherObj = new JSONObject();
            GlobalCoversMotherObj.put("Applicable", "False");
            GlobalCoversMotherObj.put("CoverSI", strSumInsured);
            GlobalCoversMotherObj.put("CoverRate", "0");
            GlobalCoversMotherObj.put("CoverPremium", "0");
            GlobalCoversMotherObj.put("CoverGroups", "Global Cover");
            MotherCoversArray.put(GlobalCoversMotherObj);


            JSONObject MedicallyAdvisedCoversMotherObj = new JSONObject();
            MedicallyAdvisedCoversMotherObj.put("Applicable", "False");
            MedicallyAdvisedCoversMotherObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversMotherObj.put("CoverRate", "0");
            MedicallyAdvisedCoversMotherObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversMotherObj.put("CoverGroups", "Medically Advised Support Devices");
            MotherCoversArray.put(MedicallyAdvisedCoversMotherObj);

            JSONObject EmergencyCoversMotherObj = new JSONObject();
            EmergencyCoversMotherObj.put("Applicable", "False");
            EmergencyCoversMotherObj.put("CoverSI", strSumInsured);
            EmergencyCoversMotherObj.put("CoverRate", "0");
            EmergencyCoversMotherObj.put("CoverPremium", "0");
            EmergencyCoversMotherObj.put("CoverGroups", "Emergency Assistance Service");
            MotherCoversArray.put(EmergencyCoversMotherObj);

            JSONObject HomeCareTreatmentCoversMotherObj = new JSONObject();
            HomeCareTreatmentCoversMotherObj.put("Applicable", "False");
            HomeCareTreatmentCoversMotherObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversMotherObj.put("CoverRate", "0");
            HomeCareTreatmentCoversMotherObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversMotherObj.put("CoverGroups", "Home Care Treatment");
            MotherCoversArray.put(HomeCareTreatmentCoversMotherObj);

            JSONObject WellnessBenefitCoversMotherObj = new JSONObject();
            WellnessBenefitCoversMotherObj.put("Applicable", "False");
            WellnessBenefitCoversMotherObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversMotherObj.put("CoverRate", "0");
            WellnessBenefitCoversMotherObj.put("CoverPremium", "0");
            WellnessBenefitCoversMotherObj.put("CoverGroups", "Wellness Benefit");
            MotherCoversArray.put(WellnessBenefitCoversMotherObj);

            JSONObject DiseaseManagementCoversMotherObj = new JSONObject();
            DiseaseManagementCoversMotherObj.put("Applicable", "False");
            DiseaseManagementCoversMotherObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversMotherObj.put("CoverRate", "0");
            DiseaseManagementCoversMotherObj.put("CoverPremium", "0");
            DiseaseManagementCoversMotherObj.put("CoverGroups", "Disease Management Program");
            MotherCoversArray.put(DiseaseManagementCoversMotherObj);
            CoverDetailsMotherObj.put("Covers", MotherCoversArray);
            MotherObj.put("CoverDetails", CoverDetailsMotherObj);
            //father
            JSONObject FatherObj = new JSONObject();
            FatherObj.put("InsuredType", "Parent");
            FatherObj.put("FirstName", "");
            FatherObj.put("LastName", "");
            FatherObj.put("DOB", strFatherAgeEditText);
            FatherObj.put("Gender", "M");
            FatherObj.put("Relationship", "");
            FatherObj.put("Occupation", "");
            FatherObj.put("NomineeName", "");
            FatherObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFatherObj = new JSONObject();
            HealthIndicatorsFatherObj.put("PED", "N");
            HealthIndicatorsFatherObj.put("PEDDeclared", "N");
            HealthIndicatorsFatherObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFatherObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFatherObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFatherObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFatherObj.put("BodyMassIndex", "30");
            HealthIndicatorsFatherObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFatherObj.put("CoMorbidity", "N");
            FatherObj.put("HealthIndicators", HealthIndicatorsFatherObj);

            JSONObject CoverDetailsFatherObj = new JSONObject();
            JSONArray FatherCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversFatherObj = new JSONObject();
            BasicInsuranceCoversFatherObj.put("Applicable", "True");
            BasicInsuranceCoversFatherObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversFatherObj.put("CoverRate", "0");
            BasicInsuranceCoversFatherObj.put("CoverPremium", "0");
            BasicInsuranceCoversFatherObj.put("CoverGroups", "Basic Insurance Cover");
            FatherCoversArray.put(BasicInsuranceCoversFatherObj);

            JSONObject PersonalAccidentCoversFatherObj = new JSONObject();
            PersonalAccidentCoversFatherObj.put("Applicable", "False");
            PersonalAccidentCoversFatherObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFatherObj.put("CoverRate", "0");
            PersonalAccidentCoversFatherObj.put("CoverPremium", "0");
            PersonalAccidentCoversFatherObj.put("CoverGroups", "Personal Accident Cover");
            FatherCoversArray.put(PersonalAccidentCoversFatherObj);

            JSONObject CriticalIllnessCoversFatherObj = new JSONObject();
            CriticalIllnessCoversFatherObj.put("Applicable", "False");
            CriticalIllnessCoversFatherObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFatherObj.put("CoverRate", "0");
            CriticalIllnessCoversFatherObj.put("CoverPremium", "0");
            CriticalIllnessCoversFatherObj.put("CoverGroups", "Critical Illness Cover");
            FatherCoversArray.put(CriticalIllnessCoversFatherObj);


            JSONObject DailyHospitalCoversFatherObj = new JSONObject();
            DailyHospitalCoversFatherObj.put("Applicable", "False");
            DailyHospitalCoversFatherObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFatherObj.put("CoverRate", "0");
            DailyHospitalCoversFatherObj.put("CoverPremium", "0");
            DailyHospitalCoversFatherObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FatherCoversArray.put(DailyHospitalCoversFatherObj);

            JSONObject ModernCoversFatherObj = new JSONObject();
            ModernCoversFatherObj.put("Applicable", "False");
            ModernCoversFatherObj.put("CoverSI", strSumInsured);
            ModernCoversFatherObj.put("CoverRate", "0");
            ModernCoversFatherObj.put("CoverPremium", "0");
            ModernCoversFatherObj.put("CoverGroups", "Modern Treatments");
            FatherCoversArray.put(ModernCoversFatherObj);
            JSONObject ExtensionPreHospitalizationCoversFatherObj = new JSONObject();
            ExtensionPreHospitalizationCoversFatherObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversFatherObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFatherObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFatherObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFatherObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FatherCoversArray.put(ExtensionPreHospitalizationCoversFatherObj);

            JSONObject ExtensionPostHospitalizationCoversFatherObj = new JSONObject();
            ExtensionPostHospitalizationCoversFatherObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversFatherObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFatherObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFatherObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFatherObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FatherCoversArray.put(ExtensionPostHospitalizationCoversFatherObj);


            JSONObject MaternityAndChildcareCoversFatherObj = new JSONObject();
            MaternityAndChildcareCoversFatherObj.put("Applicable", "False");
            MaternityAndChildcareCoversFatherObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFatherObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFatherObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFatherObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FatherCoversArray.put(MaternityAndChildcareCoversFatherObj);

            JSONObject CoverageForNonMedicalCoversFatherObj = new JSONObject();
            CoverageForNonMedicalCoversFatherObj.put("Applicable", "False");
            CoverageForNonMedicalCoversFatherObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFatherObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFatherObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFatherObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FatherCoversArray.put(CoverageForNonMedicalCoversFatherObj);

            JSONObject ConditionWaiverCoversFatherObj = new JSONObject();
            ConditionWaiverCoversFatherObj.put("Applicable", "False");
            ConditionWaiverCoversFatherObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFatherObj.put("CoverRate", "0");
            ConditionWaiverCoversFatherObj.put("CoverPremium", "0");
            ConditionWaiverCoversFatherObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FatherCoversArray.put(ConditionWaiverCoversFatherObj);

            JSONObject PreExistingDiseaseCoversFatherObj = new JSONObject();
            PreExistingDiseaseCoversFatherObj.put("Applicable", "False");
            PreExistingDiseaseCoversFatherObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFatherObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFatherObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFatherObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FatherCoversArray.put(PreExistingDiseaseCoversFatherObj);

            JSONObject OutpatientDentalWaitingCoversFatherObj = new JSONObject();
            OutpatientDentalWaitingCoversFatherObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversFatherObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFatherObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFatherObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFatherObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FatherCoversArray.put(OutpatientDentalWaitingCoversFatherObj);

            JSONObject EmergencyTravellingAllowanceCoversFatherObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFatherObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFatherObj.put("CoverGroups", "Emergency Travelling Allowance");
            FatherCoversArray.put(EmergencyTravellingAllowanceCoversFatherObj);

            JSONObject SecondOpinionCoversFatherObj = new JSONObject();
            SecondOpinionCoversFatherObj.put("Applicable", "False");
            SecondOpinionCoversFatherObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFatherObj.put("CoverRate", "0");
            SecondOpinionCoversFatherObj.put("CoverPremium", "0");
            SecondOpinionCoversFatherObj.put("CoverGroups", "Second Opinion");
            FatherCoversArray.put(SecondOpinionCoversFatherObj);

            JSONObject RestCureCoversFatherObj = new JSONObject();
            RestCureCoversFatherObj.put("Applicable", "False");
            RestCureCoversFatherObj.put("CoverSI", strSumInsured);
            RestCureCoversFatherObj.put("CoverRate", "0");
            RestCureCoversFatherObj.put("CoverPremium", "0");
            RestCureCoversFatherObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FatherCoversArray.put(RestCureCoversFatherObj);

            JSONObject ObesityWeightCoversFatherObj = new JSONObject();
            ObesityWeightCoversFatherObj.put("Applicable", "False");
            ObesityWeightCoversFatherObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFatherObj.put("CoverRate", "0");
            ObesityWeightCoversFatherObj.put("CoverPremium", "0");
            ObesityWeightCoversFatherObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FatherCoversArray.put(ObesityWeightCoversFatherObj);

            JSONObject SterilityInfertilityCoversFatherObj = new JSONObject();
            SterilityInfertilityCoversFatherObj.put("Applicable", "False");
            SterilityInfertilityCoversFatherObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFatherObj.put("CoverRate", "0");
            SterilityInfertilityCoversFatherObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFatherObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FatherCoversArray.put(SterilityInfertilityCoversFatherObj);

            JSONObject EnhancedOrganDonorCoversFatherObj = new JSONObject();
            EnhancedOrganDonorCoversFatherObj.put("Applicable", "False");
            EnhancedOrganDonorCoversFatherObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFatherObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFatherObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFatherObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FatherCoversArray.put(EnhancedOrganDonorCoversFatherObj);

            JSONObject PremiumWaiverCoversFatherObj = new JSONObject();
            PremiumWaiverCoversFatherObj.put("Applicable", "False");
            PremiumWaiverCoversFatherObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFatherObj.put("CoverRate", "0");
            PremiumWaiverCoversFatherObj.put("CoverPremium", "0");
            PremiumWaiverCoversFatherObj.put("CoverGroups", "Premium Waiver");
            FatherCoversArray.put(PremiumWaiverCoversFatherObj);

            JSONObject GlobalCoversFatherObj = new JSONObject();
            GlobalCoversFatherObj.put("Applicable", "False");
            GlobalCoversFatherObj.put("CoverSI", strSumInsured);
            GlobalCoversFatherObj.put("CoverRate", "0");
            GlobalCoversFatherObj.put("CoverPremium", "0");
            GlobalCoversFatherObj.put("CoverGroups", "Global Cover");
            FatherCoversArray.put(GlobalCoversFatherObj);


            JSONObject MedicallyAdvisedCoversFatherObj = new JSONObject();
            MedicallyAdvisedCoversFatherObj.put("Applicable", "False");
            MedicallyAdvisedCoversFatherObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFatherObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFatherObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFatherObj.put("CoverGroups", "Medically Advised Support Devices");
            FatherCoversArray.put(MedicallyAdvisedCoversFatherObj);

            JSONObject EmergencyCoversFatherObj = new JSONObject();
            EmergencyCoversFatherObj.put("Applicable", "False");
            EmergencyCoversFatherObj.put("CoverSI", strSumInsured);
            EmergencyCoversFatherObj.put("CoverRate", "0");
            EmergencyCoversFatherObj.put("CoverPremium", "0");
            EmergencyCoversFatherObj.put("CoverGroups", "Emergency Assistance Service");
            FatherCoversArray.put(EmergencyCoversFatherObj);

            JSONObject HomeCareTreatmentCoversFatherObj = new JSONObject();
            HomeCareTreatmentCoversFatherObj.put("Applicable", "False");
            HomeCareTreatmentCoversFatherObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFatherObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFatherObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFatherObj.put("CoverGroups", "Home Care Treatment");
            FatherCoversArray.put(HomeCareTreatmentCoversFatherObj);

            JSONObject WellnessBenefitCoversFatherObj = new JSONObject();
            WellnessBenefitCoversFatherObj.put("Applicable", "False");
            WellnessBenefitCoversFatherObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFatherObj.put("CoverRate", "0");
            WellnessBenefitCoversFatherObj.put("CoverPremium", "0");
            WellnessBenefitCoversFatherObj.put("CoverGroups", "Wellness Benefit");
            FatherCoversArray.put(WellnessBenefitCoversFatherObj);

            JSONObject DiseaseManagementCoversFatherObj = new JSONObject();
            DiseaseManagementCoversFatherObj.put("Applicable", "False");
            DiseaseManagementCoversFatherObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFatherObj.put("CoverRate", "0");
            DiseaseManagementCoversFatherObj.put("CoverPremium", "0");
            DiseaseManagementCoversFatherObj.put("CoverGroups", "Disease Management Program");
            FatherCoversArray.put(DiseaseManagementCoversFatherObj);
            CoverDetailsFatherObj.put("Covers", FatherCoversArray);
            FatherObj.put("CoverDetails", CoverDetailsFatherObj);

            //motherLaw
            JSONObject MotherLawObj = new JSONObject();
            MotherLawObj.put("InsuredType", "Parent");
            MotherLawObj.put("FirstName", "");
            MotherLawObj.put("LastName", "");
            MotherLawObj.put("DOB", strMotherLawAgeEditText);
            MotherLawObj.put("Gender", "F");
            MotherLawObj.put("Relationship", "");
            MotherLawObj.put("Occupation", "");
            MotherLawObj.put("NomineeName", "");
            MotherLawObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsMotherLawObj = new JSONObject();
            HealthIndicatorsMotherLawObj.put("PED", "N");
            HealthIndicatorsMotherLawObj.put("PEDDeclared", "N");
            HealthIndicatorsMotherLawObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsMotherLawObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsMotherLawObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsMotherLawObj.put("CholesterolLevel", "NA");
            HealthIndicatorsMotherLawObj.put("BodyMassIndex", "30");
            HealthIndicatorsMotherLawObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsMotherLawObj.put("CoMorbidity", "N");
            MotherLawObj.put("HealthIndicators", HealthIndicatorsMotherLawObj);

            JSONObject CoverDetailsMotherLawObj = new JSONObject();
            JSONArray MotherLawCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversMotherLawObj = new JSONObject();
            BasicInsuranceCoversMotherLawObj.put("Applicable", "True");
            BasicInsuranceCoversMotherLawObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversMotherLawObj.put("CoverRate", "0");
            BasicInsuranceCoversMotherLawObj.put("CoverPremium", "0");
            BasicInsuranceCoversMotherLawObj.put("CoverGroups", "Basic Insurance Cover");
            MotherLawCoversArray.put(BasicInsuranceCoversMotherLawObj);

            JSONObject PersonalAccidentCoversMotherLawObj = new JSONObject();
            PersonalAccidentCoversMotherLawObj.put("Applicable", "False");
            PersonalAccidentCoversMotherLawObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversMotherLawObj.put("CoverRate", "0");
            PersonalAccidentCoversMotherLawObj.put("CoverPremium", "0");
            PersonalAccidentCoversMotherLawObj.put("CoverGroups", "Personal Accident Cover");
            MotherLawCoversArray.put(PersonalAccidentCoversMotherLawObj);

            JSONObject CriticalIllnessCoversMotherLawObj = new JSONObject();
            CriticalIllnessCoversMotherLawObj.put("Applicable", "False");
            CriticalIllnessCoversMotherLawObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversMotherLawObj.put("CoverRate", "0");
            CriticalIllnessCoversMotherLawObj.put("CoverPremium", "0");
            CriticalIllnessCoversMotherLawObj.put("CoverGroups", "Critical Illness Cover");
            MotherLawCoversArray.put(CriticalIllnessCoversMotherLawObj);


            JSONObject DailyHospitalCoversMotherLawObj = new JSONObject();
            DailyHospitalCoversMotherLawObj.put("Applicable", "False");
            DailyHospitalCoversMotherLawObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversMotherLawObj.put("CoverRate", "0");
            DailyHospitalCoversMotherLawObj.put("CoverPremium", "0");
            DailyHospitalCoversMotherLawObj.put("CoverGroups", "Daily Hospital Cash Cover");
            MotherLawCoversArray.put(DailyHospitalCoversMotherLawObj);

            JSONObject ModernCoversMotherLawObj = new JSONObject();
            ModernCoversMotherLawObj.put("Applicable", "False");
            ModernCoversMotherLawObj.put("CoverSI", strSumInsured);
            ModernCoversMotherLawObj.put("CoverRate", "0");
            ModernCoversMotherLawObj.put("CoverPremium", "0");
            ModernCoversMotherLawObj.put("CoverGroups", "Modern Treatments");
            MotherLawCoversArray.put(ModernCoversMotherLawObj);
            JSONObject ExtensionPreHospitalizationCoversMotherLawObj = new JSONObject();
            ExtensionPreHospitalizationCoversMotherLawObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversMotherLawObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            MotherLawCoversArray.put(ExtensionPreHospitalizationCoversMotherLawObj);

            JSONObject ExtensionPostHospitalizationCoversMotherLawObj = new JSONObject();
            ExtensionPostHospitalizationCoversMotherLawObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversMotherLawObj.put("CoverGroups", "Extension under Post-Hospitalization");
            MotherLawCoversArray.put(ExtensionPostHospitalizationCoversMotherLawObj);


            JSONObject MaternityAndChildcareCoversMotherLawObj = new JSONObject();
            MaternityAndChildcareCoversMotherLawObj.put("Applicable", "False");
            MaternityAndChildcareCoversMotherLawObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversMotherLawObj.put("CoverRate", "0");
            MaternityAndChildcareCoversMotherLawObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversMotherLawObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            MotherLawCoversArray.put(MaternityAndChildcareCoversMotherLawObj);

            JSONObject CoverageForNonMedicalCoversMotherLawObj = new JSONObject();
            CoverageForNonMedicalCoversMotherLawObj.put("Applicable", "False");
            CoverageForNonMedicalCoversMotherLawObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversMotherLawObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversMotherLawObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversMotherLawObj.put("CoverGroups", "Coverage for Non-Medical Items");
            MotherLawCoversArray.put(CoverageForNonMedicalCoversMotherLawObj);

            JSONObject ConditionWaiverCoversMotherLawObj = new JSONObject();
            ConditionWaiverCoversMotherLawObj.put("Applicable", "False");
            ConditionWaiverCoversMotherLawObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversMotherLawObj.put("CoverRate", "0");
            ConditionWaiverCoversMotherLawObj.put("CoverPremium", "0");
            ConditionWaiverCoversMotherLawObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            MotherLawCoversArray.put(ConditionWaiverCoversMotherLawObj);

            JSONObject PreExistingDiseaseCoversMotherLawObj = new JSONObject();
            PreExistingDiseaseCoversMotherLawObj.put("Applicable", "False");
            PreExistingDiseaseCoversMotherLawObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversMotherLawObj.put("CoverRate", "0");
            PreExistingDiseaseCoversMotherLawObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversMotherLawObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            MotherLawCoversArray.put(PreExistingDiseaseCoversMotherLawObj);

            JSONObject OutpatientDentalWaitingCoversMotherLawObj = new JSONObject();
            OutpatientDentalWaitingCoversMotherLawObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversMotherLawObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            MotherLawCoversArray.put(OutpatientDentalWaitingCoversMotherLawObj);

            JSONObject EmergencyTravellingAllowanceCoversMotherLawObj = new JSONObject();
            EmergencyTravellingAllowanceCoversMotherLawObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversMotherLawObj.put("CoverGroups", "Emergency Travelling Allowance");
            MotherLawCoversArray.put(EmergencyTravellingAllowanceCoversMotherLawObj);

            JSONObject SecondOpinionCoversMotherLawObj = new JSONObject();
            SecondOpinionCoversMotherLawObj.put("Applicable", "False");
            SecondOpinionCoversMotherLawObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversMotherLawObj.put("CoverRate", "0");
            SecondOpinionCoversMotherLawObj.put("CoverPremium", "0");
            SecondOpinionCoversMotherLawObj.put("CoverGroups", "Second Opinion");
            MotherLawCoversArray.put(SecondOpinionCoversMotherLawObj);

            JSONObject RestCureCoversMotherLawObj = new JSONObject();
            RestCureCoversMotherLawObj.put("Applicable", "False");
            RestCureCoversMotherLawObj.put("CoverSI", strSumInsured);
            RestCureCoversMotherLawObj.put("CoverRate", "0");
            RestCureCoversMotherLawObj.put("CoverPremium", "0");
            RestCureCoversMotherLawObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            MotherLawCoversArray.put(RestCureCoversMotherLawObj);

            JSONObject ObesityWeightCoversMotherLawObj = new JSONObject();
            ObesityWeightCoversMotherLawObj.put("Applicable", "False");
            ObesityWeightCoversMotherLawObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversMotherLawObj.put("CoverRate", "0");
            ObesityWeightCoversMotherLawObj.put("CoverPremium", "0");
            ObesityWeightCoversMotherLawObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            MotherLawCoversArray.put(ObesityWeightCoversMotherLawObj);

            JSONObject SterilityInfertilityCoversMotherLawObj = new JSONObject();
            SterilityInfertilityCoversMotherLawObj.put("Applicable", "False");
            SterilityInfertilityCoversMotherLawObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversMotherLawObj.put("CoverRate", "0");
            SterilityInfertilityCoversMotherLawObj.put("CoverPremium", "0");
            SterilityInfertilityCoversMotherLawObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            MotherLawCoversArray.put(SterilityInfertilityCoversMotherLawObj);

            JSONObject EnhancedOrganDonorCoversMotherLawObj = new JSONObject();
            EnhancedOrganDonorCoversMotherLawObj.put("Applicable", "False");
            EnhancedOrganDonorCoversMotherLawObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversMotherLawObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversMotherLawObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversMotherLawObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            MotherLawCoversArray.put(EnhancedOrganDonorCoversMotherLawObj);

            JSONObject PremiumWaiverCoversMotherLawObj = new JSONObject();
            PremiumWaiverCoversMotherLawObj.put("Applicable", "False");
            PremiumWaiverCoversMotherLawObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversMotherLawObj.put("CoverRate", "0");
            PremiumWaiverCoversMotherLawObj.put("CoverPremium", "0");
            PremiumWaiverCoversMotherLawObj.put("CoverGroups", "Premium Waiver");
            MotherLawCoversArray.put(PremiumWaiverCoversMotherLawObj);

            JSONObject GlobalCoversMotherLawObj = new JSONObject();
            GlobalCoversMotherLawObj.put("Applicable", "False");
            GlobalCoversMotherLawObj.put("CoverSI", strSumInsured);
            GlobalCoversMotherLawObj.put("CoverRate", "0");
            GlobalCoversMotherLawObj.put("CoverPremium", "0");
            GlobalCoversMotherLawObj.put("CoverGroups", "Global Cover");
            MotherLawCoversArray.put(GlobalCoversMotherLawObj);


            JSONObject MedicallyAdvisedCoversMotherLawObj = new JSONObject();
            MedicallyAdvisedCoversMotherLawObj.put("Applicable", "False");
            MedicallyAdvisedCoversMotherLawObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversMotherLawObj.put("CoverRate", "0");
            MedicallyAdvisedCoversMotherLawObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversMotherLawObj.put("CoverGroups", "Medically Advised Support Devices");
            MotherLawCoversArray.put(MedicallyAdvisedCoversMotherLawObj);

            JSONObject EmergencyCoversMotherLawObj = new JSONObject();
            EmergencyCoversMotherLawObj.put("Applicable", "False");
            EmergencyCoversMotherLawObj.put("CoverSI", strSumInsured);
            EmergencyCoversMotherLawObj.put("CoverRate", "0");
            EmergencyCoversMotherLawObj.put("CoverPremium", "0");
            EmergencyCoversMotherLawObj.put("CoverGroups", "Emergency Assistance Service");
            MotherLawCoversArray.put(EmergencyCoversMotherLawObj);

            JSONObject HomeCareTreatmentCoversMotherLawObj = new JSONObject();
            HomeCareTreatmentCoversMotherLawObj.put("Applicable", "False");
            HomeCareTreatmentCoversMotherLawObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversMotherLawObj.put("CoverRate", "0");
            HomeCareTreatmentCoversMotherLawObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversMotherLawObj.put("CoverGroups", "Home Care Treatment");
            MotherLawCoversArray.put(HomeCareTreatmentCoversMotherLawObj);

            JSONObject WellnessBenefitCoversMotherLawObj = new JSONObject();
            WellnessBenefitCoversMotherLawObj.put("Applicable", "False");
            WellnessBenefitCoversMotherLawObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversMotherLawObj.put("CoverRate", "0");
            WellnessBenefitCoversMotherLawObj.put("CoverPremium", "0");
            WellnessBenefitCoversMotherLawObj.put("CoverGroups", "Wellness Benefit");
            MotherLawCoversArray.put(WellnessBenefitCoversMotherLawObj);

            JSONObject DiseaseManagementCoversMotherLawObj = new JSONObject();
            DiseaseManagementCoversMotherLawObj.put("Applicable", "False");
            DiseaseManagementCoversMotherLawObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversMotherLawObj.put("CoverRate", "0");
            DiseaseManagementCoversMotherLawObj.put("CoverPremium", "0");
            DiseaseManagementCoversMotherLawObj.put("CoverGroups", "Disease Management Program");
            MotherLawCoversArray.put(DiseaseManagementCoversMotherLawObj);
            CoverDetailsMotherLawObj.put("Covers", MotherLawCoversArray);
            MotherLawObj.put("CoverDetails", CoverDetailsMotherLawObj);


            //FatherLaw
            JSONObject FatherLawObj = new JSONObject();
            FatherLawObj.put("InsuredType", "Parent");
            FatherLawObj.put("FirstName", "");
            FatherLawObj.put("LastName", "");
            FatherLawObj.put("DOB", strFatherLawAgeEditText);
            FatherLawObj.put("Gender", "M");
            FatherLawObj.put("Relationship", "");
            FatherLawObj.put("Occupation", "");
            FatherLawObj.put("NomineeName", "");
            FatherLawObj.put("NomineeRelationship", "");

            JSONObject HealthIndicatorsFatherLawObj = new JSONObject();
            HealthIndicatorsFatherLawObj.put("PED", "N");
            HealthIndicatorsFatherLawObj.put("PEDDeclared", "N");
            HealthIndicatorsFatherLawObj.put("BloodSugarLevel", "NA");
            HealthIndicatorsFatherLawObj.put("BloodPressureSystolic", "NA");
            HealthIndicatorsFatherLawObj.put("BloodPressureDiastolic", "NA");
            HealthIndicatorsFatherLawObj.put("CholesterolLevel", "NA");
            HealthIndicatorsFatherLawObj.put("BodyMassIndex", "30");
            HealthIndicatorsFatherLawObj.put("TobaccoAndAlcohol", "N");
            HealthIndicatorsFatherLawObj.put("CoMorbidity", "N");
            FatherLawObj.put("HealthIndicators", HealthIndicatorsFatherLawObj);

            JSONObject CoverDetailsFatherLawObj = new JSONObject();
            JSONArray FatherLawCoversArray = new JSONArray();
            JSONObject BasicInsuranceCoversFatherLawObj = new JSONObject();
            BasicInsuranceCoversFatherLawObj.put("Applicable", "True");
            BasicInsuranceCoversFatherLawObj.put("CoverSI", strSumInsured);
            BasicInsuranceCoversFatherLawObj.put("CoverRate", "0");
            BasicInsuranceCoversFatherLawObj.put("CoverPremium", "0");
            BasicInsuranceCoversFatherLawObj.put("CoverGroups", "Basic Insurance Cover");
            FatherLawCoversArray.put(BasicInsuranceCoversFatherLawObj);

            JSONObject PersonalAccidentCoversFatherLawObj = new JSONObject();
            PersonalAccidentCoversFatherLawObj.put("Applicable", "False");
            PersonalAccidentCoversFatherLawObj.put("CoverSI", strSumInsured);
            PersonalAccidentCoversFatherLawObj.put("CoverRate", "0");
            PersonalAccidentCoversFatherLawObj.put("CoverPremium", "0");
            PersonalAccidentCoversFatherLawObj.put("CoverGroups", "Personal Accident Cover");
            FatherLawCoversArray.put(PersonalAccidentCoversFatherLawObj);

            JSONObject CriticalIllnessCoversFatherLawObj = new JSONObject();
            CriticalIllnessCoversFatherLawObj.put("Applicable", "False");
            CriticalIllnessCoversFatherLawObj.put("CoverSI", strSumInsured);
            CriticalIllnessCoversFatherLawObj.put("CoverRate", "0");
            CriticalIllnessCoversFatherLawObj.put("CoverPremium", "0");
            CriticalIllnessCoversFatherLawObj.put("CoverGroups", "Critical Illness Cover");
            FatherLawCoversArray.put(CriticalIllnessCoversFatherLawObj);


            JSONObject DailyHospitalCoversFatherLawObj = new JSONObject();
            DailyHospitalCoversFatherLawObj.put("Applicable", "False");
            DailyHospitalCoversFatherLawObj.put("CoverSI", strSumInsured);
            DailyHospitalCoversFatherLawObj.put("CoverRate", "0");
            DailyHospitalCoversFatherLawObj.put("CoverPremium", "0");
            DailyHospitalCoversFatherLawObj.put("CoverGroups", "Daily Hospital Cash Cover");
            FatherLawCoversArray.put(DailyHospitalCoversFatherLawObj);

            JSONObject ModernCoversFatherLawObj = new JSONObject();
            ModernCoversFatherLawObj.put("Applicable", "False");
            ModernCoversFatherLawObj.put("CoverSI", strSumInsured);
            ModernCoversFatherLawObj.put("CoverRate", "0");
            ModernCoversFatherLawObj.put("CoverPremium", "0");
            ModernCoversFatherLawObj.put("CoverGroups", "Modern Treatments");
            FatherLawCoversArray.put(ModernCoversFatherLawObj);
            JSONObject ExtensionPreHospitalizationCoversFatherLawObj = new JSONObject();
            ExtensionPreHospitalizationCoversFatherLawObj.put("Applicable", "False");
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverSI", strSumInsured);
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverRate", "0");
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverPremium", "0");
            ExtensionPreHospitalizationCoversFatherLawObj.put("CoverGroups", "Extension under Pre-Hospitalization");
            FatherLawCoversArray.put(ExtensionPreHospitalizationCoversFatherLawObj);

            JSONObject ExtensionPostHospitalizationCoversFatherLawObj = new JSONObject();
            ExtensionPostHospitalizationCoversFatherLawObj.put("Applicable", "False");
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverSI", strSumInsured);
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverRate", "0");
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverPremium", "0");
            ExtensionPostHospitalizationCoversFatherLawObj.put("CoverGroups", "Extension under Post-Hospitalization");
            FatherLawCoversArray.put(ExtensionPostHospitalizationCoversFatherLawObj);


            JSONObject MaternityAndChildcareCoversFatherLawObj = new JSONObject();
            MaternityAndChildcareCoversFatherLawObj.put("Applicable", "False");
            MaternityAndChildcareCoversFatherLawObj.put("CoverSI", strSumInsured);
            MaternityAndChildcareCoversFatherLawObj.put("CoverRate", "0");
            MaternityAndChildcareCoversFatherLawObj.put("CoverPremium", "0");
            MaternityAndChildcareCoversFatherLawObj.put("CoverGroups", "Maternity and Childcare Benefit Waiting Period Modification");
            FatherLawCoversArray.put(MaternityAndChildcareCoversFatherLawObj);

            JSONObject CoverageForNonMedicalCoversFatherLawObj = new JSONObject();
            CoverageForNonMedicalCoversFatherLawObj.put("Applicable", "False");
            CoverageForNonMedicalCoversFatherLawObj.put("CoverSI", strSumInsured);
            CoverageForNonMedicalCoversFatherLawObj.put("CoverRate", "0");
            CoverageForNonMedicalCoversFatherLawObj.put("CoverPremium", "0");
            CoverageForNonMedicalCoversFatherLawObj.put("CoverGroups", "Coverage for Non-Medical Items");
            FatherLawCoversArray.put(CoverageForNonMedicalCoversFatherLawObj);

            JSONObject ConditionWaiverCoversFatherLawObj = new JSONObject();
            ConditionWaiverCoversFatherLawObj.put("Applicable", "False");
            ConditionWaiverCoversFatherLawObj.put("CoverSI", strSumInsured);
            ConditionWaiverCoversFatherLawObj.put("CoverRate", "0");
            ConditionWaiverCoversFatherLawObj.put("CoverPremium", "0");
            ConditionWaiverCoversFatherLawObj.put("CoverGroups", "Condition waiver under Restore Benefit");
            FatherLawCoversArray.put(ConditionWaiverCoversFatherLawObj);

            JSONObject PreExistingDiseaseCoversFatherLawObj = new JSONObject();
            PreExistingDiseaseCoversFatherLawObj.put("Applicable", "False");
            PreExistingDiseaseCoversFatherLawObj.put("CoverSI", strSumInsured);
            PreExistingDiseaseCoversFatherLawObj.put("CoverRate", "0");
            PreExistingDiseaseCoversFatherLawObj.put("CoverPremium", "0");
            PreExistingDiseaseCoversFatherLawObj.put("CoverGroups", "Pre-Existing Disease waiting period");
            FatherLawCoversArray.put(PreExistingDiseaseCoversFatherLawObj);

            JSONObject OutpatientDentalWaitingCoversFatherLawObj = new JSONObject();
            OutpatientDentalWaitingCoversFatherLawObj.put("Applicable", "False");
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverSI", strSumInsured);
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverRate", "0");
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverPremium", "0");
            OutpatientDentalWaitingCoversFatherLawObj.put("CoverGroups", "Outpatient Dental Waiting Period Modification");
            FatherLawCoversArray.put(OutpatientDentalWaitingCoversFatherLawObj);

            JSONObject EmergencyTravellingAllowanceCoversFatherLawObj = new JSONObject();
            EmergencyTravellingAllowanceCoversFatherLawObj.put("Applicable", "False");
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverSI", strSumInsured);
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverRate", "0");
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverPremium", "0");
            EmergencyTravellingAllowanceCoversFatherLawObj.put("CoverGroups", "Emergency Travelling Allowance");
            FatherLawCoversArray.put(EmergencyTravellingAllowanceCoversFatherLawObj);

            JSONObject SecondOpinionCoversFatherLawObj = new JSONObject();
            SecondOpinionCoversFatherLawObj.put("Applicable", "False");
            SecondOpinionCoversFatherLawObj.put("CoverSI", strSumInsured);
            SecondOpinionCoversFatherLawObj.put("CoverRate", "0");
            SecondOpinionCoversFatherLawObj.put("CoverPremium", "0");
            SecondOpinionCoversFatherLawObj.put("CoverGroups", "Second Opinion");
            FatherLawCoversArray.put(SecondOpinionCoversFatherLawObj);

            JSONObject RestCureCoversFatherLawObj = new JSONObject();
            RestCureCoversFatherLawObj.put("Applicable", "False");
            RestCureCoversFatherLawObj.put("CoverSI", strSumInsured);
            RestCureCoversFatherLawObj.put("CoverRate", "0");
            RestCureCoversFatherLawObj.put("CoverPremium", "0");
            RestCureCoversFatherLawObj.put("CoverGroups", "Rest Cure, Rehabilitation and Respite Care Nursing Care Expenses Extension");
            FatherLawCoversArray.put(RestCureCoversFatherLawObj);

            JSONObject ObesityWeightCoversFatherLawObj = new JSONObject();
            ObesityWeightCoversFatherLawObj.put("Applicable", "False");
            ObesityWeightCoversFatherLawObj.put("CoverSI", strSumInsured);
            ObesityWeightCoversFatherLawObj.put("CoverRate", "0");
            ObesityWeightCoversFatherLawObj.put("CoverPremium", "0");
            ObesityWeightCoversFatherLawObj.put("CoverGroups", "Obesity/ Weight Control Expenses Extension");
            FatherLawCoversArray.put(ObesityWeightCoversFatherLawObj);

            JSONObject SterilityInfertilityCoversFatherLawObj = new JSONObject();
            SterilityInfertilityCoversFatherLawObj.put("Applicable", "False");
            SterilityInfertilityCoversFatherLawObj.put("CoverSI", strSumInsured);
            SterilityInfertilityCoversFatherLawObj.put("CoverRate", "0");
            SterilityInfertilityCoversFatherLawObj.put("CoverPremium", "0");
            SterilityInfertilityCoversFatherLawObj.put("CoverGroups", "Sterility and Infertility Treatment Expenses Extension");
            FatherLawCoversArray.put(SterilityInfertilityCoversFatherLawObj);

            JSONObject EnhancedOrganDonorCoversFatherLawObj = new JSONObject();
            EnhancedOrganDonorCoversFatherLawObj.put("Applicable", "False");
            EnhancedOrganDonorCoversFatherLawObj.put("CoverSI", strSumInsured);
            EnhancedOrganDonorCoversFatherLawObj.put("CoverRate", "0");
            EnhancedOrganDonorCoversFatherLawObj.put("CoverPremium", "0");
            EnhancedOrganDonorCoversFatherLawObj.put("CoverGroups", "Enhanced Organ Donor Expenses");
            FatherLawCoversArray.put(EnhancedOrganDonorCoversFatherLawObj);

            JSONObject PremiumWaiverCoversFatherLawObj = new JSONObject();
            PremiumWaiverCoversFatherLawObj.put("Applicable", "False");
            PremiumWaiverCoversFatherLawObj.put("CoverSI", strSumInsured);
            PremiumWaiverCoversFatherLawObj.put("CoverRate", "0");
            PremiumWaiverCoversFatherLawObj.put("CoverPremium", "0");
            PremiumWaiverCoversFatherLawObj.put("CoverGroups", "Premium Waiver");
            FatherLawCoversArray.put(PremiumWaiverCoversFatherLawObj);

            JSONObject GlobalCoversFatherLawObj = new JSONObject();
            GlobalCoversFatherLawObj.put("Applicable", "False");
            GlobalCoversFatherLawObj.put("CoverSI", strSumInsured);
            GlobalCoversFatherLawObj.put("CoverRate", "0");
            GlobalCoversFatherLawObj.put("CoverPremium", "0");
            GlobalCoversFatherLawObj.put("CoverGroups", "Global Cover");
            FatherLawCoversArray.put(GlobalCoversFatherLawObj);


            JSONObject MedicallyAdvisedCoversFatherLawObj = new JSONObject();
            MedicallyAdvisedCoversFatherLawObj.put("Applicable", "False");
            MedicallyAdvisedCoversFatherLawObj.put("CoverSI", strSumInsured);
            MedicallyAdvisedCoversFatherLawObj.put("CoverRate", "0");
            MedicallyAdvisedCoversFatherLawObj.put("CoverPremium", "0");
            MedicallyAdvisedCoversFatherLawObj.put("CoverGroups", "Medically Advised Support Devices");
            FatherLawCoversArray.put(MedicallyAdvisedCoversFatherLawObj);

            JSONObject EmergencyCoversFatherLawObj = new JSONObject();
            EmergencyCoversFatherLawObj.put("Applicable", "False");
            EmergencyCoversFatherLawObj.put("CoverSI", strSumInsured);
            EmergencyCoversFatherLawObj.put("CoverRate", "0");
            EmergencyCoversFatherLawObj.put("CoverPremium", "0");
            EmergencyCoversFatherLawObj.put("CoverGroups", "Emergency Assistance Service");
            FatherLawCoversArray.put(EmergencyCoversFatherLawObj);

            JSONObject HomeCareTreatmentCoversFatherLawObj = new JSONObject();
            HomeCareTreatmentCoversFatherLawObj.put("Applicable", "False");
            HomeCareTreatmentCoversFatherLawObj.put("CoverSI", strSumInsured);
            HomeCareTreatmentCoversFatherLawObj.put("CoverRate", "0");
            HomeCareTreatmentCoversFatherLawObj.put("CoverPremium", "0");
            HomeCareTreatmentCoversFatherLawObj.put("CoverGroups", "Home Care Treatment");
            FatherLawCoversArray.put(HomeCareTreatmentCoversFatherLawObj);

            JSONObject WellnessBenefitCoversFatherLawObj = new JSONObject();
            WellnessBenefitCoversFatherLawObj.put("Applicable", "False");
            WellnessBenefitCoversFatherLawObj.put("CoverSI", strSumInsured);
            WellnessBenefitCoversFatherLawObj.put("CoverRate", "0");
            WellnessBenefitCoversFatherLawObj.put("CoverPremium", "0");
            WellnessBenefitCoversFatherLawObj.put("CoverGroups", "Wellness Benefit");
            FatherLawCoversArray.put(WellnessBenefitCoversFatherLawObj);

            JSONObject DiseaseManagementCoversFatherLawObj = new JSONObject();
            DiseaseManagementCoversFatherLawObj.put("Applicable", "False");
            DiseaseManagementCoversFatherLawObj.put("CoverSI", strSumInsured);
            DiseaseManagementCoversFatherLawObj.put("CoverRate", "0");
            DiseaseManagementCoversFatherLawObj.put("CoverPremium", "0");
            DiseaseManagementCoversFatherLawObj.put("CoverGroups", "Disease Management Program");
            FatherLawCoversArray.put(DiseaseManagementCoversFatherLawObj);
            CoverDetailsFatherLawObj.put("Covers", FatherLawCoversArray);
            FatherLawObj.put("CoverDetails", CoverDetailsFatherLawObj);

            if (str_policyType_spinner.equals("Individual")) {
                if (strCheckBoxSelf.equals("Checked") || strCheckBoxSpouse.equals("Checked") || strCheckBoxMother.equals("Checked") || strCheckBoxFather.equals("Checked") || strCheckBoxMotherLaw.equals("Checked") || strCheckBoxFatherLaw.equals("Checked")) {
                    InsuredDetailsGroupArray.put(InsuredDetailsObj);
                }
            } else {
                if (strCheckBoxSelf.equals("Checked")) {
                    InsuredDetailsGroupArray.put(InsuredDetailsObj);
                }
                if (strCheckBoxSpouse.equals("Checked")) {
                    InsuredDetailsGroupArray.put(SecondAdultObj);
                }
                if (mCounter == 1) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                }
                if (mCounter == 2) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                    InsuredDetailsGroupArray.put(SecondChildObj);
                }
                if (mCounter == 3) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                    InsuredDetailsGroupArray.put(SecondChildObj);
                    InsuredDetailsGroupArray.put(ThirdChildObj);
                }
                if (mCounter == 4) {
                    InsuredDetailsGroupArray.put(FirstChildObj);
                    InsuredDetailsGroupArray.put(SecondChildObj);
                    InsuredDetailsGroupArray.put(ThirdChildObj);
                    InsuredDetailsGroupArray.put(FourthChildObj);
                }
                if (strCheckBoxMother.equals("Checked")) {
                    InsuredDetailsGroupArray.put(MotherObj);
                }
                if (strCheckBoxFather.equals("Checked")) {
                    InsuredDetailsGroupArray.put(FatherObj);
                }
                if (strCheckBoxMotherLaw.equals("Checked")) {
                    InsuredDetailsGroupArray.put(MotherLawObj);
                }
                if (strCheckBoxFatherLaw.equals("Checked")) {
                    InsuredDetailsGroupArray.put(FatherLawObj);
                }
            }
            InsuredDetailsObject.put("InsuredDetailsGroup", InsuredDetailsGroupArray);
            RisksDataObject.put("InsuredDetails", InsuredDetailsObject);

            //otherLoading
            JSONObject OtherLoadingsObject = new JSONObject();
            JSONObject OtherLoadingGroupObject = new JSONObject();
            JSONObject OtherLoadingGroupDataObject = new JSONObject();
            OtherLoadingGroupDataObject.put("LoadingAmount", "0");
            OtherLoadingGroupDataObject.put("LoadingRate", "0");
            OtherLoadingGroupDataObject.put("SumInsured", "0");
            OtherLoadingGroupDataObject.put("Rate", "0");
            OtherLoadingGroupDataObject.put("Premium", "0");
            OtherLoadingGroupDataObject.put("Applicable", "False");
            OtherLoadingGroupDataObject.put("Description", "NULL");
            OtherLoadingGroupObject.put("OtherLoadingGroupData", OtherLoadingGroupDataObject);
            OtherLoadingsObject.put("OtherLoadingGroup", OtherLoadingGroupObject);

            RisksDataObject.put("OtherLoadings", OtherLoadingsObject);
//            RiskObject.put("RisksData",RisksDataObject);
//            RisksObject.put("Risks",RiskObject);
            //OtherDiscounts
            JSONObject OtherDiscountsObject = new JSONObject();
            JSONArray OtherDiscountGroupArray = new JSONArray();
            JSONObject TreatmentObject = new JSONObject();
            TreatmentObject.put("DiscountAmount", "0");
            TreatmentObject.put("DiscountRate", "0");
            TreatmentObject.put("SumInsured", strSumInsured);
            TreatmentObject.put("Rate", "0");
            TreatmentObject.put("Premium", "0");
            TreatmentObject.put("Applicable", "False");
            TreatmentObject.put("Description", "Treatment only in tiered network");
            OtherDiscountGroupArray.put(TreatmentObject);

            JSONObject CoPaymentObject = new JSONObject();
            CoPaymentObject.put("DiscountAmount", "0");
            CoPaymentObject.put("DiscountRate", "0");
            CoPaymentObject.put("SumInsured", strSumInsured);
            CoPaymentObject.put("Rate", "0");
            CoPaymentObject.put("Premium", "0");
            CoPaymentObject.put("Applicable", "False");
            CoPaymentObject.put("Description", "Co-payment");
            OtherDiscountGroupArray.put(CoPaymentObject);


            JSONObject LongObject = new JSONObject();
            LongObject.put("DiscountAmount", "0");
            LongObject.put("DiscountRate", "0");
            LongObject.put("SumInsured", strSumInsured);
            LongObject.put("Rate", "0");
            LongObject.put("Premium", "0");
            LongObject.put("Applicable", LongTermDiscountStatus);
            LongObject.put("Description", "Long term discount");
            OtherDiscountGroupArray.put(LongObject);

            JSONObject FamilyDiscountObject = new JSONObject();
            FamilyDiscountObject.put("DiscountAmount", "0");
            FamilyDiscountObject.put("DiscountRate", "0");
            FamilyDiscountObject.put("SumInsured", strSumInsured);
            FamilyDiscountObject.put("Rate", "0");
            FamilyDiscountObject.put("Premium", "0");
            FamilyDiscountObject.put("Applicable", "False");
            FamilyDiscountObject.put("Description", "Family Discount");
            OtherDiscountGroupArray.put(FamilyDiscountObject);

            JSONObject SubCategoryObject = new JSONObject();
            SubCategoryObject.put("DiscountAmount", "0");
            SubCategoryObject.put("DiscountRate", "0");
            SubCategoryObject.put("SumInsured", strSumInsured);
            SubCategoryObject.put("Rate", "0");
            SubCategoryObject.put("Premium", "0");
            SubCategoryObject.put("Applicable", "False");
            SubCategoryObject.put("Description", "Sub Category Discount");
            OtherDiscountGroupArray.put(SubCategoryObject);


            JSONObject DirectPolicyObject = new JSONObject();
            DirectPolicyObject.put("DiscountAmount", "0");
            DirectPolicyObject.put("DiscountRate", "0");
            DirectPolicyObject.put("SumInsured", strSumInsured);
            DirectPolicyObject.put("Rate", "0");
            DirectPolicyObject.put("Premium", "0");
            DirectPolicyObject.put("Applicable", "True");
            DirectPolicyObject.put("Description", "Direct Policy Discount");
            OtherDiscountGroupArray.put(DirectPolicyObject);

            JSONObject LoyaltyDiscountObject = new JSONObject();
            LoyaltyDiscountObject.put("DiscountAmount", "0");
            LoyaltyDiscountObject.put("DiscountRate", "0");
            LoyaltyDiscountObject.put("SumInsured", strSumInsured);
            LoyaltyDiscountObject.put("Rate", "0");
            LoyaltyDiscountObject.put("Premium", "0");
            LoyaltyDiscountObject.put("Applicable", "False");
            LoyaltyDiscountObject.put("Description", "Loyalty Discount");
            OtherDiscountGroupArray.put(LoyaltyDiscountObject);

            JSONObject EmployeeDiscountObject = new JSONObject();
            EmployeeDiscountObject.put("DiscountAmount", "0");
            EmployeeDiscountObject.put("DiscountRate", "0");
            EmployeeDiscountObject.put("SumInsured", strSumInsured);
            EmployeeDiscountObject.put("Rate", "0");
            EmployeeDiscountObject.put("Premium", "0");
            EmployeeDiscountObject.put("Applicable", "False");
            EmployeeDiscountObject.put("Description", "Employee Discount");
            OtherDiscountGroupArray.put(EmployeeDiscountObject);

            JSONObject OrganDonorDiscountObject = new JSONObject();
            OrganDonorDiscountObject.put("DiscountAmount", "0");
            OrganDonorDiscountObject.put("DiscountRate", "0");
            OrganDonorDiscountObject.put("SumInsured", strSumInsured);
            OrganDonorDiscountObject.put("Rate", "0");
            OrganDonorDiscountObject.put("Premium", "0");
            OrganDonorDiscountObject.put("Applicable", "False");
            OrganDonorDiscountObject.put("Description", "Organ Donor Discount");
            OtherDiscountGroupArray.put(OrganDonorDiscountObject);

            OtherDiscountsObject.put("OtherDiscountGroup", OtherDiscountGroupArray);
            RisksDataObject.put("OtherDiscounts", OtherDiscountsObject);
            RiskObject.put("RisksData", RisksDataObject);
            RisksObject.put("Risk", RiskObject);
            ProductObject.put("Risks", RisksObject);

            RootObject.put("Product", ProductObject);
            //PaymentDetails
            JSONObject PaymentDetailsObj = new JSONObject();
            JSONObject PaymentEntryObj = new JSONObject();
            PaymentEntryObj.put("PaymentId", "NULL");
            PaymentEntryObj.put("MICRCheque", "NULL");
            PaymentEntryObj.put("InstrumentDate", "NULL");
            PaymentEntryObj.put("DraweeBankName", "NULL");
            PaymentEntryObj.put("HOUSEBANKNAME", "NULL");
            PaymentEntryObj.put("AmountPaid", "NULL");
            PaymentEntryObj.put("PaymentType", "NULL");
            PaymentEntryObj.put("PaymentMode", "NULL");
            PaymentEntryObj.put("InstrumentNo", "NULL");
            PaymentEntryObj.put("Status", "NULL");
            PaymentEntryObj.put("DepositSlipNo", "NULL");
            PaymentEntryObj.put("PayerType", "NULL");
            PaymentDetailsObj.put("PaymentEntry", PaymentEntryObj);
            RootObject.put("PaymentDetails", PaymentDetailsObj);
            //Error
            JSONObject ErrorsObj = new JSONObject();
            ErrorsObj.put("ErrorCode", "0");
            ErrorsObj.put("ErrDescription", "NULL");
            RootObject.put("Errors", ErrorsObj);

            //mainObject
            object.put("Root", RootObject);
        }
        catch (Exception e) {
            e.printStackTrace();
        }
        ProjectVolleyRequest req = new ProjectVolleyRequest(NewCHIAddOns.this, object, UrlHealthConstants.revisedCHIURL, new ResponseListener() {
            @Override
            public void onSuccess(JSONObject object, int Tag) {
                try {
                    JSONObject RootJsonObject = object.getJSONObject("Root");
                    JSONObject ErrorsJsonObject = RootJsonObject.getJSONObject("Errors");
                    String ErrDescription = ErrorsJsonObject.getString("ErrDescription");
                    if (ErrDescription.equals("")) {
                        if (Tag == RequestHealthConstants.RevisedCHIQuotation) {
                            try {
                                JSONObject CustomerJsonObject = RootJsonObject.getJSONObject("Customer");
                                Log.e("CustomerJsonObject", CustomerJsonObject.toString());
                                JSONObject ProductJsonObject = RootJsonObject.getJSONObject("Product");
                                Log.e("ProductJsonObject", ProductJsonObject.toString());
                                JSONObject PremiumCalculationJsonObject = ProductJsonObject.getJSONObject("PremiumCalculation");
                                String strTotalPremiumCard = PremiumCalculationJsonObject.getString("TotalPremium");
                                Log.e("strTotalPremiumCard", strTotalPremiumCard);
                                double mathRoundTotalPremium = Double.parseDouble(strTotalPremiumCard);
                                double mathRoundTotal = Math.round(mathRoundTotalPremium * 100.0) / 100.0;
                                Log.e("mathRoundTotal", String.valueOf(mathRoundTotal));
                                if (yearRadio.equals("OneYearSecondCard") || yearRadio.equals("TwoYearSecondCard") || yearRadio.equals("ThreeYearSecondCard")) {
                                    TotalPremiumSecond.setText(String.valueOf(mathRoundTotal));
                                    TotalPremiumSelectPlan.setText("");
                                } else {
                                    TotalPremiumSelectPlan.setText(String.valueOf(mathRoundTotal));
                                }
                                health_quote();
                            } catch (JSONException e) {
                                e.printStackTrace();
                            }
                        }
                    } else {
                        Toast.makeText(getApplication(), "" + ErrDescription, Toast.LENGTH_SHORT).show();
                    }
                } catch (JSONException e) {
                    e.printStackTrace();
                }
            }

            @Override
            public void onError(VolleyError error, int Tag) {

            }
        },
        RequestHealthConstants.RevisedCHIQuotation);
        Log.d("objectTotalcard", String.valueOf(object));
        req.execute();

    }
    private void popupElse() {
        strProposerEdtName=str_edt_name;
        Intent intent = new Intent(NewCHIAddOns.this, PersonalInformationCHI.class);
        intent.putExtra("str_edt_name", str_edt_name);
        intent.putExtra("str_age", str_age);
        intent.putExtra("str_edt_phone", str_edt_phone);
        intent.putExtra("str_email", str_email);
        intent.putExtra("str_policyType_spinner", str_policyType_spinner);
        intent.putExtra("str_IndividualTypeEdit", str_IndividualTypeEdit);
        intent.putExtra("strSelfAgeEditText", strSelfAgeEditText);
        intent.putExtra("strGenderSpinner", strGenderSpinner);
        intent.putExtra("strGender", strGender);
        intent.putExtra("strCheckBoxSpouse", strCheckBoxSpouse);
        intent.putExtra("strSpouseAgeEditText", strSpouseAgeEditText);
        intent.putExtra("strCheckBoxMother", strCheckBoxMother);
        intent.putExtra("strMotherAgeEditText", strMotherAgeEditText);
        intent.putExtra("strFatherAgeEditText", strFatherAgeEditText);
        intent.putExtra("strCheckBoxFather", strCheckBoxFather);
        intent.putExtra("strCheckBoxMotherLaw", strCheckBoxMotherLaw);
        intent.putExtra("strMotherLawAgeEditText", strMotherLawAgeEditText);
        intent.putExtra("strCheckBoxFatherLaw", strCheckBoxFatherLaw);
        intent.putExtra("strFatherLawAgeEditText", strFatherLawAgeEditText);
        intent.putExtra("strFirstSonAgeEditText", strFirstSonAgeEditText);
        intent.putExtra("strSecondSonAgeEditText", strSecondSonAgeEditText);
        intent.putExtra("strThirdSonAgeEditText", strThirdSonAgeEditText);
        intent.putExtra("strFourSonAgeEditText", strFourSonAgeEditText);
        intent.putExtra("strCheckBoxSon", strCheckBoxSon);
        intent.putExtra("mCounter", mCounter);
        intent.putExtra("strTotalPremium", strTotalPremium);
        intent.putExtra("strBasicPremium", strBasicPremium);
        intent.putExtra("PosPolicyNo", PosPolicyNo);
        intent.putExtra("strSumInsured", strSumInsured);
        intent.putExtra("strPlanTypeTXT", strPlanTypeTXT);
        intent.putExtra("NetPremium", NetPremium);
        intent.putExtra("strPolicyTenure", strPolicyTenure);
        intent.putExtra("PlanType", PlanType);
        intent.putExtra("BasicStatus", BasicStatus);
        intent.putExtra("PersonalStatus", PersonalStatus);
        intent.putExtra("CriticalStatus", CriticalStatus);
        intent.putExtra("DailyHospitalSatus", DailyHospitalSatus);
        intent.putExtra("ModernTreatmentsStatus", ModernTreatmentsStatus);
        intent.putExtra("ExtensionPreHospitalization", ExtensionPreHospitalization);
        intent.putExtra("ExtensionPr0Hospitalization", ExtensionPr0Hospitalization);
        intent.putExtra("MaternityAndChildcare", MaternityAndChildcare);
        intent.putExtra("MaternityAndChildcareAddOn", MaternityAndChildcareAddOn);
        intent.putExtra("MaternityAndChildcareMale", MaternityAndChildcareMale);
        intent.putExtra("SterilityInfertilityMale", SterilityInfertilityMale);
        intent.putExtra("CoverageNonMedical", CoverageNonMedical);
        intent.putExtra("ConditionWaiverStatus", ConditionWaiverStatus);
        intent.putExtra("PersonalAccidentACoverStatus", PersonalAccidentACoverStatus);
        intent.putExtra("PersonalAccidentBCoverStatus", PersonalAccidentBCoverStatus);
        intent.putExtra("PreExistingDiseaseStatus", PreExistingDiseaseStatus);
        intent.putExtra("OutpatientDentalStatus", OutpatientDentalStatus);
        intent.putExtra("SecondOpinionStatus", SecondOpinionStatus);
        intent.putExtra("RestCureStatus", RestCureStatus);
        intent.putExtra("ObesityWeightStatus", ObesityWeightStatus);
        intent.putExtra("SterilityInfertilityStatus", SterilityInfertilityStatus);
        intent.putExtra("EnhancedOrganStatus", EnhancedOrganStatus);
        intent.putExtra("GlobalCoverStatus", GlobalCoverStatus);
        intent.putExtra("MedicallyAdvisedStatus", MedicallyAdvisedStatus);
        intent.putExtra("EmergencyAssistanceStatus", EmergencyAssistanceStatus);
        intent.putExtra("HomeCareStatus", HomeCareStatus);
        intent.putExtra("WellnessBenefitStatus", WellnessBenefitStatus);
        intent.putExtra("DiseaseManagementStatus", DiseaseManagementStatus);
        intent.putExtra("LoyaltyDiscountStatus", LoyaltyDiscountStatus);
        intent.putExtra("CoPaymentStatus", CoPaymentStatus);
        intent.putExtra("TreatmentStatus", TreatmentStatus);
        intent.putExtra("strPolicyNumber", strPolicyNumber);
        intent.putExtra("CoPaymentLoading", CoPaymentLoading);
        intent.putExtra("EmergencyTravellingStatus", EmergencyTravellingStatus);
        intent.putExtra("PremiumWaiverStatus", PremiumWaiverStatus);
        intent.putExtra("strPackageOne", strPackageOne);
        intent.putExtra("strCheckBoxSelf", strCheckBoxSelf);
        intent.putExtra("yearRadio", yearRadio);
        intent.putExtra("addons", addons);
        intent.putExtra("Discounts", Discounts);
        intent.putExtra("strPackage1", strPackage1);
        intent.putExtra("strPackageTwo", strPackageTwo);
        intent.putExtra("strPackageThree", strPackageThree);
        intent.putExtra("strPackageFour", strPackageFour);
        intent.putExtra("strPackageFive", strPackageFive);
        intent.putExtra("LongTermDiscountStatus", LongTermDiscountStatus);
        intent.putExtra("SubCategoryDiscountStatus", SubCategoryDiscountStatus);
        intent.putExtra("SubCategory", SubCategory);
        intent.putExtra("FamilyComposition", FamilyComposition);
        intent.putExtra("ParentComposition", ParentComposition);
        intent.putExtra("DirectPolicyDiscountPremium", DirectPolicyDiscountPremium);
        intent.putExtra("FamilyTypeCounter", FamilyTypeCounter);
        intent.putExtra("LongTermDiscountDiscountPremium", LongTermDiscountDiscountPremium);
        intent.putExtra("SubCategoryDiscountPremium", SubCategoryDiscountPremium);
        intent.putExtra("doubleCoPaymentDiscountPremium", doubleCoPaymentDiscountPremium);
        intent.putExtra("strPackageSix", strPackageSix);
        intent.putExtra("PersonalAccidentCategory", PersonalAccidentCategory);
        intent.putExtra("PersonalStatusChildFour", PersonalStatusChildFour);
        intent.putExtra("PersonalStatusChildThird", PersonalStatusChildThird);
        intent.putExtra("PersonalStatusChildTwo", PersonalStatusChildTwo);
        intent.putExtra("PersonalStatusChildOne", PersonalStatusChildOne);
        intent.putExtra("DailyHospitalCoverPremium", DailyHospitalCoverPremium);
        intent.putExtra("CriticalIllnessCoverPremium", CriticalIllnessCoverPremium);
        intent.putExtra("ExtensionPreHospitalizationCoverPremium", ExtensionPreHospitalizationCoverPremium);
        intent.putExtra("ExtensionProHospitalizationCoverPremium", ExtensionProHospitalizationCoverPremium);
        intent.putExtra("MaternityChildcareCoverPremium", MaternityChildcareCoverPremium);
        intent.putExtra("CoverageNonMedicalCoverPremium", CoverageNonMedicalCoverPremium);
        intent.putExtra("ConditionWaiverCoverPremium", ConditionWaiverCoverPremium);
        intent.putExtra("PersonalAccidentCoverPremium", PersonalAccidentCoverPremium);
        intent.putExtra("PreExistingDiseaseCoverPremium", PreExistingDiseaseCoverPremium);
        intent.putExtra("OutpatientDentalCoverPremium", OutpatientDentalCoverPremium);
        intent.putExtra("EmergencyTravellingCoverPremium", EmergencyTravellingCoverPremium);
        intent.putExtra("SecondOpinionCoverPremium", SecondOpinionCoverPremium);
        intent.putExtra("RestCureCoverPremium", RestCureCoverPremium);
        intent.putExtra("ObesityWeightCoverPremium", ObesityWeightCoverPremium);
        intent.putExtra("SterilityInfertilityCoverPremium", SterilityInfertilityCoverPremium);
        intent.putExtra("EnhancedCoverPremium", EnhancedCoverPremium);
        intent.putExtra("MedicallyAdvisedCoverPremium", MedicallyAdvisedCoverPremium);
        intent.putExtra("EmergencyAssistanceCoverPremium", EmergencyAssistanceCoverPremium);
        intent.putExtra("HomeCareCoverPremium", HomeCareCoverPremium);
        intent.putExtra("WellnessBenefitCoverPremium", WellnessBenefitCoverPremium);
        intent.putExtra("DiseaseManagementCoverPremium", DiseaseManagementCoverPremium);
        intent.putExtra("GlobalCoverCoverPremium", GlobalCoverCoverPremium);
        intent.putExtra("ModernTreatmentCoverPremium", ModernTreatmentCoverPremium);
        intent.putExtra("PremiumWaiverCoverPremium", PremiumWaiverCoverPremium);
        intent.putExtra("OrganDiscountStatus", OrganDiscountStatus);
        intent.putExtra("OrganDonorDiscountPremium", OrganDonorDiscountPremium);
        intent.putExtra("checkPackage", checkPackage);
        intent.putExtra("CoPaymentCheckBoxCheck", CoPaymentCheckBoxCheck);
        intent.putExtra("TreatmentCheckBoxCheck", TreatmentCheckBoxCheck);
        intent.putExtra("SubCategoryDiscountStatusCheck", SubCategoryDiscountStatusCheck);
        intent.putExtra("strCoPaymentEditText", strCoPaymentEditText);
        intent.putExtra("strSubLimitEditText", strSubLimitEditText);
        intent.putExtra("selectFirstYearChild", selectFirstYearChild);
        intent.putExtra("selectSecSonChild", selectSecSonChild);
        intent.putExtra("selectThirdSonChild", selectThirdSonChild);
        intent.putExtra("selectYearChildFour", selectYearChildFour);
        intent.putExtra("selectYearSecondAdult", selectYearSecondAdult);
        intent.putExtra("selectYearAdult", selectYearAdult);
        intent.putExtra("selectYearMotherAdult", selectYearMotherAdult);
        intent.putExtra("selectMotherLawAdult", selectMotherLawAdult);
        intent.putExtra("selectFatherLawAdult", selectFatherLawAdult);
        intent.putExtra("selectYearFatherAdult", selectYearFatherAdult);
        intent.putExtra("copayemntMax", copayemntMax);
        intent.putExtra("TiresDiscount", TiresDiscount);
        intent.putExtra("LongTerm", LongTerm);
        intent.putExtra("DirectPolicy", DirectPolicy);
        intent.putExtra("OrganDonar", OrganDonar);
        intent.putExtra("loyalityDiscount", loyalityDiscount);
        intent.putExtra("strProposerEdtName", strProposerEdtName);
        intent.putExtra("strEmailIDEditSelf", strEmailIDEditSelf);
        intent.putExtra("strPinCodeEdit",strPinCodeEdit);
        intent.putExtra("strCityEdit",strCityEdit);
        intent.putExtra("strStateEdit",strStateEdit);
        intent.putExtra("address1",address1);
        intent.putExtra("address2",address2);
        intent.putExtra("address3",address3);
        intent.putExtra("corresAddress1",corresAddress1);
        intent.putExtra("corresAddress2",corresAddress2);
        intent.putExtra("corresAddress3",corresAddress3);
        intent.putExtra("sublimt", sublimt);
        intent.putExtra("firstName",firstName);
        intent.putExtra("middleName",middleName);
        intent.putExtra("lastName",lastName);
        intent.putExtra("ckycNo",ckycNo);
        intent.putExtra("uniqueTransactionNumber",uniqueTransactionNumber);
        intent.putExtra("selectYearProposer",selectYearProposer);
        intent.putExtra("strDob",strDob);
        intent.putExtra("strIDTypeName",strIDTypeName);
        intent.putExtra("permAndCorresAddSame",permAndCorresAddSame);
        intent.putExtra("GSt", GSt);
        intent.putExtra("strFor", "0");
        startActivity(intent);
        finish();
    }
    @Override
    public void onBackPressed() {
        backMethod();
    }
}